// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedServerNetworking struct {
	pulumi.CustomResourceState

	// Operation description
	Description pulumi.StringOutput `pulumi:"description"`
	// Interface or interfaces aggregation.
	Interfaces DedicatedServerNetworkingInterfaceArrayOutput `pulumi:"interfaces"`
	// The internal name of your dedicated server.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Operation status
	Status   pulumi.StringOutput                        `pulumi:"status"`
	Timeouts DedicatedServerNetworkingTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDedicatedServerNetworking registers a new resource with the given unique name, arguments, and options.
func NewDedicatedServerNetworking(ctx *pulumi.Context,
	name string, args *DedicatedServerNetworkingArgs, opts ...pulumi.ResourceOption) (*DedicatedServerNetworking, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interfaces == nil {
		return nil, errors.New("invalid value for required argument 'Interfaces'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DedicatedServerNetworking
	err = ctx.RegisterPackageResource("ovh:index/dedicatedServerNetworking:DedicatedServerNetworking", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedServerNetworking gets an existing DedicatedServerNetworking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedServerNetworking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedServerNetworkingState, opts ...pulumi.ResourceOption) (*DedicatedServerNetworking, error) {
	var resource DedicatedServerNetworking
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/dedicatedServerNetworking:DedicatedServerNetworking", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedServerNetworking resources.
type dedicatedServerNetworkingState struct {
	// Operation description
	Description *string `pulumi:"description"`
	// Interface or interfaces aggregation.
	Interfaces []DedicatedServerNetworkingInterface `pulumi:"interfaces"`
	// The internal name of your dedicated server.
	ServiceName *string `pulumi:"serviceName"`
	// Operation status
	Status   *string                            `pulumi:"status"`
	Timeouts *DedicatedServerNetworkingTimeouts `pulumi:"timeouts"`
}

type DedicatedServerNetworkingState struct {
	// Operation description
	Description pulumi.StringPtrInput
	// Interface or interfaces aggregation.
	Interfaces DedicatedServerNetworkingInterfaceArrayInput
	// The internal name of your dedicated server.
	ServiceName pulumi.StringPtrInput
	// Operation status
	Status   pulumi.StringPtrInput
	Timeouts DedicatedServerNetworkingTimeoutsPtrInput
}

func (DedicatedServerNetworkingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedServerNetworkingState)(nil)).Elem()
}

type dedicatedServerNetworkingArgs struct {
	// Interface or interfaces aggregation.
	Interfaces []DedicatedServerNetworkingInterface `pulumi:"interfaces"`
	// The internal name of your dedicated server.
	ServiceName string                             `pulumi:"serviceName"`
	Timeouts    *DedicatedServerNetworkingTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DedicatedServerNetworking resource.
type DedicatedServerNetworkingArgs struct {
	// Interface or interfaces aggregation.
	Interfaces DedicatedServerNetworkingInterfaceArrayInput
	// The internal name of your dedicated server.
	ServiceName pulumi.StringInput
	Timeouts    DedicatedServerNetworkingTimeoutsPtrInput
}

func (DedicatedServerNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedServerNetworkingArgs)(nil)).Elem()
}

type DedicatedServerNetworkingInput interface {
	pulumi.Input

	ToDedicatedServerNetworkingOutput() DedicatedServerNetworkingOutput
	ToDedicatedServerNetworkingOutputWithContext(ctx context.Context) DedicatedServerNetworkingOutput
}

func (*DedicatedServerNetworking) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedServerNetworking)(nil)).Elem()
}

func (i *DedicatedServerNetworking) ToDedicatedServerNetworkingOutput() DedicatedServerNetworkingOutput {
	return i.ToDedicatedServerNetworkingOutputWithContext(context.Background())
}

func (i *DedicatedServerNetworking) ToDedicatedServerNetworkingOutputWithContext(ctx context.Context) DedicatedServerNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerNetworkingOutput)
}

type DedicatedServerNetworkingOutput struct{ *pulumi.OutputState }

func (DedicatedServerNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedServerNetworking)(nil)).Elem()
}

func (o DedicatedServerNetworkingOutput) ToDedicatedServerNetworkingOutput() DedicatedServerNetworkingOutput {
	return o
}

func (o DedicatedServerNetworkingOutput) ToDedicatedServerNetworkingOutputWithContext(ctx context.Context) DedicatedServerNetworkingOutput {
	return o
}

// Operation description
func (o DedicatedServerNetworkingOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedServerNetworking) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Interface or interfaces aggregation.
func (o DedicatedServerNetworkingOutput) Interfaces() DedicatedServerNetworkingInterfaceArrayOutput {
	return o.ApplyT(func(v *DedicatedServerNetworking) DedicatedServerNetworkingInterfaceArrayOutput { return v.Interfaces }).(DedicatedServerNetworkingInterfaceArrayOutput)
}

// The internal name of your dedicated server.
func (o DedicatedServerNetworkingOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedServerNetworking) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Operation status
func (o DedicatedServerNetworkingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedServerNetworking) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o DedicatedServerNetworkingOutput) Timeouts() DedicatedServerNetworkingTimeoutsPtrOutput {
	return o.ApplyT(func(v *DedicatedServerNetworking) DedicatedServerNetworkingTimeoutsPtrOutput { return v.Timeouts }).(DedicatedServerNetworkingTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedServerNetworkingInput)(nil)).Elem(), &DedicatedServerNetworking{})
	pulumi.RegisterOutputType(DedicatedServerNetworkingOutput{})
}
