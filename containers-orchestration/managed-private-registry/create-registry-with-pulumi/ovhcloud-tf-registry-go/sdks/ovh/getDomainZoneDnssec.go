// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDomainZoneDnssec(ctx *pulumi.Context, args *LookupDomainZoneDnssecArgs, opts ...pulumi.InvokeOption) (*LookupDomainZoneDnssecResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupDomainZoneDnssecResult
	err = ctx.InvokePackage("ovh:index/getDomainZoneDnssec:getDomainZoneDnssec", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainZoneDnssec.
type LookupDomainZoneDnssecArgs struct {
	ZoneName string `pulumi:"zoneName"`
}

// A collection of values returned by getDomainZoneDnssec.
type LookupDomainZoneDnssecResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Status   string `pulumi:"status"`
	ZoneName string `pulumi:"zoneName"`
}

func LookupDomainZoneDnssecOutput(ctx *pulumi.Context, args LookupDomainZoneDnssecOutputArgs, opts ...pulumi.InvokeOption) LookupDomainZoneDnssecResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainZoneDnssecResult, error) {
			args := v.(LookupDomainZoneDnssecArgs)
			r, err := LookupDomainZoneDnssec(ctx, &args, opts...)
			var s LookupDomainZoneDnssecResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainZoneDnssecResultOutput)
}

// A collection of arguments for invoking getDomainZoneDnssec.
type LookupDomainZoneDnssecOutputArgs struct {
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (LookupDomainZoneDnssecOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainZoneDnssecArgs)(nil)).Elem()
}

// A collection of values returned by getDomainZoneDnssec.
type LookupDomainZoneDnssecResultOutput struct{ *pulumi.OutputState }

func (LookupDomainZoneDnssecResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainZoneDnssecResult)(nil)).Elem()
}

func (o LookupDomainZoneDnssecResultOutput) ToLookupDomainZoneDnssecResultOutput() LookupDomainZoneDnssecResultOutput {
	return o
}

func (o LookupDomainZoneDnssecResultOutput) ToLookupDomainZoneDnssecResultOutputWithContext(ctx context.Context) LookupDomainZoneDnssecResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDomainZoneDnssecResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneDnssecResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDomainZoneDnssecResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneDnssecResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupDomainZoneDnssecResultOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneDnssecResult) string { return v.ZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainZoneDnssecResultOutput{})
}
