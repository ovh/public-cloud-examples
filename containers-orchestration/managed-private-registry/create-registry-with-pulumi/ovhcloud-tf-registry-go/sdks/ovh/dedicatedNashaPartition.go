// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedNashaPartition struct {
	pulumi.CustomResourceState

	Capacity        pulumi.Float64Output   `pulumi:"capacity"`
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	Protocol        pulumi.StringOutput    `pulumi:"protocol"`
	ServiceName     pulumi.StringOutput    `pulumi:"serviceName"`
	Size            pulumi.Float64Output   `pulumi:"size"`
	UsedBySnapshots pulumi.Float64Output   `pulumi:"usedBySnapshots"`
}

// NewDedicatedNashaPartition registers a new resource with the given unique name, arguments, and options.
func NewDedicatedNashaPartition(ctx *pulumi.Context,
	name string, args *DedicatedNashaPartitionArgs, opts ...pulumi.ResourceOption) (*DedicatedNashaPartition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DedicatedNashaPartition
	err = ctx.RegisterPackageResource("ovh:index/dedicatedNashaPartition:DedicatedNashaPartition", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedNashaPartition gets an existing DedicatedNashaPartition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedNashaPartition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedNashaPartitionState, opts ...pulumi.ResourceOption) (*DedicatedNashaPartition, error) {
	var resource DedicatedNashaPartition
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/dedicatedNashaPartition:DedicatedNashaPartition", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedNashaPartition resources.
type dedicatedNashaPartitionState struct {
	Capacity        *float64 `pulumi:"capacity"`
	Description     *string  `pulumi:"description"`
	Name            *string  `pulumi:"name"`
	Protocol        *string  `pulumi:"protocol"`
	ServiceName     *string  `pulumi:"serviceName"`
	Size            *float64 `pulumi:"size"`
	UsedBySnapshots *float64 `pulumi:"usedBySnapshots"`
}

type DedicatedNashaPartitionState struct {
	Capacity        pulumi.Float64PtrInput
	Description     pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Protocol        pulumi.StringPtrInput
	ServiceName     pulumi.StringPtrInput
	Size            pulumi.Float64PtrInput
	UsedBySnapshots pulumi.Float64PtrInput
}

func (DedicatedNashaPartitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedNashaPartitionState)(nil)).Elem()
}

type dedicatedNashaPartitionArgs struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Protocol    string  `pulumi:"protocol"`
	ServiceName string  `pulumi:"serviceName"`
	Size        float64 `pulumi:"size"`
}

// The set of arguments for constructing a DedicatedNashaPartition resource.
type DedicatedNashaPartitionArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Protocol    pulumi.StringInput
	ServiceName pulumi.StringInput
	Size        pulumi.Float64Input
}

func (DedicatedNashaPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedNashaPartitionArgs)(nil)).Elem()
}

type DedicatedNashaPartitionInput interface {
	pulumi.Input

	ToDedicatedNashaPartitionOutput() DedicatedNashaPartitionOutput
	ToDedicatedNashaPartitionOutputWithContext(ctx context.Context) DedicatedNashaPartitionOutput
}

func (*DedicatedNashaPartition) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedNashaPartition)(nil)).Elem()
}

func (i *DedicatedNashaPartition) ToDedicatedNashaPartitionOutput() DedicatedNashaPartitionOutput {
	return i.ToDedicatedNashaPartitionOutputWithContext(context.Background())
}

func (i *DedicatedNashaPartition) ToDedicatedNashaPartitionOutputWithContext(ctx context.Context) DedicatedNashaPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedNashaPartitionOutput)
}

type DedicatedNashaPartitionOutput struct{ *pulumi.OutputState }

func (DedicatedNashaPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedNashaPartition)(nil)).Elem()
}

func (o DedicatedNashaPartitionOutput) ToDedicatedNashaPartitionOutput() DedicatedNashaPartitionOutput {
	return o
}

func (o DedicatedNashaPartitionOutput) ToDedicatedNashaPartitionOutputWithContext(ctx context.Context) DedicatedNashaPartitionOutput {
	return o
}

func (o DedicatedNashaPartitionOutput) Capacity() pulumi.Float64Output {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.Float64Output { return v.Capacity }).(pulumi.Float64Output)
}

func (o DedicatedNashaPartitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DedicatedNashaPartitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DedicatedNashaPartitionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o DedicatedNashaPartitionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o DedicatedNashaPartitionOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.Float64Output { return v.Size }).(pulumi.Float64Output)
}

func (o DedicatedNashaPartitionOutput) UsedBySnapshots() pulumi.Float64Output {
	return o.ApplyT(func(v *DedicatedNashaPartition) pulumi.Float64Output { return v.UsedBySnapshots }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedNashaPartitionInput)(nil)).Elem(), &DedicatedNashaPartition{})
	pulumi.RegisterOutputType(DedicatedNashaPartitionOutput{})
}
