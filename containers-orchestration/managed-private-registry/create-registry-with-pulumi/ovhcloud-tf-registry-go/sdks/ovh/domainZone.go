// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainZone struct {
	pulumi.CustomResourceState

	// Is DNSSEC supported by this zone
	DnssecSupported pulumi.BoolOutput `pulumi:"dnssecSupported"`
	// hasDnsAnycast flag of the DNS zone
	HasDnsAnycast pulumi.BoolOutput `pulumi:"hasDnsAnycast"`
	// Last update date of the DNS zone
	LastUpdate pulumi.StringOutput `pulumi:"lastUpdate"`
	// Zone name
	Name pulumi.StringOutput `pulumi:"name"`
	// Name servers that host the DNS zone
	NameServers pulumi.StringArrayOutput `pulumi:"nameServers"`
	// Details about an Order
	Orders DomainZoneOrderArrayOutput `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	OvhUrn        pulumi.StringOutput `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan DomainZonePlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions DomainZonePlanOptionArrayOutput `pulumi:"planOptions"`
}

// NewDomainZone registers a new resource with the given unique name, arguments, and options.
func NewDomainZone(ctx *pulumi.Context,
	name string, args *DomainZoneArgs, opts ...pulumi.ResourceOption) (*DomainZone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DomainZone
	err = ctx.RegisterPackageResource("ovh:index/domainZone:DomainZone", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainZone gets an existing DomainZone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainZoneState, opts ...pulumi.ResourceOption) (*DomainZone, error) {
	var resource DomainZone
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/domainZone:DomainZone", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainZone resources.
type domainZoneState struct {
	// Is DNSSEC supported by this zone
	DnssecSupported *bool `pulumi:"dnssecSupported"`
	// hasDnsAnycast flag of the DNS zone
	HasDnsAnycast *bool `pulumi:"hasDnsAnycast"`
	// Last update date of the DNS zone
	LastUpdate *string `pulumi:"lastUpdate"`
	// Zone name
	Name *string `pulumi:"name"`
	// Name servers that host the DNS zone
	NameServers []string `pulumi:"nameServers"`
	// Details about an Order
	Orders []DomainZoneOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	OvhUrn        *string `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *DomainZonePlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []DomainZonePlanOption `pulumi:"planOptions"`
}

type DomainZoneState struct {
	// Is DNSSEC supported by this zone
	DnssecSupported pulumi.BoolPtrInput
	// hasDnsAnycast flag of the DNS zone
	HasDnsAnycast pulumi.BoolPtrInput
	// Last update date of the DNS zone
	LastUpdate pulumi.StringPtrInput
	// Zone name
	Name pulumi.StringPtrInput
	// Name servers that host the DNS zone
	NameServers pulumi.StringArrayInput
	// Details about an Order
	Orders DomainZoneOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	OvhUrn        pulumi.StringPtrInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan DomainZonePlanPtrInput
	// Product Plan to order
	PlanOptions DomainZonePlanOptionArrayInput
}

func (DomainZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneState)(nil)).Elem()
}

type domainZoneArgs struct {
	// Details about an Order
	Orders []DomainZoneOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan DomainZonePlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []DomainZonePlanOption `pulumi:"planOptions"`
}

// The set of arguments for constructing a DomainZone resource.
type DomainZoneArgs struct {
	// Details about an Order
	Orders DomainZoneOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan DomainZonePlanInput
	// Product Plan to order
	PlanOptions DomainZonePlanOptionArrayInput
}

func (DomainZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneArgs)(nil)).Elem()
}

type DomainZoneInput interface {
	pulumi.Input

	ToDomainZoneOutput() DomainZoneOutput
	ToDomainZoneOutputWithContext(ctx context.Context) DomainZoneOutput
}

func (*DomainZone) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZone)(nil)).Elem()
}

func (i *DomainZone) ToDomainZoneOutput() DomainZoneOutput {
	return i.ToDomainZoneOutputWithContext(context.Background())
}

func (i *DomainZone) ToDomainZoneOutputWithContext(ctx context.Context) DomainZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneOutput)
}

type DomainZoneOutput struct{ *pulumi.OutputState }

func (DomainZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZone)(nil)).Elem()
}

func (o DomainZoneOutput) ToDomainZoneOutput() DomainZoneOutput {
	return o
}

func (o DomainZoneOutput) ToDomainZoneOutputWithContext(ctx context.Context) DomainZoneOutput {
	return o
}

// Is DNSSEC supported by this zone
func (o DomainZoneOutput) DnssecSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.BoolOutput { return v.DnssecSupported }).(pulumi.BoolOutput)
}

// hasDnsAnycast flag of the DNS zone
func (o DomainZoneOutput) HasDnsAnycast() pulumi.BoolOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.BoolOutput { return v.HasDnsAnycast }).(pulumi.BoolOutput)
}

// Last update date of the DNS zone
func (o DomainZoneOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringOutput { return v.LastUpdate }).(pulumi.StringOutput)
}

// Zone name
func (o DomainZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name servers that host the DNS zone
func (o DomainZoneOutput) NameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringArrayOutput { return v.NameServers }).(pulumi.StringArrayOutput)
}

// Details about an Order
func (o DomainZoneOutput) Orders() DomainZoneOrderArrayOutput {
	return o.ApplyT(func(v *DomainZone) DomainZoneOrderArrayOutput { return v.Orders }).(DomainZoneOrderArrayOutput)
}

// Ovh Subsidiary
func (o DomainZoneOutput) OvhSubsidiary() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringOutput { return v.OvhSubsidiary }).(pulumi.StringOutput)
}

func (o DomainZoneOutput) OvhUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringOutput { return v.OvhUrn }).(pulumi.StringOutput)
}

// Ovh payment mode
//
// Deprecated: Deprecated
func (o DomainZoneOutput) PaymentMean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZone) pulumi.StringPtrOutput { return v.PaymentMean }).(pulumi.StringPtrOutput)
}

// Product Plan to order
func (o DomainZoneOutput) Plan() DomainZonePlanOutput {
	return o.ApplyT(func(v *DomainZone) DomainZonePlanOutput { return v.Plan }).(DomainZonePlanOutput)
}

// Product Plan to order
func (o DomainZoneOutput) PlanOptions() DomainZonePlanOptionArrayOutput {
	return o.ApplyT(func(v *DomainZone) DomainZonePlanOptionArrayOutput { return v.PlanOptions }).(DomainZonePlanOptionArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneInput)(nil)).Elem(), &DomainZone{})
	pulumi.RegisterOutputType(DomainZoneOutput{})
}
