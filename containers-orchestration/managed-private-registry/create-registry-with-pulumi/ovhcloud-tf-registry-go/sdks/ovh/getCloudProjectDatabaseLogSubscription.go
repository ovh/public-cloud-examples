// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseLogSubscription(ctx *pulumi.Context, args *LookupCloudProjectDatabaseLogSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseLogSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseLogSubscriptionResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseLogSubscription:getCloudProjectDatabaseLogSubscription", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseLogSubscription.
type LookupCloudProjectDatabaseLogSubscriptionArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Engine      string  `pulumi:"engine"`
	Id          string  `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseLogSubscription.
type LookupCloudProjectDatabaseLogSubscriptionResult struct {
	ClusterId      string  `pulumi:"clusterId"`
	CreatedAt      string  `pulumi:"createdAt"`
	Engine         string  `pulumi:"engine"`
	Id             string  `pulumi:"id"`
	Kind           string  `pulumi:"kind"`
	LdpServiceName string  `pulumi:"ldpServiceName"`
	ResourceName   string  `pulumi:"resourceName"`
	ResourceType   string  `pulumi:"resourceType"`
	ServiceName    *string `pulumi:"serviceName"`
	StreamId       string  `pulumi:"streamId"`
	UpdatedAt      string  `pulumi:"updatedAt"`
}

func LookupCloudProjectDatabaseLogSubscriptionOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseLogSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseLogSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseLogSubscriptionResult, error) {
			args := v.(LookupCloudProjectDatabaseLogSubscriptionArgs)
			r, err := LookupCloudProjectDatabaseLogSubscription(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseLogSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseLogSubscriptionResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseLogSubscription.
type LookupCloudProjectDatabaseLogSubscriptionOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Engine      pulumi.StringInput    `pulumi:"engine"`
	Id          pulumi.StringInput    `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseLogSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseLogSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseLogSubscription.
type LookupCloudProjectDatabaseLogSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseLogSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseLogSubscriptionResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ToLookupCloudProjectDatabaseLogSubscriptionResultOutput() LookupCloudProjectDatabaseLogSubscriptionResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ToLookupCloudProjectDatabaseLogSubscriptionResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseLogSubscriptionResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.Engine }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) LdpServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.LdpServiceName }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.StreamId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseLogSubscriptionResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseLogSubscriptionResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseLogSubscriptionResultOutput{})
}
