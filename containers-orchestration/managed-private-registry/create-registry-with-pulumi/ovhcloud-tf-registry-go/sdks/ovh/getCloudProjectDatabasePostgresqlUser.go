// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabasePostgresqlUser(ctx *pulumi.Context, args *LookupCloudProjectDatabasePostgresqlUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabasePostgresqlUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabasePostgresqlUserResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabasePostgresqlUser:getCloudProjectDatabasePostgresqlUser", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabasePostgresqlUser.
type LookupCloudProjectDatabasePostgresqlUserArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          *string `pulumi:"id"`
	Name        string  `pulumi:"name"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabasePostgresqlUser.
type LookupCloudProjectDatabasePostgresqlUserResult struct {
	ClusterId   string   `pulumi:"clusterId"`
	CreatedAt   string   `pulumi:"createdAt"`
	Id          string   `pulumi:"id"`
	Name        string   `pulumi:"name"`
	Roles       []string `pulumi:"roles"`
	ServiceName *string  `pulumi:"serviceName"`
	Status      string   `pulumi:"status"`
}

func LookupCloudProjectDatabasePostgresqlUserOutput(ctx *pulumi.Context, args LookupCloudProjectDatabasePostgresqlUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabasePostgresqlUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabasePostgresqlUserResult, error) {
			args := v.(LookupCloudProjectDatabasePostgresqlUserArgs)
			r, err := LookupCloudProjectDatabasePostgresqlUser(ctx, &args, opts...)
			var s LookupCloudProjectDatabasePostgresqlUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabasePostgresqlUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabasePostgresqlUser.
type LookupCloudProjectDatabasePostgresqlUserOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringInput    `pulumi:"name"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabasePostgresqlUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabasePostgresqlUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabasePostgresqlUser.
type LookupCloudProjectDatabasePostgresqlUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabasePostgresqlUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabasePostgresqlUserResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) ToLookupCloudProjectDatabasePostgresqlUserResultOutput() LookupCloudProjectDatabasePostgresqlUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) ToLookupCloudProjectDatabasePostgresqlUserResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabasePostgresqlUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabasePostgresqlUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabasePostgresqlUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabasePostgresqlUserResultOutput{})
}
