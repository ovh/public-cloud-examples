// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabase(ctx *pulumi.Context, args *LookupCloudProjectDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabase:getCloudProjectDatabase", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabase.
type LookupCloudProjectDatabaseArgs struct {
	Engine      string  `pulumi:"engine"`
	Id          string  `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabase.
type LookupCloudProjectDatabaseResult struct {
	AdvancedConfiguration map[string]string                          `pulumi:"advancedConfiguration"`
	BackupRegions         []string                                   `pulumi:"backupRegions"`
	BackupTime            string                                     `pulumi:"backupTime"`
	CreatedAt             string                                     `pulumi:"createdAt"`
	Description           string                                     `pulumi:"description"`
	DiskSize              float64                                    `pulumi:"diskSize"`
	DiskType              string                                     `pulumi:"diskType"`
	Endpoints             []GetCloudProjectDatabaseEndpoint          `pulumi:"endpoints"`
	Engine                string                                     `pulumi:"engine"`
	Flavor                string                                     `pulumi:"flavor"`
	Id                    string                                     `pulumi:"id"`
	IpRestrictions        []GetCloudProjectDatabaseIpRestrictionType `pulumi:"ipRestrictions"`
	KafkaRestApi          bool                                       `pulumi:"kafkaRestApi"`
	KafkaSchemaRegistry   bool                                       `pulumi:"kafkaSchemaRegistry"`
	MaintenanceTime       string                                     `pulumi:"maintenanceTime"`
	NetworkType           string                                     `pulumi:"networkType"`
	Nodes                 []GetCloudProjectDatabaseNode              `pulumi:"nodes"`
	OpensearchAclsEnabled bool                                       `pulumi:"opensearchAclsEnabled"`
	Plan                  string                                     `pulumi:"plan"`
	ServiceName           *string                                    `pulumi:"serviceName"`
	Status                string                                     `pulumi:"status"`
	Version               string                                     `pulumi:"version"`
}

func LookupCloudProjectDatabaseOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseResult, error) {
			args := v.(LookupCloudProjectDatabaseArgs)
			r, err := LookupCloudProjectDatabase(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabase.
type LookupCloudProjectDatabaseOutputArgs struct {
	Engine      pulumi.StringInput    `pulumi:"engine"`
	Id          pulumi.StringInput    `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabase.
type LookupCloudProjectDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseResultOutput) ToLookupCloudProjectDatabaseResultOutput() LookupCloudProjectDatabaseResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseResultOutput) ToLookupCloudProjectDatabaseResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseResultOutput) AdvancedConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) map[string]string { return v.AdvancedConfiguration }).(pulumi.StringMapOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) BackupRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) []string { return v.BackupRegions }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) BackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.BackupTime }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) DiskSize() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) float64 { return v.DiskSize }).(pulumi.Float64Output)
}

func (o LookupCloudProjectDatabaseResultOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Endpoints() GetCloudProjectDatabaseEndpointArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) []GetCloudProjectDatabaseEndpoint { return v.Endpoints }).(GetCloudProjectDatabaseEndpointArrayOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Engine }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) IpRestrictions() GetCloudProjectDatabaseIpRestrictionTypeArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) []GetCloudProjectDatabaseIpRestrictionType {
		return v.IpRestrictions
	}).(GetCloudProjectDatabaseIpRestrictionTypeArrayOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) KafkaRestApi() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) bool { return v.KafkaRestApi }).(pulumi.BoolOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) KafkaSchemaRegistry() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) bool { return v.KafkaSchemaRegistry }).(pulumi.BoolOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Nodes() GetCloudProjectDatabaseNodeArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) []GetCloudProjectDatabaseNode { return v.Nodes }).(GetCloudProjectDatabaseNodeArrayOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) OpensearchAclsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) bool { return v.OpensearchAclsEnabled }).(pulumi.BoolOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseResultOutput{})
}
