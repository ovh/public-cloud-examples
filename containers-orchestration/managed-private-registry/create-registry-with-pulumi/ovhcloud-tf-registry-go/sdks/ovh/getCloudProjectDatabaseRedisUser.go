// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseRedisUser(ctx *pulumi.Context, args *LookupCloudProjectDatabaseRedisUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseRedisUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseRedisUserResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseRedisUser:getCloudProjectDatabaseRedisUser", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseRedisUser.
type LookupCloudProjectDatabaseRedisUserArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          *string `pulumi:"id"`
	Name        string  `pulumi:"name"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseRedisUser.
type LookupCloudProjectDatabaseRedisUserResult struct {
	Categories  []string `pulumi:"categories"`
	Channels    []string `pulumi:"channels"`
	ClusterId   string   `pulumi:"clusterId"`
	Commands    []string `pulumi:"commands"`
	CreatedAt   string   `pulumi:"createdAt"`
	Id          string   `pulumi:"id"`
	Keys        []string `pulumi:"keys"`
	Name        string   `pulumi:"name"`
	ServiceName *string  `pulumi:"serviceName"`
	Status      string   `pulumi:"status"`
}

func LookupCloudProjectDatabaseRedisUserOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseRedisUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseRedisUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseRedisUserResult, error) {
			args := v.(LookupCloudProjectDatabaseRedisUserArgs)
			r, err := LookupCloudProjectDatabaseRedisUser(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseRedisUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseRedisUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseRedisUser.
type LookupCloudProjectDatabaseRedisUserOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringInput    `pulumi:"name"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseRedisUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseRedisUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseRedisUser.
type LookupCloudProjectDatabaseRedisUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseRedisUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseRedisUserResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) ToLookupCloudProjectDatabaseRedisUserResultOutput() LookupCloudProjectDatabaseRedisUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) ToLookupCloudProjectDatabaseRedisUserResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseRedisUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseRedisUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseRedisUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseRedisUserResultOutput{})
}
