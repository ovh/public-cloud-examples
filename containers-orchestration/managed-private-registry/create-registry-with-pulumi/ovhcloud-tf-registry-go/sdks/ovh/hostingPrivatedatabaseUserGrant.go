// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostingPrivatedatabaseUserGrant struct {
	pulumi.CustomResourceState

	// Database name where add grant
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// Database name where add grant
	Grant pulumi.StringOutput `pulumi:"grant"`
	// The internal name of your private database
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// User name used to connect on your databases
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewHostingPrivatedatabaseUserGrant registers a new resource with the given unique name, arguments, and options.
func NewHostingPrivatedatabaseUserGrant(ctx *pulumi.Context,
	name string, args *HostingPrivatedatabaseUserGrantArgs, opts ...pulumi.ResourceOption) (*HostingPrivatedatabaseUserGrant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.Grant == nil {
		return nil, errors.New("invalid value for required argument 'Grant'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HostingPrivatedatabaseUserGrant
	err = ctx.RegisterPackageResource("ovh:index/hostingPrivatedatabaseUserGrant:HostingPrivatedatabaseUserGrant", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostingPrivatedatabaseUserGrant gets an existing HostingPrivatedatabaseUserGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostingPrivatedatabaseUserGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostingPrivatedatabaseUserGrantState, opts ...pulumi.ResourceOption) (*HostingPrivatedatabaseUserGrant, error) {
	var resource HostingPrivatedatabaseUserGrant
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/hostingPrivatedatabaseUserGrant:HostingPrivatedatabaseUserGrant", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostingPrivatedatabaseUserGrant resources.
type hostingPrivatedatabaseUserGrantState struct {
	// Database name where add grant
	DatabaseName *string `pulumi:"databaseName"`
	// Database name where add grant
	Grant *string `pulumi:"grant"`
	// The internal name of your private database
	ServiceName *string `pulumi:"serviceName"`
	// User name used to connect on your databases
	UserName *string `pulumi:"userName"`
}

type HostingPrivatedatabaseUserGrantState struct {
	// Database name where add grant
	DatabaseName pulumi.StringPtrInput
	// Database name where add grant
	Grant pulumi.StringPtrInput
	// The internal name of your private database
	ServiceName pulumi.StringPtrInput
	// User name used to connect on your databases
	UserName pulumi.StringPtrInput
}

func (HostingPrivatedatabaseUserGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingPrivatedatabaseUserGrantState)(nil)).Elem()
}

type hostingPrivatedatabaseUserGrantArgs struct {
	// Database name where add grant
	DatabaseName string `pulumi:"databaseName"`
	// Database name where add grant
	Grant string `pulumi:"grant"`
	// The internal name of your private database
	ServiceName string `pulumi:"serviceName"`
	// User name used to connect on your databases
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a HostingPrivatedatabaseUserGrant resource.
type HostingPrivatedatabaseUserGrantArgs struct {
	// Database name where add grant
	DatabaseName pulumi.StringInput
	// Database name where add grant
	Grant pulumi.StringInput
	// The internal name of your private database
	ServiceName pulumi.StringInput
	// User name used to connect on your databases
	UserName pulumi.StringInput
}

func (HostingPrivatedatabaseUserGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingPrivatedatabaseUserGrantArgs)(nil)).Elem()
}

type HostingPrivatedatabaseUserGrantInput interface {
	pulumi.Input

	ToHostingPrivatedatabaseUserGrantOutput() HostingPrivatedatabaseUserGrantOutput
	ToHostingPrivatedatabaseUserGrantOutputWithContext(ctx context.Context) HostingPrivatedatabaseUserGrantOutput
}

func (*HostingPrivatedatabaseUserGrant) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingPrivatedatabaseUserGrant)(nil)).Elem()
}

func (i *HostingPrivatedatabaseUserGrant) ToHostingPrivatedatabaseUserGrantOutput() HostingPrivatedatabaseUserGrantOutput {
	return i.ToHostingPrivatedatabaseUserGrantOutputWithContext(context.Background())
}

func (i *HostingPrivatedatabaseUserGrant) ToHostingPrivatedatabaseUserGrantOutputWithContext(ctx context.Context) HostingPrivatedatabaseUserGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingPrivatedatabaseUserGrantOutput)
}

type HostingPrivatedatabaseUserGrantOutput struct{ *pulumi.OutputState }

func (HostingPrivatedatabaseUserGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingPrivatedatabaseUserGrant)(nil)).Elem()
}

func (o HostingPrivatedatabaseUserGrantOutput) ToHostingPrivatedatabaseUserGrantOutput() HostingPrivatedatabaseUserGrantOutput {
	return o
}

func (o HostingPrivatedatabaseUserGrantOutput) ToHostingPrivatedatabaseUserGrantOutputWithContext(ctx context.Context) HostingPrivatedatabaseUserGrantOutput {
	return o
}

// Database name where add grant
func (o HostingPrivatedatabaseUserGrantOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseUserGrant) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// Database name where add grant
func (o HostingPrivatedatabaseUserGrantOutput) Grant() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseUserGrant) pulumi.StringOutput { return v.Grant }).(pulumi.StringOutput)
}

// The internal name of your private database
func (o HostingPrivatedatabaseUserGrantOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseUserGrant) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// User name used to connect on your databases
func (o HostingPrivatedatabaseUserGrantOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseUserGrant) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostingPrivatedatabaseUserGrantInput)(nil)).Elem(), &HostingPrivatedatabaseUserGrant{})
	pulumi.RegisterOutputType(HostingPrivatedatabaseUserGrantOutput{})
}
