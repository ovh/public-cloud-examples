// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCloudProjectRegionLoadbalancerLogSubscriptions(ctx *pulumi.Context, args *GetCloudProjectRegionLoadbalancerLogSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectRegionLoadbalancerLogSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetCloudProjectRegionLoadbalancerLogSubscriptionsResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectRegionLoadbalancerLogSubscriptions:getCloudProjectRegionLoadbalancerLogSubscriptions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscriptions.
type GetCloudProjectRegionLoadbalancerLogSubscriptionsArgs struct {
	Id             *string `pulumi:"id"`
	Kind           *string `pulumi:"kind"`
	LoadbalancerId string  `pulumi:"loadbalancerId"`
	RegionName     string  `pulumi:"regionName"`
	ServiceName    *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectRegionLoadbalancerLogSubscriptions.
type GetCloudProjectRegionLoadbalancerLogSubscriptionsResult struct {
	Id              string   `pulumi:"id"`
	Kind            *string  `pulumi:"kind"`
	LoadbalancerId  string   `pulumi:"loadbalancerId"`
	RegionName      string   `pulumi:"regionName"`
	ServiceName     *string  `pulumi:"serviceName"`
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

func GetCloudProjectRegionLoadbalancerLogSubscriptionsOutput(ctx *pulumi.Context, args GetCloudProjectRegionLoadbalancerLogSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudProjectRegionLoadbalancerLogSubscriptionsResult, error) {
			args := v.(GetCloudProjectRegionLoadbalancerLogSubscriptionsArgs)
			r, err := GetCloudProjectRegionLoadbalancerLogSubscriptions(ctx, &args, opts...)
			var s GetCloudProjectRegionLoadbalancerLogSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput)
}

// A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscriptions.
type GetCloudProjectRegionLoadbalancerLogSubscriptionsOutputArgs struct {
	Id             pulumi.StringPtrInput `pulumi:"id"`
	Kind           pulumi.StringPtrInput `pulumi:"kind"`
	LoadbalancerId pulumi.StringInput    `pulumi:"loadbalancerId"`
	RegionName     pulumi.StringInput    `pulumi:"regionName"`
	ServiceName    pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (GetCloudProjectRegionLoadbalancerLogSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionLoadbalancerLogSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectRegionLoadbalancerLogSubscriptions.
type GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionLoadbalancerLogSubscriptionsResult)(nil)).Elem()
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) ToGetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput() GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput {
	return o
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) ToGetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutputWithContext(ctx context.Context) GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput {
	return o
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) string { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) string { return v.RegionName }).(pulumi.StringOutput)
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProjectRegionLoadbalancerLogSubscriptionsResult) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectRegionLoadbalancerLogSubscriptionsResultOutput{})
}
