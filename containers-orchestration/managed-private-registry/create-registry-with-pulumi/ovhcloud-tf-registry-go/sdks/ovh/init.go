// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "ovh:index/cloudProject:CloudProject":
		r = &CloudProject{}
	case "ovh:index/cloudProjectAlerting:CloudProjectAlerting":
		r = &CloudProjectAlerting{}
	case "ovh:index/cloudProjectContainerregistry:CloudProjectContainerregistry":
		r = &CloudProjectContainerregistry{}
	case "ovh:index/cloudProjectContainerregistryIpRestrictionsManagement:CloudProjectContainerregistryIpRestrictionsManagement":
		r = &CloudProjectContainerregistryIpRestrictionsManagement{}
	case "ovh:index/cloudProjectContainerregistryIpRestrictionsRegistry:CloudProjectContainerregistryIpRestrictionsRegistry":
		r = &CloudProjectContainerregistryIpRestrictionsRegistry{}
	case "ovh:index/cloudProjectContainerregistryOidc:CloudProjectContainerregistryOidc":
		r = &CloudProjectContainerregistryOidc{}
	case "ovh:index/cloudProjectContainerregistryUser:CloudProjectContainerregistryUser":
		r = &CloudProjectContainerregistryUser{}
	case "ovh:index/cloudProjectDatabase:CloudProjectDatabase":
		r = &CloudProjectDatabase{}
	case "ovh:index/cloudProjectDatabaseDatabase:CloudProjectDatabaseDatabase":
		r = &CloudProjectDatabaseDatabase{}
	case "ovh:index/cloudProjectDatabaseIntegration:CloudProjectDatabaseIntegration":
		r = &CloudProjectDatabaseIntegration{}
	case "ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction":
		r = &CloudProjectDatabaseIpRestriction{}
	case "ovh:index/cloudProjectDatabaseKafkaAcl:CloudProjectDatabaseKafkaAcl":
		r = &CloudProjectDatabaseKafkaAcl{}
	case "ovh:index/cloudProjectDatabaseKafkaSchemaregistryacl:CloudProjectDatabaseKafkaSchemaregistryacl":
		r = &CloudProjectDatabaseKafkaSchemaregistryacl{}
	case "ovh:index/cloudProjectDatabaseKafkaTopic:CloudProjectDatabaseKafkaTopic":
		r = &CloudProjectDatabaseKafkaTopic{}
	case "ovh:index/cloudProjectDatabaseLogSubscription:CloudProjectDatabaseLogSubscription":
		r = &CloudProjectDatabaseLogSubscription{}
	case "ovh:index/cloudProjectDatabaseM3dbNamespace:CloudProjectDatabaseM3dbNamespace":
		r = &CloudProjectDatabaseM3dbNamespace{}
	case "ovh:index/cloudProjectDatabaseM3dbUser:CloudProjectDatabaseM3dbUser":
		r = &CloudProjectDatabaseM3dbUser{}
	case "ovh:index/cloudProjectDatabaseMongodbUser:CloudProjectDatabaseMongodbUser":
		r = &CloudProjectDatabaseMongodbUser{}
	case "ovh:index/cloudProjectDatabaseOpensearchPattern:CloudProjectDatabaseOpensearchPattern":
		r = &CloudProjectDatabaseOpensearchPattern{}
	case "ovh:index/cloudProjectDatabaseOpensearchUser:CloudProjectDatabaseOpensearchUser":
		r = &CloudProjectDatabaseOpensearchUser{}
	case "ovh:index/cloudProjectDatabasePostgresqlConnectionPool:CloudProjectDatabasePostgresqlConnectionPool":
		r = &CloudProjectDatabasePostgresqlConnectionPool{}
	case "ovh:index/cloudProjectDatabasePostgresqlUser:CloudProjectDatabasePostgresqlUser":
		r = &CloudProjectDatabasePostgresqlUser{}
	case "ovh:index/cloudProjectDatabaseRedisUser:CloudProjectDatabaseRedisUser":
		r = &CloudProjectDatabaseRedisUser{}
	case "ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser":
		r = &CloudProjectDatabaseUser{}
	case "ovh:index/cloudProjectFailoverIpAttach:CloudProjectFailoverIpAttach":
		r = &CloudProjectFailoverIpAttach{}
	case "ovh:index/cloudProjectGateway:CloudProjectGateway":
		r = &CloudProjectGateway{}
	case "ovh:index/cloudProjectGatewayInterface:CloudProjectGatewayInterface":
		r = &CloudProjectGatewayInterface{}
	case "ovh:index/cloudProjectKube:CloudProjectKube":
		r = &CloudProjectKube{}
	case "ovh:index/cloudProjectKubeIprestrictions:CloudProjectKubeIprestrictions":
		r = &CloudProjectKubeIprestrictions{}
	case "ovh:index/cloudProjectKubeNodepool:CloudProjectKubeNodepool":
		r = &CloudProjectKubeNodepool{}
	case "ovh:index/cloudProjectKubeOidc:CloudProjectKubeOidc":
		r = &CloudProjectKubeOidc{}
	case "ovh:index/cloudProjectNetworkPrivate:CloudProjectNetworkPrivate":
		r = &CloudProjectNetworkPrivate{}
	case "ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet":
		r = &CloudProjectNetworkPrivateSubnet{}
	case "ovh:index/cloudProjectRegionLoadbalancerLogSubscription:CloudProjectRegionLoadbalancerLogSubscription":
		r = &CloudProjectRegionLoadbalancerLogSubscription{}
	case "ovh:index/cloudProjectRegionStoragePresign:CloudProjectRegionStoragePresign":
		r = &CloudProjectRegionStoragePresign{}
	case "ovh:index/cloudProjectUser:CloudProjectUser":
		r = &CloudProjectUser{}
	case "ovh:index/cloudProjectUserS3Credential:CloudProjectUserS3Credential":
		r = &CloudProjectUserS3Credential{}
	case "ovh:index/cloudProjectUserS3Policy:CloudProjectUserS3Policy":
		r = &CloudProjectUserS3Policy{}
	case "ovh:index/cloudProjectWorkflowBackup:CloudProjectWorkflowBackup":
		r = &CloudProjectWorkflowBackup{}
	case "ovh:index/dbaasLogsCluster:DbaasLogsCluster":
		r = &DbaasLogsCluster{}
	case "ovh:index/dbaasLogsInput:DbaasLogsInput":
		r = &DbaasLogsInput{}
	case "ovh:index/dbaasLogsOutputGraylogStream:DbaasLogsOutputGraylogStream":
		r = &DbaasLogsOutputGraylogStream{}
	case "ovh:index/dbaasLogsToken:DbaasLogsToken":
		r = &DbaasLogsToken{}
	case "ovh:index/dedicatedCephAcl:DedicatedCephAcl":
		r = &DedicatedCephAcl{}
	case "ovh:index/dedicatedNashaPartition:DedicatedNashaPartition":
		r = &DedicatedNashaPartition{}
	case "ovh:index/dedicatedNashaPartitionAccess:DedicatedNashaPartitionAccess":
		r = &DedicatedNashaPartitionAccess{}
	case "ovh:index/dedicatedNashaPartitionSnapshot:DedicatedNashaPartitionSnapshot":
		r = &DedicatedNashaPartitionSnapshot{}
	case "ovh:index/dedicatedServerInstallTask:DedicatedServerInstallTask":
		r = &DedicatedServerInstallTask{}
	case "ovh:index/dedicatedServerNetworking:DedicatedServerNetworking":
		r = &DedicatedServerNetworking{}
	case "ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask":
		r = &DedicatedServerRebootTask{}
	case "ovh:index/dedicatedServerUpdate:DedicatedServerUpdate":
		r = &DedicatedServerUpdate{}
	case "ovh:index/domainZone:DomainZone":
		r = &DomainZone{}
	case "ovh:index/domainZoneDnssec:DomainZoneDnssec":
		r = &DomainZoneDnssec{}
	case "ovh:index/domainZoneRecord:DomainZoneRecord":
		r = &DomainZoneRecord{}
	case "ovh:index/domainZoneRedirection:DomainZoneRedirection":
		r = &DomainZoneRedirection{}
	case "ovh:index/hostingPrivatedatabase:HostingPrivatedatabase":
		r = &HostingPrivatedatabase{}
	case "ovh:index/hostingPrivatedatabaseDatabase:HostingPrivatedatabaseDatabase":
		r = &HostingPrivatedatabaseDatabase{}
	case "ovh:index/hostingPrivatedatabaseUser:HostingPrivatedatabaseUser":
		r = &HostingPrivatedatabaseUser{}
	case "ovh:index/hostingPrivatedatabaseUserGrant:HostingPrivatedatabaseUserGrant":
		r = &HostingPrivatedatabaseUserGrant{}
	case "ovh:index/hostingPrivatedatabaseWhitelist:HostingPrivatedatabaseWhitelist":
		r = &HostingPrivatedatabaseWhitelist{}
	case "ovh:index/iamPermissionsGroup:IamPermissionsGroup":
		r = &IamPermissionsGroup{}
	case "ovh:index/iamPolicy:IamPolicy":
		r = &IamPolicy{}
	case "ovh:index/iamResourceGroup:IamResourceGroup":
		r = &IamResourceGroup{}
	case "ovh:index/ipFirewall:IpFirewall":
		r = &IpFirewall{}
	case "ovh:index/ipFirewallRule:IpFirewallRule":
		r = &IpFirewallRule{}
	case "ovh:index/ipMitigation:IpMitigation":
		r = &IpMitigation{}
	case "ovh:index/ipMove:IpMove":
		r = &IpMove{}
	case "ovh:index/ipReverse:IpReverse":
		r = &IpReverse{}
	case "ovh:index/ipService:IpService":
		r = &IpService{}
	case "ovh:index/iploadbalancing:Iploadbalancing":
		r = &Iploadbalancing{}
	case "ovh:index/iploadbalancingHttpFarm:IploadbalancingHttpFarm":
		r = &IploadbalancingHttpFarm{}
	case "ovh:index/iploadbalancingHttpFarmServer:IploadbalancingHttpFarmServer":
		r = &IploadbalancingHttpFarmServer{}
	case "ovh:index/iploadbalancingHttpFrontend:IploadbalancingHttpFrontend":
		r = &IploadbalancingHttpFrontend{}
	case "ovh:index/iploadbalancingHttpRoute:IploadbalancingHttpRoute":
		r = &IploadbalancingHttpRoute{}
	case "ovh:index/iploadbalancingHttpRouteRule:IploadbalancingHttpRouteRule":
		r = &IploadbalancingHttpRouteRule{}
	case "ovh:index/iploadbalancingRefresh:IploadbalancingRefresh":
		r = &IploadbalancingRefresh{}
	case "ovh:index/iploadbalancingTcpFarm:IploadbalancingTcpFarm":
		r = &IploadbalancingTcpFarm{}
	case "ovh:index/iploadbalancingTcpFarmServer:IploadbalancingTcpFarmServer":
		r = &IploadbalancingTcpFarmServer{}
	case "ovh:index/iploadbalancingTcpFrontend:IploadbalancingTcpFrontend":
		r = &IploadbalancingTcpFrontend{}
	case "ovh:index/iploadbalancingTcpRoute:IploadbalancingTcpRoute":
		r = &IploadbalancingTcpRoute{}
	case "ovh:index/iploadbalancingTcpRouteRule:IploadbalancingTcpRouteRule":
		r = &IploadbalancingTcpRouteRule{}
	case "ovh:index/iploadbalancingUdpFrontend:IploadbalancingUdpFrontend":
		r = &IploadbalancingUdpFrontend{}
	case "ovh:index/iploadbalancingVrackNetwork:IploadbalancingVrackNetwork":
		r = &IploadbalancingVrackNetwork{}
	case "ovh:index/meApiOauth2Client:MeApiOauth2Client":
		r = &MeApiOauth2Client{}
	case "ovh:index/meIdentityGroup:MeIdentityGroup":
		r = &MeIdentityGroup{}
	case "ovh:index/meIdentityUser:MeIdentityUser":
		r = &MeIdentityUser{}
	case "ovh:index/meInstallationTemplate:MeInstallationTemplate":
		r = &MeInstallationTemplate{}
	case "ovh:index/meInstallationTemplatePartitionScheme:MeInstallationTemplatePartitionScheme":
		r = &MeInstallationTemplatePartitionScheme{}
	case "ovh:index/meInstallationTemplatePartitionSchemeHardwareRaid:MeInstallationTemplatePartitionSchemeHardwareRaid":
		r = &MeInstallationTemplatePartitionSchemeHardwareRaid{}
	case "ovh:index/meInstallationTemplatePartitionSchemePartition:MeInstallationTemplatePartitionSchemePartition":
		r = &MeInstallationTemplatePartitionSchemePartition{}
	case "ovh:index/vps:Vps":
		r = &Vps{}
	case "ovh:index/vrack:Vrack":
		r = &Vrack{}
	case "ovh:index/vrackCloudproject:VrackCloudproject":
		r = &VrackCloudproject{}
	case "ovh:index/vrackDedicatedServer:VrackDedicatedServer":
		r = &VrackDedicatedServer{}
	case "ovh:index/vrackDedicatedServerInterface:VrackDedicatedServerInterface":
		r = &VrackDedicatedServerInterface{}
	case "ovh:index/vrackIp:VrackIp":
		r = &VrackIp{}
	case "ovh:index/vrackIploadbalancing:VrackIploadbalancing":
		r = &VrackIploadbalancing{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:ovh" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectAlerting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerregistry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerregistryIpRestrictionsManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerregistryIpRestrictionsRegistry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerregistryOidc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerregistryUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseIpRestriction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseKafkaAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseKafkaSchemaregistryacl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseKafkaTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseLogSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseM3dbNamespace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseM3dbUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseMongodbUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseOpensearchPattern",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseOpensearchUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabasePostgresqlConnectionPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabasePostgresqlUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseRedisUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectFailoverIpAttach",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectGatewayInterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKube",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeIprestrictions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeNodepool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeOidc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectNetworkPrivate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectNetworkPrivateSubnet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectRegionLoadbalancerLogSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectRegionStoragePresign",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectUserS3Credential",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectUserS3Policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectWorkflowBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsInput",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsOutputGraylogStream",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedCephAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedNashaPartition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedNashaPartitionAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedNashaPartitionSnapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerInstallTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerNetworking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerRebootTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerUpdate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZoneDnssec",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZoneRecord",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZoneRedirection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/hostingPrivatedatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/hostingPrivatedatabaseDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/hostingPrivatedatabaseUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/hostingPrivatedatabaseUserGrant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/hostingPrivatedatabaseWhitelist",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iamPermissionsGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iamResourceGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipFirewallRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipMitigation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipMove",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipReverse",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingHttpFarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingHttpFarmServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingHttpFrontend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingHttpRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingHttpRouteRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingRefresh",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingTcpFarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingTcpFarmServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingTcpFrontend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingTcpRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingTcpRouteRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingUdpFrontend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/iploadbalancingVrackNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meApiOauth2Client",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meIdentityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meIdentityUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionScheme",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionSchemeHardwareRaid",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionSchemePartition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vps",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackCloudproject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackDedicatedServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackDedicatedServerInterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackIploadbalancing",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"ovh",
		&pkg{version},
	)
}
