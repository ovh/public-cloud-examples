// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingHttpFrontend struct {
	pulumi.CustomResourceState

	AllowedSources   pulumi.StringArrayOutput `pulumi:"allowedSources"`
	DedicatedIpfos   pulumi.StringArrayOutput `pulumi:"dedicatedIpfos"`
	DefaultFarmId    pulumi.Float64Output     `pulumi:"defaultFarmId"`
	DefaultSslId     pulumi.Float64Output     `pulumi:"defaultSslId"`
	Disabled         pulumi.BoolPtrOutput     `pulumi:"disabled"`
	DisplayName      pulumi.StringPtrOutput   `pulumi:"displayName"`
	Hsts             pulumi.BoolPtrOutput     `pulumi:"hsts"`
	HttpHeaders      pulumi.StringArrayOutput `pulumi:"httpHeaders"`
	Port             pulumi.StringOutput      `pulumi:"port"`
	RedirectLocation pulumi.StringPtrOutput   `pulumi:"redirectLocation"`
	ServiceName      pulumi.StringOutput      `pulumi:"serviceName"`
	Ssl              pulumi.BoolPtrOutput     `pulumi:"ssl"`
	Zone             pulumi.StringOutput      `pulumi:"zone"`
}

// NewIploadbalancingHttpFrontend registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingHttpFrontend(ctx *pulumi.Context,
	name string, args *IploadbalancingHttpFrontendArgs, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFrontend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IploadbalancingHttpFrontend
	err = ctx.RegisterPackageResource("ovh:index/iploadbalancingHttpFrontend:IploadbalancingHttpFrontend", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingHttpFrontend gets an existing IploadbalancingHttpFrontend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingHttpFrontend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingHttpFrontendState, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFrontend, error) {
	var resource IploadbalancingHttpFrontend
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/iploadbalancingHttpFrontend:IploadbalancingHttpFrontend", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingHttpFrontend resources.
type iploadbalancingHttpFrontendState struct {
	AllowedSources   []string `pulumi:"allowedSources"`
	DedicatedIpfos   []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId    *float64 `pulumi:"defaultFarmId"`
	DefaultSslId     *float64 `pulumi:"defaultSslId"`
	Disabled         *bool    `pulumi:"disabled"`
	DisplayName      *string  `pulumi:"displayName"`
	Hsts             *bool    `pulumi:"hsts"`
	HttpHeaders      []string `pulumi:"httpHeaders"`
	Port             *string  `pulumi:"port"`
	RedirectLocation *string  `pulumi:"redirectLocation"`
	ServiceName      *string  `pulumi:"serviceName"`
	Ssl              *bool    `pulumi:"ssl"`
	Zone             *string  `pulumi:"zone"`
}

type IploadbalancingHttpFrontendState struct {
	AllowedSources   pulumi.StringArrayInput
	DedicatedIpfos   pulumi.StringArrayInput
	DefaultFarmId    pulumi.Float64PtrInput
	DefaultSslId     pulumi.Float64PtrInput
	Disabled         pulumi.BoolPtrInput
	DisplayName      pulumi.StringPtrInput
	Hsts             pulumi.BoolPtrInput
	HttpHeaders      pulumi.StringArrayInput
	Port             pulumi.StringPtrInput
	RedirectLocation pulumi.StringPtrInput
	ServiceName      pulumi.StringPtrInput
	Ssl              pulumi.BoolPtrInput
	Zone             pulumi.StringPtrInput
}

func (IploadbalancingHttpFrontendState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFrontendState)(nil)).Elem()
}

type iploadbalancingHttpFrontendArgs struct {
	AllowedSources   []string `pulumi:"allowedSources"`
	DedicatedIpfos   []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId    *float64 `pulumi:"defaultFarmId"`
	DefaultSslId     *float64 `pulumi:"defaultSslId"`
	Disabled         *bool    `pulumi:"disabled"`
	DisplayName      *string  `pulumi:"displayName"`
	Hsts             *bool    `pulumi:"hsts"`
	HttpHeaders      []string `pulumi:"httpHeaders"`
	Port             string   `pulumi:"port"`
	RedirectLocation *string  `pulumi:"redirectLocation"`
	ServiceName      string   `pulumi:"serviceName"`
	Ssl              *bool    `pulumi:"ssl"`
	Zone             string   `pulumi:"zone"`
}

// The set of arguments for constructing a IploadbalancingHttpFrontend resource.
type IploadbalancingHttpFrontendArgs struct {
	AllowedSources   pulumi.StringArrayInput
	DedicatedIpfos   pulumi.StringArrayInput
	DefaultFarmId    pulumi.Float64PtrInput
	DefaultSslId     pulumi.Float64PtrInput
	Disabled         pulumi.BoolPtrInput
	DisplayName      pulumi.StringPtrInput
	Hsts             pulumi.BoolPtrInput
	HttpHeaders      pulumi.StringArrayInput
	Port             pulumi.StringInput
	RedirectLocation pulumi.StringPtrInput
	ServiceName      pulumi.StringInput
	Ssl              pulumi.BoolPtrInput
	Zone             pulumi.StringInput
}

func (IploadbalancingHttpFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFrontendArgs)(nil)).Elem()
}

type IploadbalancingHttpFrontendInput interface {
	pulumi.Input

	ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput
	ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput
}

func (*IploadbalancingHttpFrontend) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFrontend)(nil)).Elem()
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput {
	return i.ToIploadbalancingHttpFrontendOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendOutput)
}

type IploadbalancingHttpFrontendOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFrontend)(nil)).Elem()
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput {
	return o
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput {
	return o
}

func (o IploadbalancingHttpFrontendOutput) AllowedSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringArrayOutput { return v.AllowedSources }).(pulumi.StringArrayOutput)
}

func (o IploadbalancingHttpFrontendOutput) DedicatedIpfos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringArrayOutput { return v.DedicatedIpfos }).(pulumi.StringArrayOutput)
}

func (o IploadbalancingHttpFrontendOutput) DefaultFarmId() pulumi.Float64Output {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.Float64Output { return v.DefaultFarmId }).(pulumi.Float64Output)
}

func (o IploadbalancingHttpFrontendOutput) DefaultSslId() pulumi.Float64Output {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.Float64Output { return v.DefaultSslId }).(pulumi.Float64Output)
}

func (o IploadbalancingHttpFrontendOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingHttpFrontendOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingHttpFrontendOutput) Hsts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.BoolPtrOutput { return v.Hsts }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingHttpFrontendOutput) HttpHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringArrayOutput { return v.HttpHeaders }).(pulumi.StringArrayOutput)
}

func (o IploadbalancingHttpFrontendOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

func (o IploadbalancingHttpFrontendOutput) RedirectLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringPtrOutput { return v.RedirectLocation }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingHttpFrontendOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o IploadbalancingHttpFrontendOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.BoolPtrOutput { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingHttpFrontendOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IploadbalancingHttpFrontendInput)(nil)).Elem(), &IploadbalancingHttpFrontend{})
	pulumi.RegisterOutputType(IploadbalancingHttpFrontendOutput{})
}
