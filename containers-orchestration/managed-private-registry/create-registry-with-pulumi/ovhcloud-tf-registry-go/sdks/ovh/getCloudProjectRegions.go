// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCloudProjectRegions(ctx *pulumi.Context, args *GetCloudProjectRegionsArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetCloudProjectRegionsResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectRegions:getCloudProjectRegions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectRegions.
type GetCloudProjectRegionsArgs struct {
	HasServicesUps []string `pulumi:"hasServicesUps"`
	Id             *string  `pulumi:"id"`
	ServiceName    *string  `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectRegions.
type GetCloudProjectRegionsResult struct {
	HasServicesUps []string `pulumi:"hasServicesUps"`
	Id             string   `pulumi:"id"`
	Names          []string `pulumi:"names"`
	ServiceName    *string  `pulumi:"serviceName"`
}

func GetCloudProjectRegionsOutput(ctx *pulumi.Context, args GetCloudProjectRegionsOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudProjectRegionsResult, error) {
			args := v.(GetCloudProjectRegionsArgs)
			r, err := GetCloudProjectRegions(ctx, &args, opts...)
			var s GetCloudProjectRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudProjectRegionsResultOutput)
}

// A collection of arguments for invoking getCloudProjectRegions.
type GetCloudProjectRegionsOutputArgs struct {
	HasServicesUps pulumi.StringArrayInput `pulumi:"hasServicesUps"`
	Id             pulumi.StringPtrInput   `pulumi:"id"`
	ServiceName    pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (GetCloudProjectRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectRegions.
type GetCloudProjectRegionsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionsResult)(nil)).Elem()
}

func (o GetCloudProjectRegionsResultOutput) ToGetCloudProjectRegionsResultOutput() GetCloudProjectRegionsResultOutput {
	return o
}

func (o GetCloudProjectRegionsResultOutput) ToGetCloudProjectRegionsResultOutputWithContext(ctx context.Context) GetCloudProjectRegionsResultOutput {
	return o
}

func (o GetCloudProjectRegionsResultOutput) HasServicesUps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) []string { return v.HasServicesUps }).(pulumi.StringArrayOutput)
}

func (o GetCloudProjectRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProjectRegionsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetCloudProjectRegionsResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectRegionsResultOutput{})
}
