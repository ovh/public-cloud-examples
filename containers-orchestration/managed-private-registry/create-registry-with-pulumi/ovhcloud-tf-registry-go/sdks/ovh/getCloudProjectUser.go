// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectUser(ctx *pulumi.Context, args *LookupCloudProjectUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectUserResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectUser:getCloudProjectUser", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectUser.
type LookupCloudProjectUserArgs struct {
	Id          *string `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
	UserId      string  `pulumi:"userId"`
}

// A collection of values returned by getCloudProjectUser.
type LookupCloudProjectUserResult struct {
	CreationDate string                    `pulumi:"creationDate"`
	Description  string                    `pulumi:"description"`
	Id           string                    `pulumi:"id"`
	Roles        []GetCloudProjectUserRole `pulumi:"roles"`
	ServiceName  *string                   `pulumi:"serviceName"`
	Status       string                    `pulumi:"status"`
	UserId       string                    `pulumi:"userId"`
	Username     string                    `pulumi:"username"`
}

func LookupCloudProjectUserOutput(ctx *pulumi.Context, args LookupCloudProjectUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectUserResult, error) {
			args := v.(LookupCloudProjectUserArgs)
			r, err := LookupCloudProjectUser(ctx, &args, opts...)
			var s LookupCloudProjectUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectUser.
type LookupCloudProjectUserOutputArgs struct {
	Id          pulumi.StringPtrInput `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	UserId      pulumi.StringInput    `pulumi:"userId"`
}

func (LookupCloudProjectUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectUser.
type LookupCloudProjectUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectUserResult)(nil)).Elem()
}

func (o LookupCloudProjectUserResultOutput) ToLookupCloudProjectUserResultOutput() LookupCloudProjectUserResultOutput {
	return o
}

func (o LookupCloudProjectUserResultOutput) ToLookupCloudProjectUserResultOutputWithContext(ctx context.Context) LookupCloudProjectUserResultOutput {
	return o
}

func (o LookupCloudProjectUserResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserResultOutput) Roles() GetCloudProjectUserRoleArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) []GetCloudProjectUserRole { return v.Roles }).(GetCloudProjectUserRoleArrayOutput)
}

func (o LookupCloudProjectUserResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectUserResultOutput{})
}
