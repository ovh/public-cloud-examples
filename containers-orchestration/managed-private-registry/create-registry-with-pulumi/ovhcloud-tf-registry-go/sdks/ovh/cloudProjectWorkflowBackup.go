// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectWorkflowBackup struct {
	pulumi.CustomResourceState

	BackupName        pulumi.StringOutput     `pulumi:"backupName"`
	CreatedAt         pulumi.StringOutput     `pulumi:"createdAt"`
	Cron              pulumi.StringOutput     `pulumi:"cron"`
	InstanceId        pulumi.StringOutput     `pulumi:"instanceId"`
	MaxExecutionCount pulumi.Float64PtrOutput `pulumi:"maxExecutionCount"`
	Name              pulumi.StringOutput     `pulumi:"name"`
	// Region name.
	RegionName  pulumi.StringOutput    `pulumi:"regionName"`
	Rotation    pulumi.Float64Output   `pulumi:"rotation"`
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
}

// NewCloudProjectWorkflowBackup registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectWorkflowBackup(ctx *pulumi.Context,
	name string, args *CloudProjectWorkflowBackupArgs, opts ...pulumi.ResourceOption) (*CloudProjectWorkflowBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cron == nil {
		return nil, errors.New("invalid value for required argument 'Cron'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RegionName == nil {
		return nil, errors.New("invalid value for required argument 'RegionName'")
	}
	if args.Rotation == nil {
		return nil, errors.New("invalid value for required argument 'Rotation'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectWorkflowBackup
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectWorkflowBackup:CloudProjectWorkflowBackup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectWorkflowBackup gets an existing CloudProjectWorkflowBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectWorkflowBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectWorkflowBackupState, opts ...pulumi.ResourceOption) (*CloudProjectWorkflowBackup, error) {
	var resource CloudProjectWorkflowBackup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectWorkflowBackup:CloudProjectWorkflowBackup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectWorkflowBackup resources.
type cloudProjectWorkflowBackupState struct {
	BackupName        *string  `pulumi:"backupName"`
	CreatedAt         *string  `pulumi:"createdAt"`
	Cron              *string  `pulumi:"cron"`
	InstanceId        *string  `pulumi:"instanceId"`
	MaxExecutionCount *float64 `pulumi:"maxExecutionCount"`
	Name              *string  `pulumi:"name"`
	// Region name.
	RegionName  *string  `pulumi:"regionName"`
	Rotation    *float64 `pulumi:"rotation"`
	ServiceName *string  `pulumi:"serviceName"`
}

type CloudProjectWorkflowBackupState struct {
	BackupName        pulumi.StringPtrInput
	CreatedAt         pulumi.StringPtrInput
	Cron              pulumi.StringPtrInput
	InstanceId        pulumi.StringPtrInput
	MaxExecutionCount pulumi.Float64PtrInput
	Name              pulumi.StringPtrInput
	// Region name.
	RegionName  pulumi.StringPtrInput
	Rotation    pulumi.Float64PtrInput
	ServiceName pulumi.StringPtrInput
}

func (CloudProjectWorkflowBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectWorkflowBackupState)(nil)).Elem()
}

type cloudProjectWorkflowBackupArgs struct {
	BackupName        *string  `pulumi:"backupName"`
	Cron              string   `pulumi:"cron"`
	InstanceId        string   `pulumi:"instanceId"`
	MaxExecutionCount *float64 `pulumi:"maxExecutionCount"`
	Name              *string  `pulumi:"name"`
	// Region name.
	RegionName  string  `pulumi:"regionName"`
	Rotation    float64 `pulumi:"rotation"`
	ServiceName *string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectWorkflowBackup resource.
type CloudProjectWorkflowBackupArgs struct {
	BackupName        pulumi.StringPtrInput
	Cron              pulumi.StringInput
	InstanceId        pulumi.StringInput
	MaxExecutionCount pulumi.Float64PtrInput
	Name              pulumi.StringPtrInput
	// Region name.
	RegionName  pulumi.StringInput
	Rotation    pulumi.Float64Input
	ServiceName pulumi.StringPtrInput
}

func (CloudProjectWorkflowBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectWorkflowBackupArgs)(nil)).Elem()
}

type CloudProjectWorkflowBackupInput interface {
	pulumi.Input

	ToCloudProjectWorkflowBackupOutput() CloudProjectWorkflowBackupOutput
	ToCloudProjectWorkflowBackupOutputWithContext(ctx context.Context) CloudProjectWorkflowBackupOutput
}

func (*CloudProjectWorkflowBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectWorkflowBackup)(nil)).Elem()
}

func (i *CloudProjectWorkflowBackup) ToCloudProjectWorkflowBackupOutput() CloudProjectWorkflowBackupOutput {
	return i.ToCloudProjectWorkflowBackupOutputWithContext(context.Background())
}

func (i *CloudProjectWorkflowBackup) ToCloudProjectWorkflowBackupOutputWithContext(ctx context.Context) CloudProjectWorkflowBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectWorkflowBackupOutput)
}

type CloudProjectWorkflowBackupOutput struct{ *pulumi.OutputState }

func (CloudProjectWorkflowBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectWorkflowBackup)(nil)).Elem()
}

func (o CloudProjectWorkflowBackupOutput) ToCloudProjectWorkflowBackupOutput() CloudProjectWorkflowBackupOutput {
	return o
}

func (o CloudProjectWorkflowBackupOutput) ToCloudProjectWorkflowBackupOutputWithContext(ctx context.Context) CloudProjectWorkflowBackupOutput {
	return o
}

func (o CloudProjectWorkflowBackupOutput) BackupName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.BackupName }).(pulumi.StringOutput)
}

func (o CloudProjectWorkflowBackupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o CloudProjectWorkflowBackupOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.Cron }).(pulumi.StringOutput)
}

func (o CloudProjectWorkflowBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o CloudProjectWorkflowBackupOutput) MaxExecutionCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.Float64PtrOutput { return v.MaxExecutionCount }).(pulumi.Float64PtrOutput)
}

func (o CloudProjectWorkflowBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Region name.
func (o CloudProjectWorkflowBackupOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringOutput { return v.RegionName }).(pulumi.StringOutput)
}

func (o CloudProjectWorkflowBackupOutput) Rotation() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.Float64Output { return v.Rotation }).(pulumi.Float64Output)
}

func (o CloudProjectWorkflowBackupOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectWorkflowBackup) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectWorkflowBackupInput)(nil)).Elem(), &CloudProjectWorkflowBackup{})
	pulumi.RegisterOutputType(CloudProjectWorkflowBackupOutput{})
}
