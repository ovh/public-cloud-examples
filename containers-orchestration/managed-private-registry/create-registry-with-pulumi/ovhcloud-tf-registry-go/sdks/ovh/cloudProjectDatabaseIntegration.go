// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseIntegration struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// ID of the destination service
	DestinationServiceId pulumi.StringOutput `pulumi:"destinationServiceId"`
	// Name of the engine of the service
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Parameters for the integration
	Parameters  pulumi.StringMapOutput `pulumi:"parameters"`
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
	// ID of the source service
	SourceServiceId pulumi.StringOutput `pulumi:"sourceServiceId"`
	// Current status of the integration
	Status   pulumi.StringOutput                              `pulumi:"status"`
	Timeouts CloudProjectDatabaseIntegrationTimeoutsPtrOutput `pulumi:"timeouts"`
	// Type of the integration
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCloudProjectDatabaseIntegration registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseIntegration(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseIntegrationArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.DestinationServiceId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationServiceId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.SourceServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SourceServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseIntegration
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseIntegration:CloudProjectDatabaseIntegration", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseIntegration gets an existing CloudProjectDatabaseIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseIntegrationState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIntegration, error) {
	var resource CloudProjectDatabaseIntegration
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseIntegration:CloudProjectDatabaseIntegration", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseIntegration resources.
type cloudProjectDatabaseIntegrationState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// ID of the destination service
	DestinationServiceId *string `pulumi:"destinationServiceId"`
	// Name of the engine of the service
	Engine *string `pulumi:"engine"`
	// Parameters for the integration
	Parameters  map[string]string `pulumi:"parameters"`
	ServiceName *string           `pulumi:"serviceName"`
	// ID of the source service
	SourceServiceId *string `pulumi:"sourceServiceId"`
	// Current status of the integration
	Status   *string                                  `pulumi:"status"`
	Timeouts *CloudProjectDatabaseIntegrationTimeouts `pulumi:"timeouts"`
	// Type of the integration
	Type *string `pulumi:"type"`
}

type CloudProjectDatabaseIntegrationState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// ID of the destination service
	DestinationServiceId pulumi.StringPtrInput
	// Name of the engine of the service
	Engine pulumi.StringPtrInput
	// Parameters for the integration
	Parameters  pulumi.StringMapInput
	ServiceName pulumi.StringPtrInput
	// ID of the source service
	SourceServiceId pulumi.StringPtrInput
	// Current status of the integration
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseIntegrationTimeoutsPtrInput
	// Type of the integration
	Type pulumi.StringPtrInput
}

func (CloudProjectDatabaseIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIntegrationState)(nil)).Elem()
}

type cloudProjectDatabaseIntegrationArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// ID of the destination service
	DestinationServiceId string `pulumi:"destinationServiceId"`
	// Name of the engine of the service
	Engine string `pulumi:"engine"`
	// Parameters for the integration
	Parameters  map[string]string `pulumi:"parameters"`
	ServiceName *string           `pulumi:"serviceName"`
	// ID of the source service
	SourceServiceId string                                   `pulumi:"sourceServiceId"`
	Timeouts        *CloudProjectDatabaseIntegrationTimeouts `pulumi:"timeouts"`
	// Type of the integration
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a CloudProjectDatabaseIntegration resource.
type CloudProjectDatabaseIntegrationArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// ID of the destination service
	DestinationServiceId pulumi.StringInput
	// Name of the engine of the service
	Engine pulumi.StringInput
	// Parameters for the integration
	Parameters  pulumi.StringMapInput
	ServiceName pulumi.StringPtrInput
	// ID of the source service
	SourceServiceId pulumi.StringInput
	Timeouts        CloudProjectDatabaseIntegrationTimeoutsPtrInput
	// Type of the integration
	Type pulumi.StringPtrInput
}

func (CloudProjectDatabaseIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIntegrationArgs)(nil)).Elem()
}

type CloudProjectDatabaseIntegrationInput interface {
	pulumi.Input

	ToCloudProjectDatabaseIntegrationOutput() CloudProjectDatabaseIntegrationOutput
	ToCloudProjectDatabaseIntegrationOutputWithContext(ctx context.Context) CloudProjectDatabaseIntegrationOutput
}

func (*CloudProjectDatabaseIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIntegration)(nil)).Elem()
}

func (i *CloudProjectDatabaseIntegration) ToCloudProjectDatabaseIntegrationOutput() CloudProjectDatabaseIntegrationOutput {
	return i.ToCloudProjectDatabaseIntegrationOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseIntegration) ToCloudProjectDatabaseIntegrationOutputWithContext(ctx context.Context) CloudProjectDatabaseIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseIntegrationOutput)
}

type CloudProjectDatabaseIntegrationOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIntegration)(nil)).Elem()
}

func (o CloudProjectDatabaseIntegrationOutput) ToCloudProjectDatabaseIntegrationOutput() CloudProjectDatabaseIntegrationOutput {
	return o
}

func (o CloudProjectDatabaseIntegrationOutput) ToCloudProjectDatabaseIntegrationOutputWithContext(ctx context.Context) CloudProjectDatabaseIntegrationOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseIntegrationOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// ID of the destination service
func (o CloudProjectDatabaseIntegrationOutput) DestinationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.DestinationServiceId }).(pulumi.StringOutput)
}

// Name of the engine of the service
func (o CloudProjectDatabaseIntegrationOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Parameters for the integration
func (o CloudProjectDatabaseIntegrationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o CloudProjectDatabaseIntegrationOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// ID of the source service
func (o CloudProjectDatabaseIntegrationOutput) SourceServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.SourceServiceId }).(pulumi.StringOutput)
}

// Current status of the integration
func (o CloudProjectDatabaseIntegrationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseIntegrationOutput) Timeouts() CloudProjectDatabaseIntegrationTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) CloudProjectDatabaseIntegrationTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseIntegrationTimeoutsPtrOutput)
}

// Type of the integration
func (o CloudProjectDatabaseIntegrationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIntegration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseIntegrationInput)(nil)).Elem(), &CloudProjectDatabaseIntegration{})
	pulumi.RegisterOutputType(CloudProjectDatabaseIntegrationOutput{})
}
