// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IpService struct {
	pulumi.CustomResourceState

	CanBeTerminated pulumi.BoolOutput   `pulumi:"canBeTerminated"`
	Country         pulumi.StringOutput `pulumi:"country"`
	// Custom description on your ip
	Description pulumi.StringOutput `pulumi:"description"`
	Ip          pulumi.StringOutput `pulumi:"ip"`
	// Details about an Order
	Orders         IpServiceOrderArrayOutput `pulumi:"orders"`
	OrganisationId pulumi.StringOutput       `pulumi:"organisationId"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan IpServicePlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions IpServicePlanOptionArrayOutput `pulumi:"planOptions"`
	// Routage information
	RoutedTos   IpServiceRoutedToArrayOutput `pulumi:"routedTos"`
	ServiceName pulumi.StringOutput          `pulumi:"serviceName"`
	// Possible values for ip type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIpService registers a new resource with the given unique name, arguments, and options.
func NewIpService(ctx *pulumi.Context,
	name string, args *IpServiceArgs, opts ...pulumi.ResourceOption) (*IpService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IpService
	err = ctx.RegisterPackageResource("ovh:index/ipService:IpService", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpService gets an existing IpService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpServiceState, opts ...pulumi.ResourceOption) (*IpService, error) {
	var resource IpService
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/ipService:IpService", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpService resources.
type ipServiceState struct {
	CanBeTerminated *bool   `pulumi:"canBeTerminated"`
	Country         *string `pulumi:"country"`
	// Custom description on your ip
	Description *string `pulumi:"description"`
	Ip          *string `pulumi:"ip"`
	// Details about an Order
	Orders         []IpServiceOrder `pulumi:"orders"`
	OrganisationId *string          `pulumi:"organisationId"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *IpServicePlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []IpServicePlanOption `pulumi:"planOptions"`
	// Routage information
	RoutedTos   []IpServiceRoutedTo `pulumi:"routedTos"`
	ServiceName *string             `pulumi:"serviceName"`
	// Possible values for ip type
	Type *string `pulumi:"type"`
}

type IpServiceState struct {
	CanBeTerminated pulumi.BoolPtrInput
	Country         pulumi.StringPtrInput
	// Custom description on your ip
	Description pulumi.StringPtrInput
	Ip          pulumi.StringPtrInput
	// Details about an Order
	Orders         IpServiceOrderArrayInput
	OrganisationId pulumi.StringPtrInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan IpServicePlanPtrInput
	// Product Plan to order
	PlanOptions IpServicePlanOptionArrayInput
	// Routage information
	RoutedTos   IpServiceRoutedToArrayInput
	ServiceName pulumi.StringPtrInput
	// Possible values for ip type
	Type pulumi.StringPtrInput
}

func (IpServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipServiceState)(nil)).Elem()
}

type ipServiceArgs struct {
	// Custom description on your ip
	Description *string `pulumi:"description"`
	// Details about an Order
	Orders []IpServiceOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan IpServicePlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []IpServicePlanOption `pulumi:"planOptions"`
}

// The set of arguments for constructing a IpService resource.
type IpServiceArgs struct {
	// Custom description on your ip
	Description pulumi.StringPtrInput
	// Details about an Order
	Orders IpServiceOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan IpServicePlanInput
	// Product Plan to order
	PlanOptions IpServicePlanOptionArrayInput
}

func (IpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipServiceArgs)(nil)).Elem()
}

type IpServiceInput interface {
	pulumi.Input

	ToIpServiceOutput() IpServiceOutput
	ToIpServiceOutputWithContext(ctx context.Context) IpServiceOutput
}

func (*IpService) ElementType() reflect.Type {
	return reflect.TypeOf((**IpService)(nil)).Elem()
}

func (i *IpService) ToIpServiceOutput() IpServiceOutput {
	return i.ToIpServiceOutputWithContext(context.Background())
}

func (i *IpService) ToIpServiceOutputWithContext(ctx context.Context) IpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceOutput)
}

type IpServiceOutput struct{ *pulumi.OutputState }

func (IpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpService)(nil)).Elem()
}

func (o IpServiceOutput) ToIpServiceOutput() IpServiceOutput {
	return o
}

func (o IpServiceOutput) ToIpServiceOutputWithContext(ctx context.Context) IpServiceOutput {
	return o
}

func (o IpServiceOutput) CanBeTerminated() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpService) pulumi.BoolOutput { return v.CanBeTerminated }).(pulumi.BoolOutput)
}

func (o IpServiceOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.Country }).(pulumi.StringOutput)
}

// Custom description on your ip
func (o IpServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o IpServiceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Details about an Order
func (o IpServiceOutput) Orders() IpServiceOrderArrayOutput {
	return o.ApplyT(func(v *IpService) IpServiceOrderArrayOutput { return v.Orders }).(IpServiceOrderArrayOutput)
}

func (o IpServiceOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.OrganisationId }).(pulumi.StringOutput)
}

// Ovh Subsidiary
func (o IpServiceOutput) OvhSubsidiary() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.OvhSubsidiary }).(pulumi.StringOutput)
}

// Ovh payment mode
//
// Deprecated: Deprecated
func (o IpServiceOutput) PaymentMean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringPtrOutput { return v.PaymentMean }).(pulumi.StringPtrOutput)
}

// Product Plan to order
func (o IpServiceOutput) Plan() IpServicePlanOutput {
	return o.ApplyT(func(v *IpService) IpServicePlanOutput { return v.Plan }).(IpServicePlanOutput)
}

// Product Plan to order
func (o IpServiceOutput) PlanOptions() IpServicePlanOptionArrayOutput {
	return o.ApplyT(func(v *IpService) IpServicePlanOptionArrayOutput { return v.PlanOptions }).(IpServicePlanOptionArrayOutput)
}

// Routage information
func (o IpServiceOutput) RoutedTos() IpServiceRoutedToArrayOutput {
	return o.ApplyT(func(v *IpService) IpServiceRoutedToArrayOutput { return v.RoutedTos }).(IpServiceRoutedToArrayOutput)
}

func (o IpServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Possible values for ip type
func (o IpServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IpService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceInput)(nil)).Elem(), &IpService{})
	pulumi.RegisterOutputType(IpServiceOutput{})
}
