// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedCephAcl struct {
	pulumi.CustomResourceState

	Family      pulumi.StringOutput `pulumi:"family"`
	Netmask     pulumi.StringOutput `pulumi:"netmask"`
	Network     pulumi.StringOutput `pulumi:"network"`
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewDedicatedCephAcl registers a new resource with the given unique name, arguments, and options.
func NewDedicatedCephAcl(ctx *pulumi.Context,
	name string, args *DedicatedCephAclArgs, opts ...pulumi.ResourceOption) (*DedicatedCephAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Netmask == nil {
		return nil, errors.New("invalid value for required argument 'Netmask'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DedicatedCephAcl
	err = ctx.RegisterPackageResource("ovh:index/dedicatedCephAcl:DedicatedCephAcl", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedCephAcl gets an existing DedicatedCephAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedCephAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedCephAclState, opts ...pulumi.ResourceOption) (*DedicatedCephAcl, error) {
	var resource DedicatedCephAcl
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/dedicatedCephAcl:DedicatedCephAcl", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedCephAcl resources.
type dedicatedCephAclState struct {
	Family      *string `pulumi:"family"`
	Netmask     *string `pulumi:"netmask"`
	Network     *string `pulumi:"network"`
	ServiceName *string `pulumi:"serviceName"`
}

type DedicatedCephAclState struct {
	Family      pulumi.StringPtrInput
	Netmask     pulumi.StringPtrInput
	Network     pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
}

func (DedicatedCephAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedCephAclState)(nil)).Elem()
}

type dedicatedCephAclArgs struct {
	Netmask     string `pulumi:"netmask"`
	Network     string `pulumi:"network"`
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a DedicatedCephAcl resource.
type DedicatedCephAclArgs struct {
	Netmask     pulumi.StringInput
	Network     pulumi.StringInput
	ServiceName pulumi.StringInput
}

func (DedicatedCephAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedCephAclArgs)(nil)).Elem()
}

type DedicatedCephAclInput interface {
	pulumi.Input

	ToDedicatedCephAclOutput() DedicatedCephAclOutput
	ToDedicatedCephAclOutputWithContext(ctx context.Context) DedicatedCephAclOutput
}

func (*DedicatedCephAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedCephAcl)(nil)).Elem()
}

func (i *DedicatedCephAcl) ToDedicatedCephAclOutput() DedicatedCephAclOutput {
	return i.ToDedicatedCephAclOutputWithContext(context.Background())
}

func (i *DedicatedCephAcl) ToDedicatedCephAclOutputWithContext(ctx context.Context) DedicatedCephAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedCephAclOutput)
}

type DedicatedCephAclOutput struct{ *pulumi.OutputState }

func (DedicatedCephAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedCephAcl)(nil)).Elem()
}

func (o DedicatedCephAclOutput) ToDedicatedCephAclOutput() DedicatedCephAclOutput {
	return o
}

func (o DedicatedCephAclOutput) ToDedicatedCephAclOutputWithContext(ctx context.Context) DedicatedCephAclOutput {
	return o
}

func (o DedicatedCephAclOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedCephAcl) pulumi.StringOutput { return v.Family }).(pulumi.StringOutput)
}

func (o DedicatedCephAclOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedCephAcl) pulumi.StringOutput { return v.Netmask }).(pulumi.StringOutput)
}

func (o DedicatedCephAclOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedCephAcl) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o DedicatedCephAclOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedCephAcl) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedCephAclInput)(nil)).Elem(), &DedicatedCephAcl{})
	pulumi.RegisterOutputType(DedicatedCephAclOutput{})
}
