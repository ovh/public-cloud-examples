// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabasePostgresqlUser struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the user
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the user
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	// Roles the user belongs to
	Roles       pulumi.StringArrayOutput `pulumi:"roles"`
	ServiceName pulumi.StringPtrOutput   `pulumi:"serviceName"`
	// Current status of the user
	Status   pulumi.StringOutput                                 `pulumi:"status"`
	Timeouts CloudProjectDatabasePostgresqlUserTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabasePostgresqlUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabasePostgresqlUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabasePostgresqlUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabasePostgresqlUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabasePostgresqlUser
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabasePostgresqlUser:CloudProjectDatabasePostgresqlUser", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabasePostgresqlUser gets an existing CloudProjectDatabasePostgresqlUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabasePostgresqlUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabasePostgresqlUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabasePostgresqlUser, error) {
	var resource CloudProjectDatabasePostgresqlUser
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabasePostgresqlUser:CloudProjectDatabasePostgresqlUser", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabasePostgresqlUser resources.
type cloudProjectDatabasePostgresqlUserState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Password of the user
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// Roles the user belongs to
	Roles       []string `pulumi:"roles"`
	ServiceName *string  `pulumi:"serviceName"`
	// Current status of the user
	Status   *string                                     `pulumi:"status"`
	Timeouts *CloudProjectDatabasePostgresqlUserTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabasePostgresqlUserState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Date of the creation of the user
	CreatedAt pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Password of the user
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// Roles the user belongs to
	Roles       pulumi.StringArrayInput
	ServiceName pulumi.StringPtrInput
	// Current status of the user
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabasePostgresqlUserTimeoutsPtrInput
}

func (CloudProjectDatabasePostgresqlUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabasePostgresqlUserState)(nil)).Elem()
}

type cloudProjectDatabasePostgresqlUserArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// Roles the user belongs to
	Roles       []string                                    `pulumi:"roles"`
	ServiceName *string                                     `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabasePostgresqlUserTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabasePostgresqlUser resource.
type CloudProjectDatabasePostgresqlUserArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// Roles the user belongs to
	Roles       pulumi.StringArrayInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabasePostgresqlUserTimeoutsPtrInput
}

func (CloudProjectDatabasePostgresqlUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabasePostgresqlUserArgs)(nil)).Elem()
}

type CloudProjectDatabasePostgresqlUserInput interface {
	pulumi.Input

	ToCloudProjectDatabasePostgresqlUserOutput() CloudProjectDatabasePostgresqlUserOutput
	ToCloudProjectDatabasePostgresqlUserOutputWithContext(ctx context.Context) CloudProjectDatabasePostgresqlUserOutput
}

func (*CloudProjectDatabasePostgresqlUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabasePostgresqlUser)(nil)).Elem()
}

func (i *CloudProjectDatabasePostgresqlUser) ToCloudProjectDatabasePostgresqlUserOutput() CloudProjectDatabasePostgresqlUserOutput {
	return i.ToCloudProjectDatabasePostgresqlUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabasePostgresqlUser) ToCloudProjectDatabasePostgresqlUserOutputWithContext(ctx context.Context) CloudProjectDatabasePostgresqlUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabasePostgresqlUserOutput)
}

type CloudProjectDatabasePostgresqlUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabasePostgresqlUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabasePostgresqlUser)(nil)).Elem()
}

func (o CloudProjectDatabasePostgresqlUserOutput) ToCloudProjectDatabasePostgresqlUserOutput() CloudProjectDatabasePostgresqlUserOutput {
	return o
}

func (o CloudProjectDatabasePostgresqlUserOutput) ToCloudProjectDatabasePostgresqlUserOutputWithContext(ctx context.Context) CloudProjectDatabasePostgresqlUserOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabasePostgresqlUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user
func (o CloudProjectDatabasePostgresqlUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the user
func (o CloudProjectDatabasePostgresqlUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the user
func (o CloudProjectDatabasePostgresqlUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabasePostgresqlUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

// Roles the user belongs to
func (o CloudProjectDatabasePostgresqlUserOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o CloudProjectDatabasePostgresqlUserOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the user
func (o CloudProjectDatabasePostgresqlUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabasePostgresqlUserOutput) Timeouts() CloudProjectDatabasePostgresqlUserTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabasePostgresqlUser) CloudProjectDatabasePostgresqlUserTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabasePostgresqlUserTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabasePostgresqlUserInput)(nil)).Elem(), &CloudProjectDatabasePostgresqlUser{})
	pulumi.RegisterOutputType(CloudProjectDatabasePostgresqlUserOutput{})
}
