// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamResourceGroup struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput      `pulumi:"createdAt"`
	Name      pulumi.StringOutput      `pulumi:"name"`
	OvhUrn    pulumi.StringOutput      `pulumi:"ovhUrn"`
	Owner     pulumi.StringOutput      `pulumi:"owner"`
	ReadOnly  pulumi.BoolOutput        `pulumi:"readOnly"`
	Resources pulumi.StringArrayOutput `pulumi:"resources"`
	UpdatedAt pulumi.StringOutput      `pulumi:"updatedAt"`
}

// NewIamResourceGroup registers a new resource with the given unique name, arguments, and options.
func NewIamResourceGroup(ctx *pulumi.Context,
	name string, args *IamResourceGroupArgs, opts ...pulumi.ResourceOption) (*IamResourceGroup, error) {
	if args == nil {
		args = &IamResourceGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IamResourceGroup
	err = ctx.RegisterPackageResource("ovh:index/iamResourceGroup:IamResourceGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamResourceGroup gets an existing IamResourceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamResourceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamResourceGroupState, opts ...pulumi.ResourceOption) (*IamResourceGroup, error) {
	var resource IamResourceGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/iamResourceGroup:IamResourceGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamResourceGroup resources.
type iamResourceGroupState struct {
	CreatedAt *string  `pulumi:"createdAt"`
	Name      *string  `pulumi:"name"`
	OvhUrn    *string  `pulumi:"ovhUrn"`
	Owner     *string  `pulumi:"owner"`
	ReadOnly  *bool    `pulumi:"readOnly"`
	Resources []string `pulumi:"resources"`
	UpdatedAt *string  `pulumi:"updatedAt"`
}

type IamResourceGroupState struct {
	CreatedAt pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	OvhUrn    pulumi.StringPtrInput
	Owner     pulumi.StringPtrInput
	ReadOnly  pulumi.BoolPtrInput
	Resources pulumi.StringArrayInput
	UpdatedAt pulumi.StringPtrInput
}

func (IamResourceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamResourceGroupState)(nil)).Elem()
}

type iamResourceGroupArgs struct {
	Name      *string  `pulumi:"name"`
	Resources []string `pulumi:"resources"`
}

// The set of arguments for constructing a IamResourceGroup resource.
type IamResourceGroupArgs struct {
	Name      pulumi.StringPtrInput
	Resources pulumi.StringArrayInput
}

func (IamResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamResourceGroupArgs)(nil)).Elem()
}

type IamResourceGroupInput interface {
	pulumi.Input

	ToIamResourceGroupOutput() IamResourceGroupOutput
	ToIamResourceGroupOutputWithContext(ctx context.Context) IamResourceGroupOutput
}

func (*IamResourceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**IamResourceGroup)(nil)).Elem()
}

func (i *IamResourceGroup) ToIamResourceGroupOutput() IamResourceGroupOutput {
	return i.ToIamResourceGroupOutputWithContext(context.Background())
}

func (i *IamResourceGroup) ToIamResourceGroupOutputWithContext(ctx context.Context) IamResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamResourceGroupOutput)
}

type IamResourceGroupOutput struct{ *pulumi.OutputState }

func (IamResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamResourceGroup)(nil)).Elem()
}

func (o IamResourceGroupOutput) ToIamResourceGroupOutput() IamResourceGroupOutput {
	return o
}

func (o IamResourceGroupOutput) ToIamResourceGroupOutputWithContext(ctx context.Context) IamResourceGroupOutput {
	return o
}

func (o IamResourceGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IamResourceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IamResourceGroupOutput) OvhUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringOutput { return v.OvhUrn }).(pulumi.StringOutput)
}

func (o IamResourceGroupOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o IamResourceGroupOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.BoolOutput { return v.ReadOnly }).(pulumi.BoolOutput)
}

func (o IamResourceGroupOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringArrayOutput { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o IamResourceGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamResourceGroup) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamResourceGroupInput)(nil)).Elem(), &IamResourceGroup{})
	pulumi.RegisterOutputType(IamResourceGroupOutput{})
}
