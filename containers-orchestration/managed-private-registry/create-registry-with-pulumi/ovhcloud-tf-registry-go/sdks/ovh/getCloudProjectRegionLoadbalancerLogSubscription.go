// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectRegionLoadbalancerLogSubscription(ctx *pulumi.Context, args *LookupCloudProjectRegionLoadbalancerLogSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectRegionLoadbalancerLogSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectRegionLoadbalancerLogSubscriptionResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectRegionLoadbalancerLogSubscription:getCloudProjectRegionLoadbalancerLogSubscription", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscription.
type LookupCloudProjectRegionLoadbalancerLogSubscriptionArgs struct {
	Id             *string `pulumi:"id"`
	LoadbalancerId string  `pulumi:"loadbalancerId"`
	RegionName     string  `pulumi:"regionName"`
	ServiceName    *string `pulumi:"serviceName"`
	SubscriptionId string  `pulumi:"subscriptionId"`
}

// A collection of values returned by getCloudProjectRegionLoadbalancerLogSubscription.
type LookupCloudProjectRegionLoadbalancerLogSubscriptionResult struct {
	CreatedAt      string  `pulumi:"createdAt"`
	Id             string  `pulumi:"id"`
	Kind           string  `pulumi:"kind"`
	LdpServiceName string  `pulumi:"ldpServiceName"`
	LoadbalancerId string  `pulumi:"loadbalancerId"`
	RegionName     string  `pulumi:"regionName"`
	ResourceName   string  `pulumi:"resourceName"`
	ResourceType   string  `pulumi:"resourceType"`
	ServiceName    *string `pulumi:"serviceName"`
	StreamId       string  `pulumi:"streamId"`
	SubscriptionId string  `pulumi:"subscriptionId"`
	UpdatedAt      string  `pulumi:"updatedAt"`
}

func LookupCloudProjectRegionLoadbalancerLogSubscriptionOutput(ctx *pulumi.Context, args LookupCloudProjectRegionLoadbalancerLogSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectRegionLoadbalancerLogSubscriptionResult, error) {
			args := v.(LookupCloudProjectRegionLoadbalancerLogSubscriptionArgs)
			r, err := LookupCloudProjectRegionLoadbalancerLogSubscription(ctx, &args, opts...)
			var s LookupCloudProjectRegionLoadbalancerLogSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput)
}

// A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscription.
type LookupCloudProjectRegionLoadbalancerLogSubscriptionOutputArgs struct {
	Id             pulumi.StringPtrInput `pulumi:"id"`
	LoadbalancerId pulumi.StringInput    `pulumi:"loadbalancerId"`
	RegionName     pulumi.StringInput    `pulumi:"regionName"`
	ServiceName    pulumi.StringPtrInput `pulumi:"serviceName"`
	SubscriptionId pulumi.StringInput    `pulumi:"subscriptionId"`
}

func (LookupCloudProjectRegionLoadbalancerLogSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectRegionLoadbalancerLogSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectRegionLoadbalancerLogSubscription.
type LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectRegionLoadbalancerLogSubscriptionResult)(nil)).Elem()
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ToLookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput() LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput {
	return o
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ToLookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutputWithContext(ctx context.Context) LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput {
	return o
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) LdpServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.LdpServiceName }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.RegionName }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.StreamId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectRegionLoadbalancerLogSubscriptionResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectRegionLoadbalancerLogSubscriptionResultOutput{})
}
