// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDedicatedInstallationTemplate(ctx *pulumi.Context, args *GetDedicatedInstallationTemplateArgs, opts ...pulumi.InvokeOption) (*GetDedicatedInstallationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetDedicatedInstallationTemplateResult
	err = ctx.InvokePackage("ovh:index/getDedicatedInstallationTemplate:getDedicatedInstallationTemplate", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDedicatedInstallationTemplate.
type GetDedicatedInstallationTemplateArgs struct {
	Id           *string `pulumi:"id"`
	TemplateName string  `pulumi:"templateName"`
}

// A collection of values returned by getDedicatedInstallationTemplate.
type GetDedicatedInstallationTemplateResult struct {
	BitFormat             float64                                   `pulumi:"bitFormat"`
	Category              string                                    `pulumi:"category"`
	Description           string                                    `pulumi:"description"`
	Distribution          string                                    `pulumi:"distribution"`
	EndOfInstall          string                                    `pulumi:"endOfInstall"`
	Family                string                                    `pulumi:"family"`
	Filesystems           []string                                  `pulumi:"filesystems"`
	HardRaidConfiguration bool                                      `pulumi:"hardRaidConfiguration"`
	Id                    string                                    `pulumi:"id"`
	Inputs                []GetDedicatedInstallationTemplateInput   `pulumi:"inputs"`
	Licenses              []GetDedicatedInstallationTemplateLicense `pulumi:"licenses"`
	LvmReady              bool                                      `pulumi:"lvmReady"`
	NoPartitioning        bool                                      `pulumi:"noPartitioning"`
	Projects              []GetDedicatedInstallationTemplateProject `pulumi:"projects"`
	SoftRaidOnlyMirroring bool                                      `pulumi:"softRaidOnlyMirroring"`
	Subfamily             string                                    `pulumi:"subfamily"`
	TemplateName          string                                    `pulumi:"templateName"`
}

func GetDedicatedInstallationTemplateOutput(ctx *pulumi.Context, args GetDedicatedInstallationTemplateOutputArgs, opts ...pulumi.InvokeOption) GetDedicatedInstallationTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDedicatedInstallationTemplateResult, error) {
			args := v.(GetDedicatedInstallationTemplateArgs)
			r, err := GetDedicatedInstallationTemplate(ctx, &args, opts...)
			var s GetDedicatedInstallationTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDedicatedInstallationTemplateResultOutput)
}

// A collection of arguments for invoking getDedicatedInstallationTemplate.
type GetDedicatedInstallationTemplateOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	TemplateName pulumi.StringInput    `pulumi:"templateName"`
}

func (GetDedicatedInstallationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstallationTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getDedicatedInstallationTemplate.
type GetDedicatedInstallationTemplateResultOutput struct{ *pulumi.OutputState }

func (GetDedicatedInstallationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstallationTemplateResult)(nil)).Elem()
}

func (o GetDedicatedInstallationTemplateResultOutput) ToGetDedicatedInstallationTemplateResultOutput() GetDedicatedInstallationTemplateResultOutput {
	return o
}

func (o GetDedicatedInstallationTemplateResultOutput) ToGetDedicatedInstallationTemplateResultOutputWithContext(ctx context.Context) GetDedicatedInstallationTemplateResultOutput {
	return o
}

func (o GetDedicatedInstallationTemplateResultOutput) BitFormat() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) float64 { return v.BitFormat }).(pulumi.Float64Output)
}

func (o GetDedicatedInstallationTemplateResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Distribution }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) EndOfInstall() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.EndOfInstall }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Family }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Filesystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) []string { return v.Filesystems }).(pulumi.StringArrayOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) HardRaidConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) bool { return v.HardRaidConfiguration }).(pulumi.BoolOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Inputs() GetDedicatedInstallationTemplateInputArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) []GetDedicatedInstallationTemplateInput {
		return v.Inputs
	}).(GetDedicatedInstallationTemplateInputArrayOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Licenses() GetDedicatedInstallationTemplateLicenseArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) []GetDedicatedInstallationTemplateLicense {
		return v.Licenses
	}).(GetDedicatedInstallationTemplateLicenseArrayOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) LvmReady() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) bool { return v.LvmReady }).(pulumi.BoolOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) NoPartitioning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) bool { return v.NoPartitioning }).(pulumi.BoolOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Projects() GetDedicatedInstallationTemplateProjectArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) []GetDedicatedInstallationTemplateProject {
		return v.Projects
	}).(GetDedicatedInstallationTemplateProjectArrayOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) SoftRaidOnlyMirroring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) bool { return v.SoftRaidOnlyMirroring }).(pulumi.BoolOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) Subfamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.Subfamily }).(pulumi.StringOutput)
}

func (o GetDedicatedInstallationTemplateResultOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstallationTemplateResult) string { return v.TemplateName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDedicatedInstallationTemplateResultOutput{})
}
