// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseIpRestriction struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Description of the IP restriction
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the engine of the service
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Authorized IP
	Ip          pulumi.StringOutput    `pulumi:"ip"`
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
	// Current status of the IP restriction
	Status   pulumi.StringOutput                                `pulumi:"status"`
	Timeouts CloudProjectDatabaseIpRestrictionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseIpRestriction registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseIpRestriction(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseIpRestrictionArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIpRestriction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseIpRestriction
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseIpRestriction gets an existing CloudProjectDatabaseIpRestriction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseIpRestriction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseIpRestrictionState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIpRestriction, error) {
	var resource CloudProjectDatabaseIpRestriction
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseIpRestriction resources.
type cloudProjectDatabaseIpRestrictionState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Description of the IP restriction
	Description *string `pulumi:"description"`
	// Name of the engine of the service
	Engine *string `pulumi:"engine"`
	// Authorized IP
	Ip          *string `pulumi:"ip"`
	ServiceName *string `pulumi:"serviceName"`
	// Current status of the IP restriction
	Status   *string                                    `pulumi:"status"`
	Timeouts *CloudProjectDatabaseIpRestrictionTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseIpRestrictionState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Description of the IP restriction
	Description pulumi.StringPtrInput
	// Name of the engine of the service
	Engine pulumi.StringPtrInput
	// Authorized IP
	Ip          pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	// Current status of the IP restriction
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseIpRestrictionTimeoutsPtrInput
}

func (CloudProjectDatabaseIpRestrictionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIpRestrictionState)(nil)).Elem()
}

type cloudProjectDatabaseIpRestrictionArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Description of the IP restriction
	Description *string `pulumi:"description"`
	// Name of the engine of the service
	Engine string `pulumi:"engine"`
	// Authorized IP
	Ip          string                                     `pulumi:"ip"`
	ServiceName *string                                    `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseIpRestrictionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseIpRestriction resource.
type CloudProjectDatabaseIpRestrictionArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Description of the IP restriction
	Description pulumi.StringPtrInput
	// Name of the engine of the service
	Engine pulumi.StringInput
	// Authorized IP
	Ip          pulumi.StringInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseIpRestrictionTimeoutsPtrInput
}

func (CloudProjectDatabaseIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIpRestrictionArgs)(nil)).Elem()
}

type CloudProjectDatabaseIpRestrictionInput interface {
	pulumi.Input

	ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput
	ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput
}

func (*CloudProjectDatabaseIpRestriction) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (i *CloudProjectDatabaseIpRestriction) ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput {
	return i.ToCloudProjectDatabaseIpRestrictionOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseIpRestriction) ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseIpRestrictionOutput)
}

type CloudProjectDatabaseIpRestrictionOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (o CloudProjectDatabaseIpRestrictionOutput) ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionOutput) ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseIpRestrictionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Description of the IP restriction
func (o CloudProjectDatabaseIpRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the engine of the service
func (o CloudProjectDatabaseIpRestrictionOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Authorized IP
func (o CloudProjectDatabaseIpRestrictionOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseIpRestrictionOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the IP restriction
func (o CloudProjectDatabaseIpRestrictionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseIpRestrictionOutput) Timeouts() CloudProjectDatabaseIpRestrictionTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) CloudProjectDatabaseIpRestrictionTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseIpRestrictionTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseIpRestrictionInput)(nil)).Elem(), &CloudProjectDatabaseIpRestriction{})
	pulumi.RegisterOutputType(CloudProjectDatabaseIpRestrictionOutput{})
}
