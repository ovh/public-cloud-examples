// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseIntegration(ctx *pulumi.Context, args *LookupCloudProjectDatabaseIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseIntegrationResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseIntegration:getCloudProjectDatabaseIntegration", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseIntegration.
type LookupCloudProjectDatabaseIntegrationArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Engine      string  `pulumi:"engine"`
	Id          string  `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseIntegration.
type LookupCloudProjectDatabaseIntegrationResult struct {
	ClusterId            string            `pulumi:"clusterId"`
	DestinationServiceId string            `pulumi:"destinationServiceId"`
	Engine               string            `pulumi:"engine"`
	Id                   string            `pulumi:"id"`
	Parameters           map[string]string `pulumi:"parameters"`
	ServiceName          *string           `pulumi:"serviceName"`
	SourceServiceId      string            `pulumi:"sourceServiceId"`
	Status               string            `pulumi:"status"`
	Type                 string            `pulumi:"type"`
}

func LookupCloudProjectDatabaseIntegrationOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseIntegrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseIntegrationResult, error) {
			args := v.(LookupCloudProjectDatabaseIntegrationArgs)
			r, err := LookupCloudProjectDatabaseIntegration(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseIntegrationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseIntegrationResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseIntegration.
type LookupCloudProjectDatabaseIntegrationOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Engine      pulumi.StringInput    `pulumi:"engine"`
	Id          pulumi.StringInput    `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseIntegration.
type LookupCloudProjectDatabaseIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseIntegrationResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) ToLookupCloudProjectDatabaseIntegrationResultOutput() LookupCloudProjectDatabaseIntegrationResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) ToLookupCloudProjectDatabaseIntegrationResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseIntegrationResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) DestinationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.DestinationServiceId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.Engine }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) SourceServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.SourceServiceId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseIntegrationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseIntegrationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseIntegrationResultOutput{})
}
