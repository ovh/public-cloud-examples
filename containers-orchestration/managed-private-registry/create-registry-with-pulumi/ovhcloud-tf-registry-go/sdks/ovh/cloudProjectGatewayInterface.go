// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectGatewayInterface struct {
	pulumi.CustomResourceState

	// Interface ID
	InterfaceId pulumi.StringOutput `pulumi:"interfaceId"`
	// IP of the interface
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Network ID of the interface
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Region name
	Region pulumi.StringOutput `pulumi:"region"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Subnet id to add
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
}

// NewCloudProjectGatewayInterface registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectGatewayInterface(ctx *pulumi.Context,
	name string, args *CloudProjectGatewayInterfaceArgs, opts ...pulumi.ResourceOption) (*CloudProjectGatewayInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectGatewayInterface
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectGatewayInterface:CloudProjectGatewayInterface", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectGatewayInterface gets an existing CloudProjectGatewayInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectGatewayInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectGatewayInterfaceState, opts ...pulumi.ResourceOption) (*CloudProjectGatewayInterface, error) {
	var resource CloudProjectGatewayInterface
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectGatewayInterface:CloudProjectGatewayInterface", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectGatewayInterface resources.
type cloudProjectGatewayInterfaceState struct {
	// Interface ID
	InterfaceId *string `pulumi:"interfaceId"`
	// IP of the interface
	Ip *string `pulumi:"ip"`
	// Network ID of the interface
	NetworkId *string `pulumi:"networkId"`
	// Region name
	Region *string `pulumi:"region"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
	// Subnet id to add
	SubnetId *string `pulumi:"subnetId"`
}

type CloudProjectGatewayInterfaceState struct {
	// Interface ID
	InterfaceId pulumi.StringPtrInput
	// IP of the interface
	Ip pulumi.StringPtrInput
	// Network ID of the interface
	NetworkId pulumi.StringPtrInput
	// Region name
	Region pulumi.StringPtrInput
	// Service name
	ServiceName pulumi.StringPtrInput
	// Subnet id to add
	SubnetId pulumi.StringPtrInput
}

func (CloudProjectGatewayInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectGatewayInterfaceState)(nil)).Elem()
}

type cloudProjectGatewayInterfaceArgs struct {
	// Interface ID
	InterfaceId *string `pulumi:"interfaceId"`
	// Region name
	Region string `pulumi:"region"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
	// Subnet id to add
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a CloudProjectGatewayInterface resource.
type CloudProjectGatewayInterfaceArgs struct {
	// Interface ID
	InterfaceId pulumi.StringPtrInput
	// Region name
	Region pulumi.StringInput
	// Service name
	ServiceName pulumi.StringInput
	// Subnet id to add
	SubnetId pulumi.StringInput
}

func (CloudProjectGatewayInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectGatewayInterfaceArgs)(nil)).Elem()
}

type CloudProjectGatewayInterfaceInput interface {
	pulumi.Input

	ToCloudProjectGatewayInterfaceOutput() CloudProjectGatewayInterfaceOutput
	ToCloudProjectGatewayInterfaceOutputWithContext(ctx context.Context) CloudProjectGatewayInterfaceOutput
}

func (*CloudProjectGatewayInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectGatewayInterface)(nil)).Elem()
}

func (i *CloudProjectGatewayInterface) ToCloudProjectGatewayInterfaceOutput() CloudProjectGatewayInterfaceOutput {
	return i.ToCloudProjectGatewayInterfaceOutputWithContext(context.Background())
}

func (i *CloudProjectGatewayInterface) ToCloudProjectGatewayInterfaceOutputWithContext(ctx context.Context) CloudProjectGatewayInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectGatewayInterfaceOutput)
}

type CloudProjectGatewayInterfaceOutput struct{ *pulumi.OutputState }

func (CloudProjectGatewayInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectGatewayInterface)(nil)).Elem()
}

func (o CloudProjectGatewayInterfaceOutput) ToCloudProjectGatewayInterfaceOutput() CloudProjectGatewayInterfaceOutput {
	return o
}

func (o CloudProjectGatewayInterfaceOutput) ToCloudProjectGatewayInterfaceOutputWithContext(ctx context.Context) CloudProjectGatewayInterfaceOutput {
	return o
}

// Interface ID
func (o CloudProjectGatewayInterfaceOutput) InterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.InterfaceId }).(pulumi.StringOutput)
}

// IP of the interface
func (o CloudProjectGatewayInterfaceOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Network ID of the interface
func (o CloudProjectGatewayInterfaceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Region name
func (o CloudProjectGatewayInterfaceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Service name
func (o CloudProjectGatewayInterfaceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Subnet id to add
func (o CloudProjectGatewayInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGatewayInterface) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectGatewayInterfaceInput)(nil)).Elem(), &CloudProjectGatewayInterface{})
	pulumi.RegisterOutputType(CloudProjectGatewayInterfaceOutput{})
}
