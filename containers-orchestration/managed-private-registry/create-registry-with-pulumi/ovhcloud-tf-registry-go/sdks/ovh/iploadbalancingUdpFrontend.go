// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingUdpFrontend struct {
	pulumi.CustomResourceState

	// Only attach frontend on these ip. No restriction if null
	DedicatedIpfos pulumi.StringArrayOutput `pulumi:"dedicatedIpfos"`
	// Default UDP Farm of your frontend
	DefaultFarmId pulumi.Float64Output `pulumi:"defaultFarmId"`
	// Disable your frontend. Default: 'false'
	Disabled pulumi.BoolOutput `pulumi:"disabled"`
	// Human readable name for your frontend, this field is for you
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Id of your frontend
	FrontendId pulumi.Float64Output `pulumi:"frontendId"`
	// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
	// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
	Port pulumi.StringOutput `pulumi:"port"`
	// The internal name of your IP load balancing
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Zone of your frontend. Use "all" for all owned zone.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewIploadbalancingUdpFrontend registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingUdpFrontend(ctx *pulumi.Context,
	name string, args *IploadbalancingUdpFrontendArgs, opts ...pulumi.ResourceOption) (*IploadbalancingUdpFrontend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IploadbalancingUdpFrontend
	err = ctx.RegisterPackageResource("ovh:index/iploadbalancingUdpFrontend:IploadbalancingUdpFrontend", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingUdpFrontend gets an existing IploadbalancingUdpFrontend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingUdpFrontend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingUdpFrontendState, opts ...pulumi.ResourceOption) (*IploadbalancingUdpFrontend, error) {
	var resource IploadbalancingUdpFrontend
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/iploadbalancingUdpFrontend:IploadbalancingUdpFrontend", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingUdpFrontend resources.
type iploadbalancingUdpFrontendState struct {
	// Only attach frontend on these ip. No restriction if null
	DedicatedIpfos []string `pulumi:"dedicatedIpfos"`
	// Default UDP Farm of your frontend
	DefaultFarmId *float64 `pulumi:"defaultFarmId"`
	// Disable your frontend. Default: 'false'
	Disabled *bool `pulumi:"disabled"`
	// Human readable name for your frontend, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Id of your frontend
	FrontendId *float64 `pulumi:"frontendId"`
	// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
	// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
	Port *string `pulumi:"port"`
	// The internal name of your IP load balancing
	ServiceName *string `pulumi:"serviceName"`
	// Zone of your frontend. Use "all" for all owned zone.
	Zone *string `pulumi:"zone"`
}

type IploadbalancingUdpFrontendState struct {
	// Only attach frontend on these ip. No restriction if null
	DedicatedIpfos pulumi.StringArrayInput
	// Default UDP Farm of your frontend
	DefaultFarmId pulumi.Float64PtrInput
	// Disable your frontend. Default: 'false'
	Disabled pulumi.BoolPtrInput
	// Human readable name for your frontend, this field is for you
	DisplayName pulumi.StringPtrInput
	// Id of your frontend
	FrontendId pulumi.Float64PtrInput
	// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
	// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
	Port pulumi.StringPtrInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringPtrInput
	// Zone of your frontend. Use "all" for all owned zone.
	Zone pulumi.StringPtrInput
}

func (IploadbalancingUdpFrontendState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingUdpFrontendState)(nil)).Elem()
}

type iploadbalancingUdpFrontendArgs struct {
	// Only attach frontend on these ip. No restriction if null
	DedicatedIpfos []string `pulumi:"dedicatedIpfos"`
	// Default UDP Farm of your frontend
	DefaultFarmId *float64 `pulumi:"defaultFarmId"`
	// Disable your frontend. Default: 'false'
	Disabled *bool `pulumi:"disabled"`
	// Human readable name for your frontend, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
	// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
	Port string `pulumi:"port"`
	// The internal name of your IP load balancing
	ServiceName string `pulumi:"serviceName"`
	// Zone of your frontend. Use "all" for all owned zone.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a IploadbalancingUdpFrontend resource.
type IploadbalancingUdpFrontendArgs struct {
	// Only attach frontend on these ip. No restriction if null
	DedicatedIpfos pulumi.StringArrayInput
	// Default UDP Farm of your frontend
	DefaultFarmId pulumi.Float64PtrInput
	// Disable your frontend. Default: 'false'
	Disabled pulumi.BoolPtrInput
	// Human readable name for your frontend, this field is for you
	DisplayName pulumi.StringPtrInput
	// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
	// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
	Port pulumi.StringInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringInput
	// Zone of your frontend. Use "all" for all owned zone.
	Zone pulumi.StringInput
}

func (IploadbalancingUdpFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingUdpFrontendArgs)(nil)).Elem()
}

type IploadbalancingUdpFrontendInput interface {
	pulumi.Input

	ToIploadbalancingUdpFrontendOutput() IploadbalancingUdpFrontendOutput
	ToIploadbalancingUdpFrontendOutputWithContext(ctx context.Context) IploadbalancingUdpFrontendOutput
}

func (*IploadbalancingUdpFrontend) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingUdpFrontend)(nil)).Elem()
}

func (i *IploadbalancingUdpFrontend) ToIploadbalancingUdpFrontendOutput() IploadbalancingUdpFrontendOutput {
	return i.ToIploadbalancingUdpFrontendOutputWithContext(context.Background())
}

func (i *IploadbalancingUdpFrontend) ToIploadbalancingUdpFrontendOutputWithContext(ctx context.Context) IploadbalancingUdpFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingUdpFrontendOutput)
}

type IploadbalancingUdpFrontendOutput struct{ *pulumi.OutputState }

func (IploadbalancingUdpFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingUdpFrontend)(nil)).Elem()
}

func (o IploadbalancingUdpFrontendOutput) ToIploadbalancingUdpFrontendOutput() IploadbalancingUdpFrontendOutput {
	return o
}

func (o IploadbalancingUdpFrontendOutput) ToIploadbalancingUdpFrontendOutputWithContext(ctx context.Context) IploadbalancingUdpFrontendOutput {
	return o
}

// Only attach frontend on these ip. No restriction if null
func (o IploadbalancingUdpFrontendOutput) DedicatedIpfos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.StringArrayOutput { return v.DedicatedIpfos }).(pulumi.StringArrayOutput)
}

// Default UDP Farm of your frontend
func (o IploadbalancingUdpFrontendOutput) DefaultFarmId() pulumi.Float64Output {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.Float64Output { return v.DefaultFarmId }).(pulumi.Float64Output)
}

// Disable your frontend. Default: 'false'
func (o IploadbalancingUdpFrontendOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

// Human readable name for your frontend, this field is for you
func (o IploadbalancingUdpFrontendOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Id of your frontend
func (o IploadbalancingUdpFrontendOutput) FrontendId() pulumi.Float64Output {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.Float64Output { return v.FrontendId }).(pulumi.Float64Output)
}

// Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
// comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
func (o IploadbalancingUdpFrontendOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// The internal name of your IP load balancing
func (o IploadbalancingUdpFrontendOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Zone of your frontend. Use "all" for all owned zone.
func (o IploadbalancingUdpFrontendOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingUdpFrontend) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IploadbalancingUdpFrontendInput)(nil)).Elem(), &IploadbalancingUdpFrontend{})
	pulumi.RegisterOutputType(IploadbalancingUdpFrontendOutput{})
}
