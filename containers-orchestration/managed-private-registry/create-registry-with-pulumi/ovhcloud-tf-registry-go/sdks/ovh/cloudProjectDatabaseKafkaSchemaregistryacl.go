// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseKafkaSchemaregistryacl struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Permission to give to this username on this resource
	Permission pulumi.StringOutput `pulumi:"permission"`
	// Resource affected by this acl
	Resource    pulumi.StringOutput                                         `pulumi:"resource"`
	ServiceName pulumi.StringPtrOutput                                      `pulumi:"serviceName"`
	Timeouts    CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrOutput `pulumi:"timeouts"`
	// Username affected by this acl
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewCloudProjectDatabaseKafkaSchemaregistryacl registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseKafkaSchemaregistryacl(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseKafkaSchemaregistryaclArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseKafkaSchemaregistryacl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Permission == nil {
		return nil, errors.New("invalid value for required argument 'Permission'")
	}
	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseKafkaSchemaregistryacl
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseKafkaSchemaregistryacl:CloudProjectDatabaseKafkaSchemaregistryacl", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseKafkaSchemaregistryacl gets an existing CloudProjectDatabaseKafkaSchemaregistryacl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseKafkaSchemaregistryacl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseKafkaSchemaregistryaclState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseKafkaSchemaregistryacl, error) {
	var resource CloudProjectDatabaseKafkaSchemaregistryacl
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseKafkaSchemaregistryacl:CloudProjectDatabaseKafkaSchemaregistryacl", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseKafkaSchemaregistryacl resources.
type cloudProjectDatabaseKafkaSchemaregistryaclState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Permission to give to this username on this resource
	Permission *string `pulumi:"permission"`
	// Resource affected by this acl
	Resource    *string                                             `pulumi:"resource"`
	ServiceName *string                                             `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseKafkaSchemaregistryaclTimeouts `pulumi:"timeouts"`
	// Username affected by this acl
	Username *string `pulumi:"username"`
}

type CloudProjectDatabaseKafkaSchemaregistryaclState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Permission to give to this username on this resource
	Permission pulumi.StringPtrInput
	// Resource affected by this acl
	Resource    pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrInput
	// Username affected by this acl
	Username pulumi.StringPtrInput
}

func (CloudProjectDatabaseKafkaSchemaregistryaclState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseKafkaSchemaregistryaclState)(nil)).Elem()
}

type cloudProjectDatabaseKafkaSchemaregistryaclArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Permission to give to this username on this resource
	Permission string `pulumi:"permission"`
	// Resource affected by this acl
	Resource    string                                              `pulumi:"resource"`
	ServiceName *string                                             `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseKafkaSchemaregistryaclTimeouts `pulumi:"timeouts"`
	// Username affected by this acl
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a CloudProjectDatabaseKafkaSchemaregistryacl resource.
type CloudProjectDatabaseKafkaSchemaregistryaclArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Permission to give to this username on this resource
	Permission pulumi.StringInput
	// Resource affected by this acl
	Resource    pulumi.StringInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrInput
	// Username affected by this acl
	Username pulumi.StringInput
}

func (CloudProjectDatabaseKafkaSchemaregistryaclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseKafkaSchemaregistryaclArgs)(nil)).Elem()
}

type CloudProjectDatabaseKafkaSchemaregistryaclInput interface {
	pulumi.Input

	ToCloudProjectDatabaseKafkaSchemaregistryaclOutput() CloudProjectDatabaseKafkaSchemaregistryaclOutput
	ToCloudProjectDatabaseKafkaSchemaregistryaclOutputWithContext(ctx context.Context) CloudProjectDatabaseKafkaSchemaregistryaclOutput
}

func (*CloudProjectDatabaseKafkaSchemaregistryacl) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseKafkaSchemaregistryacl)(nil)).Elem()
}

func (i *CloudProjectDatabaseKafkaSchemaregistryacl) ToCloudProjectDatabaseKafkaSchemaregistryaclOutput() CloudProjectDatabaseKafkaSchemaregistryaclOutput {
	return i.ToCloudProjectDatabaseKafkaSchemaregistryaclOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseKafkaSchemaregistryacl) ToCloudProjectDatabaseKafkaSchemaregistryaclOutputWithContext(ctx context.Context) CloudProjectDatabaseKafkaSchemaregistryaclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseKafkaSchemaregistryaclOutput)
}

type CloudProjectDatabaseKafkaSchemaregistryaclOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseKafkaSchemaregistryaclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseKafkaSchemaregistryacl)(nil)).Elem()
}

func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) ToCloudProjectDatabaseKafkaSchemaregistryaclOutput() CloudProjectDatabaseKafkaSchemaregistryaclOutput {
	return o
}

func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) ToCloudProjectDatabaseKafkaSchemaregistryaclOutputWithContext(ctx context.Context) CloudProjectDatabaseKafkaSchemaregistryaclOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Permission to give to this username on this resource
func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) pulumi.StringOutput { return v.Permission }).(pulumi.StringOutput)
}

// Resource affected by this acl
func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) pulumi.StringOutput { return v.Resource }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) Timeouts() CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseKafkaSchemaregistryaclTimeoutsPtrOutput)
}

// Username affected by this acl
func (o CloudProjectDatabaseKafkaSchemaregistryaclOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseKafkaSchemaregistryacl) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseKafkaSchemaregistryaclInput)(nil)).Elem(), &CloudProjectDatabaseKafkaSchemaregistryacl{})
	pulumi.RegisterOutputType(CloudProjectDatabaseKafkaSchemaregistryaclOutput{})
}
