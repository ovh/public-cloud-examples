// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectRegionLoadbalancerLogSubscription struct {
	pulumi.CustomResourceState

	// Creation date of the subscription
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Log kind name of this subscription
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the destination log service
	LdpServiceName pulumi.StringOutput `pulumi:"ldpServiceName"`
	// ID representing the loadbalancer of the resource
	LoadbalancerId pulumi.StringOutput `pulumi:"loadbalancerId"`
	// Identifier of the operation
	OperationId pulumi.StringOutput `pulumi:"operationId"`
	// Region name of the resource representing the name of the region.
	RegionName pulumi.StringOutput `pulumi:"regionName"`
	// Name of subscribed resource, where the logs come from
	ResourceName pulumi.StringOutput `pulumi:"resourceName"`
	// Type of subscribed resource, where the logs come from
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
	// ID representing the stream of the resource
	StreamId pulumi.StringOutput `pulumi:"streamId"`
	// Id of the subscription
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Last update date of the subscription
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewCloudProjectRegionLoadbalancerLogSubscription registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectRegionLoadbalancerLogSubscription(ctx *pulumi.Context,
	name string, args *CloudProjectRegionLoadbalancerLogSubscriptionArgs, opts ...pulumi.ResourceOption) (*CloudProjectRegionLoadbalancerLogSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.LoadbalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadbalancerId'")
	}
	if args.RegionName == nil {
		return nil, errors.New("invalid value for required argument 'RegionName'")
	}
	if args.StreamId == nil {
		return nil, errors.New("invalid value for required argument 'StreamId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectRegionLoadbalancerLogSubscription
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectRegionLoadbalancerLogSubscription:CloudProjectRegionLoadbalancerLogSubscription", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectRegionLoadbalancerLogSubscription gets an existing CloudProjectRegionLoadbalancerLogSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectRegionLoadbalancerLogSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectRegionLoadbalancerLogSubscriptionState, opts ...pulumi.ResourceOption) (*CloudProjectRegionLoadbalancerLogSubscription, error) {
	var resource CloudProjectRegionLoadbalancerLogSubscription
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectRegionLoadbalancerLogSubscription:CloudProjectRegionLoadbalancerLogSubscription", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectRegionLoadbalancerLogSubscription resources.
type cloudProjectRegionLoadbalancerLogSubscriptionState struct {
	// Creation date of the subscription
	CreatedAt *string `pulumi:"createdAt"`
	// Log kind name of this subscription
	Kind *string `pulumi:"kind"`
	// Name of the destination log service
	LdpServiceName *string `pulumi:"ldpServiceName"`
	// ID representing the loadbalancer of the resource
	LoadbalancerId *string `pulumi:"loadbalancerId"`
	// Identifier of the operation
	OperationId *string `pulumi:"operationId"`
	// Region name of the resource representing the name of the region.
	RegionName *string `pulumi:"regionName"`
	// Name of subscribed resource, where the logs come from
	ResourceName *string `pulumi:"resourceName"`
	// Type of subscribed resource, where the logs come from
	ResourceType *string `pulumi:"resourceType"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	// ID representing the stream of the resource
	StreamId *string `pulumi:"streamId"`
	// Id of the subscription
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Last update date of the subscription
	UpdatedAt *string `pulumi:"updatedAt"`
}

type CloudProjectRegionLoadbalancerLogSubscriptionState struct {
	// Creation date of the subscription
	CreatedAt pulumi.StringPtrInput
	// Log kind name of this subscription
	Kind pulumi.StringPtrInput
	// Name of the destination log service
	LdpServiceName pulumi.StringPtrInput
	// ID representing the loadbalancer of the resource
	LoadbalancerId pulumi.StringPtrInput
	// Identifier of the operation
	OperationId pulumi.StringPtrInput
	// Region name of the resource representing the name of the region.
	RegionName pulumi.StringPtrInput
	// Name of subscribed resource, where the logs come from
	ResourceName pulumi.StringPtrInput
	// Type of subscribed resource, where the logs come from
	ResourceType pulumi.StringPtrInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	// ID representing the stream of the resource
	StreamId pulumi.StringPtrInput
	// Id of the subscription
	SubscriptionId pulumi.StringPtrInput
	// Last update date of the subscription
	UpdatedAt pulumi.StringPtrInput
}

func (CloudProjectRegionLoadbalancerLogSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectRegionLoadbalancerLogSubscriptionState)(nil)).Elem()
}

type cloudProjectRegionLoadbalancerLogSubscriptionArgs struct {
	// Log kind name of this subscription
	Kind string `pulumi:"kind"`
	// ID representing the loadbalancer of the resource
	LoadbalancerId string `pulumi:"loadbalancerId"`
	// Region name of the resource representing the name of the region.
	RegionName string `pulumi:"regionName"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	// ID representing the stream of the resource
	StreamId string `pulumi:"streamId"`
}

// The set of arguments for constructing a CloudProjectRegionLoadbalancerLogSubscription resource.
type CloudProjectRegionLoadbalancerLogSubscriptionArgs struct {
	// Log kind name of this subscription
	Kind pulumi.StringInput
	// ID representing the loadbalancer of the resource
	LoadbalancerId pulumi.StringInput
	// Region name of the resource representing the name of the region.
	RegionName pulumi.StringInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	// ID representing the stream of the resource
	StreamId pulumi.StringInput
}

func (CloudProjectRegionLoadbalancerLogSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectRegionLoadbalancerLogSubscriptionArgs)(nil)).Elem()
}

type CloudProjectRegionLoadbalancerLogSubscriptionInput interface {
	pulumi.Input

	ToCloudProjectRegionLoadbalancerLogSubscriptionOutput() CloudProjectRegionLoadbalancerLogSubscriptionOutput
	ToCloudProjectRegionLoadbalancerLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectRegionLoadbalancerLogSubscriptionOutput
}

func (*CloudProjectRegionLoadbalancerLogSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectRegionLoadbalancerLogSubscription)(nil)).Elem()
}

func (i *CloudProjectRegionLoadbalancerLogSubscription) ToCloudProjectRegionLoadbalancerLogSubscriptionOutput() CloudProjectRegionLoadbalancerLogSubscriptionOutput {
	return i.ToCloudProjectRegionLoadbalancerLogSubscriptionOutputWithContext(context.Background())
}

func (i *CloudProjectRegionLoadbalancerLogSubscription) ToCloudProjectRegionLoadbalancerLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectRegionLoadbalancerLogSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectRegionLoadbalancerLogSubscriptionOutput)
}

type CloudProjectRegionLoadbalancerLogSubscriptionOutput struct{ *pulumi.OutputState }

func (CloudProjectRegionLoadbalancerLogSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectRegionLoadbalancerLogSubscription)(nil)).Elem()
}

func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) ToCloudProjectRegionLoadbalancerLogSubscriptionOutput() CloudProjectRegionLoadbalancerLogSubscriptionOutput {
	return o
}

func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) ToCloudProjectRegionLoadbalancerLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectRegionLoadbalancerLogSubscriptionOutput {
	return o
}

// Creation date of the subscription
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Log kind name of this subscription
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the destination log service
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) LdpServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.LdpServiceName }).(pulumi.StringOutput)
}

// ID representing the loadbalancer of the resource
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.LoadbalancerId }).(pulumi.StringOutput)
}

// Identifier of the operation
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.OperationId }).(pulumi.StringOutput)
}

// Region name of the resource representing the name of the region.
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.RegionName }).(pulumi.StringOutput)
}

// Name of subscribed resource, where the logs come from
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.ResourceName }).(pulumi.StringOutput)
}

// Type of subscribed resource, where the logs come from
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// Service name of the resource representing the id of the cloud project.
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// ID representing the stream of the resource
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.StreamId }).(pulumi.StringOutput)
}

// Id of the subscription
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Last update date of the subscription
func (o CloudProjectRegionLoadbalancerLogSubscriptionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectRegionLoadbalancerLogSubscription) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectRegionLoadbalancerLogSubscriptionInput)(nil)).Elem(), &CloudProjectRegionLoadbalancerLogSubscription{})
	pulumi.RegisterOutputType(CloudProjectRegionLoadbalancerLogSubscriptionOutput{})
}
