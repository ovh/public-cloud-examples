// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectFailoverIpAttach struct {
	pulumi.CustomResourceState

	// IP block
	Block pulumi.StringOutput `pulumi:"block"`
	// Ip continent
	ContinentCode pulumi.StringOutput `pulumi:"continentCode"`
	// Ip location
	GeoLoc pulumi.StringOutput `pulumi:"geoLoc"`
	// Ip
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Current operation progress in percent
	Progress pulumi.Float64Output `pulumi:"progress"`
	// Instance where ip is routed to
	RoutedTo pulumi.StringOutput `pulumi:"routedTo"`
	// The service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Ip status
	Status pulumi.StringOutput `pulumi:"status"`
	// IP sub type
	SubType pulumi.StringOutput `pulumi:"subType"`
}

// NewCloudProjectFailoverIpAttach registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectFailoverIpAttach(ctx *pulumi.Context,
	name string, args *CloudProjectFailoverIpAttachArgs, opts ...pulumi.ResourceOption) (*CloudProjectFailoverIpAttach, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectFailoverIpAttach
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectFailoverIpAttach:CloudProjectFailoverIpAttach", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectFailoverIpAttach gets an existing CloudProjectFailoverIpAttach resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectFailoverIpAttach(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectFailoverIpAttachState, opts ...pulumi.ResourceOption) (*CloudProjectFailoverIpAttach, error) {
	var resource CloudProjectFailoverIpAttach
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectFailoverIpAttach:CloudProjectFailoverIpAttach", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectFailoverIpAttach resources.
type cloudProjectFailoverIpAttachState struct {
	// IP block
	Block *string `pulumi:"block"`
	// Ip continent
	ContinentCode *string `pulumi:"continentCode"`
	// Ip location
	GeoLoc *string `pulumi:"geoLoc"`
	// Ip
	Ip *string `pulumi:"ip"`
	// Current operation progress in percent
	Progress *float64 `pulumi:"progress"`
	// Instance where ip is routed to
	RoutedTo *string `pulumi:"routedTo"`
	// The service name
	ServiceName *string `pulumi:"serviceName"`
	// Ip status
	Status *string `pulumi:"status"`
	// IP sub type
	SubType *string `pulumi:"subType"`
}

type CloudProjectFailoverIpAttachState struct {
	// IP block
	Block pulumi.StringPtrInput
	// Ip continent
	ContinentCode pulumi.StringPtrInput
	// Ip location
	GeoLoc pulumi.StringPtrInput
	// Ip
	Ip pulumi.StringPtrInput
	// Current operation progress in percent
	Progress pulumi.Float64PtrInput
	// Instance where ip is routed to
	RoutedTo pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringPtrInput
	// Ip status
	Status pulumi.StringPtrInput
	// IP sub type
	SubType pulumi.StringPtrInput
}

func (CloudProjectFailoverIpAttachState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectFailoverIpAttachState)(nil)).Elem()
}

type cloudProjectFailoverIpAttachArgs struct {
	// IP block
	Block *string `pulumi:"block"`
	// Ip continent
	ContinentCode *string `pulumi:"continentCode"`
	// Ip location
	GeoLoc *string `pulumi:"geoLoc"`
	// Ip
	Ip *string `pulumi:"ip"`
	// Instance where ip is routed to
	RoutedTo *string `pulumi:"routedTo"`
	// The service name
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectFailoverIpAttach resource.
type CloudProjectFailoverIpAttachArgs struct {
	// IP block
	Block pulumi.StringPtrInput
	// Ip continent
	ContinentCode pulumi.StringPtrInput
	// Ip location
	GeoLoc pulumi.StringPtrInput
	// Ip
	Ip pulumi.StringPtrInput
	// Instance where ip is routed to
	RoutedTo pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringInput
}

func (CloudProjectFailoverIpAttachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectFailoverIpAttachArgs)(nil)).Elem()
}

type CloudProjectFailoverIpAttachInput interface {
	pulumi.Input

	ToCloudProjectFailoverIpAttachOutput() CloudProjectFailoverIpAttachOutput
	ToCloudProjectFailoverIpAttachOutputWithContext(ctx context.Context) CloudProjectFailoverIpAttachOutput
}

func (*CloudProjectFailoverIpAttach) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectFailoverIpAttach)(nil)).Elem()
}

func (i *CloudProjectFailoverIpAttach) ToCloudProjectFailoverIpAttachOutput() CloudProjectFailoverIpAttachOutput {
	return i.ToCloudProjectFailoverIpAttachOutputWithContext(context.Background())
}

func (i *CloudProjectFailoverIpAttach) ToCloudProjectFailoverIpAttachOutputWithContext(ctx context.Context) CloudProjectFailoverIpAttachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectFailoverIpAttachOutput)
}

type CloudProjectFailoverIpAttachOutput struct{ *pulumi.OutputState }

func (CloudProjectFailoverIpAttachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectFailoverIpAttach)(nil)).Elem()
}

func (o CloudProjectFailoverIpAttachOutput) ToCloudProjectFailoverIpAttachOutput() CloudProjectFailoverIpAttachOutput {
	return o
}

func (o CloudProjectFailoverIpAttachOutput) ToCloudProjectFailoverIpAttachOutputWithContext(ctx context.Context) CloudProjectFailoverIpAttachOutput {
	return o
}

// IP block
func (o CloudProjectFailoverIpAttachOutput) Block() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.Block }).(pulumi.StringOutput)
}

// Ip continent
func (o CloudProjectFailoverIpAttachOutput) ContinentCode() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.ContinentCode }).(pulumi.StringOutput)
}

// Ip location
func (o CloudProjectFailoverIpAttachOutput) GeoLoc() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.GeoLoc }).(pulumi.StringOutput)
}

// Ip
func (o CloudProjectFailoverIpAttachOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Current operation progress in percent
func (o CloudProjectFailoverIpAttachOutput) Progress() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.Float64Output { return v.Progress }).(pulumi.Float64Output)
}

// Instance where ip is routed to
func (o CloudProjectFailoverIpAttachOutput) RoutedTo() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.RoutedTo }).(pulumi.StringOutput)
}

// The service name
func (o CloudProjectFailoverIpAttachOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Ip status
func (o CloudProjectFailoverIpAttachOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// IP sub type
func (o CloudProjectFailoverIpAttachOutput) SubType() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectFailoverIpAttach) pulumi.StringOutput { return v.SubType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectFailoverIpAttachInput)(nil)).Elem(), &CloudProjectFailoverIpAttach{})
	pulumi.RegisterOutputType(CloudProjectFailoverIpAttachOutput{})
}
