// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProject struct {
	pulumi.CustomResourceState

	Access      pulumi.StringOutput `pulumi:"access"`
	Description pulumi.StringOutput `pulumi:"description"`
	// Details about an Order
	Orders CloudProjectOrderArrayOutput `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	OvhUrn        pulumi.StringOutput `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan CloudProjectPlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions CloudProjectPlanOptionArrayOutput `pulumi:"planOptions"`
	ProjectId   pulumi.StringOutput               `pulumi:"projectId"`
	ProjectName pulumi.StringOutput               `pulumi:"projectName"`
	Status      pulumi.StringOutput               `pulumi:"status"`
}

// NewCloudProject registers a new resource with the given unique name, arguments, and options.
func NewCloudProject(ctx *pulumi.Context,
	name string, args *CloudProjectArgs, opts ...pulumi.ResourceOption) (*CloudProject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProject
	err = ctx.RegisterPackageResource("ovh:index/cloudProject:CloudProject", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProject gets an existing CloudProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectState, opts ...pulumi.ResourceOption) (*CloudProject, error) {
	var resource CloudProject
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProject:CloudProject", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProject resources.
type cloudProjectState struct {
	Access      *string `pulumi:"access"`
	Description *string `pulumi:"description"`
	// Details about an Order
	Orders []CloudProjectOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	OvhUrn        *string `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *CloudProjectPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []CloudProjectPlanOption `pulumi:"planOptions"`
	ProjectId   *string                  `pulumi:"projectId"`
	ProjectName *string                  `pulumi:"projectName"`
	Status      *string                  `pulumi:"status"`
}

type CloudProjectState struct {
	Access      pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	// Details about an Order
	Orders CloudProjectOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	OvhUrn        pulumi.StringPtrInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan CloudProjectPlanPtrInput
	// Product Plan to order
	PlanOptions CloudProjectPlanOptionArrayInput
	ProjectId   pulumi.StringPtrInput
	ProjectName pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
}

func (CloudProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectState)(nil)).Elem()
}

type cloudProjectArgs struct {
	Description *string `pulumi:"description"`
	// Details about an Order
	Orders []CloudProjectOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan CloudProjectPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []CloudProjectPlanOption `pulumi:"planOptions"`
}

// The set of arguments for constructing a CloudProject resource.
type CloudProjectArgs struct {
	Description pulumi.StringPtrInput
	// Details about an Order
	Orders CloudProjectOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan CloudProjectPlanInput
	// Product Plan to order
	PlanOptions CloudProjectPlanOptionArrayInput
}

func (CloudProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectArgs)(nil)).Elem()
}

type CloudProjectInput interface {
	pulumi.Input

	ToCloudProjectOutput() CloudProjectOutput
	ToCloudProjectOutputWithContext(ctx context.Context) CloudProjectOutput
}

func (*CloudProject) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProject)(nil)).Elem()
}

func (i *CloudProject) ToCloudProjectOutput() CloudProjectOutput {
	return i.ToCloudProjectOutputWithContext(context.Background())
}

func (i *CloudProject) ToCloudProjectOutputWithContext(ctx context.Context) CloudProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectOutput)
}

type CloudProjectOutput struct{ *pulumi.OutputState }

func (CloudProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProject)(nil)).Elem()
}

func (o CloudProjectOutput) ToCloudProjectOutput() CloudProjectOutput {
	return o
}

func (o CloudProjectOutput) ToCloudProjectOutputWithContext(ctx context.Context) CloudProjectOutput {
	return o
}

func (o CloudProjectOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.Access }).(pulumi.StringOutput)
}

func (o CloudProjectOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Details about an Order
func (o CloudProjectOutput) Orders() CloudProjectOrderArrayOutput {
	return o.ApplyT(func(v *CloudProject) CloudProjectOrderArrayOutput { return v.Orders }).(CloudProjectOrderArrayOutput)
}

// Ovh Subsidiary
func (o CloudProjectOutput) OvhSubsidiary() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.OvhSubsidiary }).(pulumi.StringOutput)
}

func (o CloudProjectOutput) OvhUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.OvhUrn }).(pulumi.StringOutput)
}

// Ovh payment mode
//
// Deprecated: Deprecated
func (o CloudProjectOutput) PaymentMean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringPtrOutput { return v.PaymentMean }).(pulumi.StringPtrOutput)
}

// Product Plan to order
func (o CloudProjectOutput) Plan() CloudProjectPlanOutput {
	return o.ApplyT(func(v *CloudProject) CloudProjectPlanOutput { return v.Plan }).(CloudProjectPlanOutput)
}

// Product Plan to order
func (o CloudProjectOutput) PlanOptions() CloudProjectPlanOptionArrayOutput {
	return o.ApplyT(func(v *CloudProject) CloudProjectPlanOptionArrayOutput { return v.PlanOptions }).(CloudProjectPlanOptionArrayOutput)
}

func (o CloudProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

func (o CloudProjectOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

func (o CloudProjectOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProject) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectInput)(nil)).Elem(), &CloudProject{})
	pulumi.RegisterOutputType(CloudProjectOutput{})
}
