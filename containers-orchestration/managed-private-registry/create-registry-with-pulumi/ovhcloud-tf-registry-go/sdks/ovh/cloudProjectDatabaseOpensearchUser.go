// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseOpensearchUser struct {
	pulumi.CustomResourceState

	// Acls of the user
	Acls CloudProjectDatabaseOpensearchUserAclArrayOutput `pulumi:"acls"`
	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the user
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the user
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	ServiceName   pulumi.StringPtrOutput `pulumi:"serviceName"`
	// Current status of the user
	Status   pulumi.StringOutput                                 `pulumi:"status"`
	Timeouts CloudProjectDatabaseOpensearchUserTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseOpensearchUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseOpensearchUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseOpensearchUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseOpensearchUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseOpensearchUser
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseOpensearchUser:CloudProjectDatabaseOpensearchUser", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseOpensearchUser gets an existing CloudProjectDatabaseOpensearchUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseOpensearchUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseOpensearchUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseOpensearchUser, error) {
	var resource CloudProjectDatabaseOpensearchUser
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseOpensearchUser:CloudProjectDatabaseOpensearchUser", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseOpensearchUser resources.
type cloudProjectDatabaseOpensearchUserState struct {
	// Acls of the user
	Acls []CloudProjectDatabaseOpensearchUserAcl `pulumi:"acls"`
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Password of the user
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	ServiceName   *string `pulumi:"serviceName"`
	// Current status of the user
	Status   *string                                     `pulumi:"status"`
	Timeouts *CloudProjectDatabaseOpensearchUserTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseOpensearchUserState struct {
	// Acls of the user
	Acls CloudProjectDatabaseOpensearchUserAclArrayInput
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Date of the creation of the user
	CreatedAt pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Password of the user
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	// Current status of the user
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseOpensearchUserTimeoutsPtrInput
}

func (CloudProjectDatabaseOpensearchUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseOpensearchUserState)(nil)).Elem()
}

type cloudProjectDatabaseOpensearchUserArgs struct {
	// Acls of the user
	Acls []CloudProjectDatabaseOpensearchUserAcl `pulumi:"acls"`
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string                                     `pulumi:"passwordReset"`
	ServiceName   *string                                     `pulumi:"serviceName"`
	Timeouts      *CloudProjectDatabaseOpensearchUserTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseOpensearchUser resource.
type CloudProjectDatabaseOpensearchUserArgs struct {
	// Acls of the user
	Acls CloudProjectDatabaseOpensearchUserAclArrayInput
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	Timeouts      CloudProjectDatabaseOpensearchUserTimeoutsPtrInput
}

func (CloudProjectDatabaseOpensearchUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseOpensearchUserArgs)(nil)).Elem()
}

type CloudProjectDatabaseOpensearchUserInput interface {
	pulumi.Input

	ToCloudProjectDatabaseOpensearchUserOutput() CloudProjectDatabaseOpensearchUserOutput
	ToCloudProjectDatabaseOpensearchUserOutputWithContext(ctx context.Context) CloudProjectDatabaseOpensearchUserOutput
}

func (*CloudProjectDatabaseOpensearchUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseOpensearchUser)(nil)).Elem()
}

func (i *CloudProjectDatabaseOpensearchUser) ToCloudProjectDatabaseOpensearchUserOutput() CloudProjectDatabaseOpensearchUserOutput {
	return i.ToCloudProjectDatabaseOpensearchUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseOpensearchUser) ToCloudProjectDatabaseOpensearchUserOutputWithContext(ctx context.Context) CloudProjectDatabaseOpensearchUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseOpensearchUserOutput)
}

type CloudProjectDatabaseOpensearchUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseOpensearchUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseOpensearchUser)(nil)).Elem()
}

func (o CloudProjectDatabaseOpensearchUserOutput) ToCloudProjectDatabaseOpensearchUserOutput() CloudProjectDatabaseOpensearchUserOutput {
	return o
}

func (o CloudProjectDatabaseOpensearchUserOutput) ToCloudProjectDatabaseOpensearchUserOutputWithContext(ctx context.Context) CloudProjectDatabaseOpensearchUserOutput {
	return o
}

// Acls of the user
func (o CloudProjectDatabaseOpensearchUserOutput) Acls() CloudProjectDatabaseOpensearchUserAclArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) CloudProjectDatabaseOpensearchUserAclArrayOutput {
		return v.Acls
	}).(CloudProjectDatabaseOpensearchUserAclArrayOutput)
}

// Id of the database cluster
func (o CloudProjectDatabaseOpensearchUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user
func (o CloudProjectDatabaseOpensearchUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the user
func (o CloudProjectDatabaseOpensearchUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the user
func (o CloudProjectDatabaseOpensearchUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabaseOpensearchUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

func (o CloudProjectDatabaseOpensearchUserOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the user
func (o CloudProjectDatabaseOpensearchUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseOpensearchUserOutput) Timeouts() CloudProjectDatabaseOpensearchUserTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseOpensearchUser) CloudProjectDatabaseOpensearchUserTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseOpensearchUserTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseOpensearchUserInput)(nil)).Elem(), &CloudProjectDatabaseOpensearchUser{})
	pulumi.RegisterOutputType(CloudProjectDatabaseOpensearchUserOutput{})
}
