// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseKafkaSchemaregistryacl(ctx *pulumi.Context, args *LookupCloudProjectDatabaseKafkaSchemaregistryaclArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseKafkaSchemaregistryaclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseKafkaSchemaregistryaclResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseKafkaSchemaregistryacl:getCloudProjectDatabaseKafkaSchemaregistryacl", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseKafkaSchemaregistryacl.
type LookupCloudProjectDatabaseKafkaSchemaregistryaclArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          string  `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseKafkaSchemaregistryacl.
type LookupCloudProjectDatabaseKafkaSchemaregistryaclResult struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          string  `pulumi:"id"`
	Permission  string  `pulumi:"permission"`
	Resource    string  `pulumi:"resource"`
	ServiceName *string `pulumi:"serviceName"`
	Username    string  `pulumi:"username"`
}

func LookupCloudProjectDatabaseKafkaSchemaregistryaclOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseKafkaSchemaregistryaclOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseKafkaSchemaregistryaclResult, error) {
			args := v.(LookupCloudProjectDatabaseKafkaSchemaregistryaclArgs)
			r, err := LookupCloudProjectDatabaseKafkaSchemaregistryacl(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseKafkaSchemaregistryaclResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseKafkaSchemaregistryacl.
type LookupCloudProjectDatabaseKafkaSchemaregistryaclOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Id          pulumi.StringInput    `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseKafkaSchemaregistryaclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseKafkaSchemaregistryaclArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseKafkaSchemaregistryacl.
type LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseKafkaSchemaregistryaclResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) ToLookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput() LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) ToLookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) string { return v.Permission }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) string { return v.Resource }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseKafkaSchemaregistryaclResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseKafkaSchemaregistryaclResultOutput{})
}
