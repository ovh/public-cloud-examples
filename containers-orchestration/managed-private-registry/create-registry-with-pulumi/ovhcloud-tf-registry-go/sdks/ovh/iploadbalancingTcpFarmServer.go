// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingTcpFarmServer struct {
	pulumi.CustomResourceState

	Address              pulumi.StringOutput     `pulumi:"address"`
	Backup               pulumi.BoolPtrOutput    `pulumi:"backup"`
	Chain                pulumi.StringPtrOutput  `pulumi:"chain"`
	DisplayName          pulumi.StringPtrOutput  `pulumi:"displayName"`
	FarmId               pulumi.Float64Output    `pulumi:"farmId"`
	OnMarkedDown         pulumi.StringPtrOutput  `pulumi:"onMarkedDown"`
	Port                 pulumi.Float64PtrOutput `pulumi:"port"`
	Probe                pulumi.BoolPtrOutput    `pulumi:"probe"`
	ProxyProtocolVersion pulumi.StringPtrOutput  `pulumi:"proxyProtocolVersion"`
	ServiceName          pulumi.StringOutput     `pulumi:"serviceName"`
	Ssl                  pulumi.BoolPtrOutput    `pulumi:"ssl"`
	Status               pulumi.StringOutput     `pulumi:"status"`
	Weight               pulumi.Float64PtrOutput `pulumi:"weight"`
}

// NewIploadbalancingTcpFarmServer registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingTcpFarmServer(ctx *pulumi.Context,
	name string, args *IploadbalancingTcpFarmServerArgs, opts ...pulumi.ResourceOption) (*IploadbalancingTcpFarmServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.FarmId == nil {
		return nil, errors.New("invalid value for required argument 'FarmId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IploadbalancingTcpFarmServer
	err = ctx.RegisterPackageResource("ovh:index/iploadbalancingTcpFarmServer:IploadbalancingTcpFarmServer", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingTcpFarmServer gets an existing IploadbalancingTcpFarmServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingTcpFarmServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingTcpFarmServerState, opts ...pulumi.ResourceOption) (*IploadbalancingTcpFarmServer, error) {
	var resource IploadbalancingTcpFarmServer
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/iploadbalancingTcpFarmServer:IploadbalancingTcpFarmServer", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingTcpFarmServer resources.
type iploadbalancingTcpFarmServerState struct {
	Address              *string  `pulumi:"address"`
	Backup               *bool    `pulumi:"backup"`
	Chain                *string  `pulumi:"chain"`
	DisplayName          *string  `pulumi:"displayName"`
	FarmId               *float64 `pulumi:"farmId"`
	OnMarkedDown         *string  `pulumi:"onMarkedDown"`
	Port                 *float64 `pulumi:"port"`
	Probe                *bool    `pulumi:"probe"`
	ProxyProtocolVersion *string  `pulumi:"proxyProtocolVersion"`
	ServiceName          *string  `pulumi:"serviceName"`
	Ssl                  *bool    `pulumi:"ssl"`
	Status               *string  `pulumi:"status"`
	Weight               *float64 `pulumi:"weight"`
}

type IploadbalancingTcpFarmServerState struct {
	Address              pulumi.StringPtrInput
	Backup               pulumi.BoolPtrInput
	Chain                pulumi.StringPtrInput
	DisplayName          pulumi.StringPtrInput
	FarmId               pulumi.Float64PtrInput
	OnMarkedDown         pulumi.StringPtrInput
	Port                 pulumi.Float64PtrInput
	Probe                pulumi.BoolPtrInput
	ProxyProtocolVersion pulumi.StringPtrInput
	ServiceName          pulumi.StringPtrInput
	Ssl                  pulumi.BoolPtrInput
	Status               pulumi.StringPtrInput
	Weight               pulumi.Float64PtrInput
}

func (IploadbalancingTcpFarmServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingTcpFarmServerState)(nil)).Elem()
}

type iploadbalancingTcpFarmServerArgs struct {
	Address              string   `pulumi:"address"`
	Backup               *bool    `pulumi:"backup"`
	Chain                *string  `pulumi:"chain"`
	DisplayName          *string  `pulumi:"displayName"`
	FarmId               float64  `pulumi:"farmId"`
	OnMarkedDown         *string  `pulumi:"onMarkedDown"`
	Port                 *float64 `pulumi:"port"`
	Probe                *bool    `pulumi:"probe"`
	ProxyProtocolVersion *string  `pulumi:"proxyProtocolVersion"`
	ServiceName          string   `pulumi:"serviceName"`
	Ssl                  *bool    `pulumi:"ssl"`
	Status               string   `pulumi:"status"`
	Weight               *float64 `pulumi:"weight"`
}

// The set of arguments for constructing a IploadbalancingTcpFarmServer resource.
type IploadbalancingTcpFarmServerArgs struct {
	Address              pulumi.StringInput
	Backup               pulumi.BoolPtrInput
	Chain                pulumi.StringPtrInput
	DisplayName          pulumi.StringPtrInput
	FarmId               pulumi.Float64Input
	OnMarkedDown         pulumi.StringPtrInput
	Port                 pulumi.Float64PtrInput
	Probe                pulumi.BoolPtrInput
	ProxyProtocolVersion pulumi.StringPtrInput
	ServiceName          pulumi.StringInput
	Ssl                  pulumi.BoolPtrInput
	Status               pulumi.StringInput
	Weight               pulumi.Float64PtrInput
}

func (IploadbalancingTcpFarmServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingTcpFarmServerArgs)(nil)).Elem()
}

type IploadbalancingTcpFarmServerInput interface {
	pulumi.Input

	ToIploadbalancingTcpFarmServerOutput() IploadbalancingTcpFarmServerOutput
	ToIploadbalancingTcpFarmServerOutputWithContext(ctx context.Context) IploadbalancingTcpFarmServerOutput
}

func (*IploadbalancingTcpFarmServer) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingTcpFarmServer)(nil)).Elem()
}

func (i *IploadbalancingTcpFarmServer) ToIploadbalancingTcpFarmServerOutput() IploadbalancingTcpFarmServerOutput {
	return i.ToIploadbalancingTcpFarmServerOutputWithContext(context.Background())
}

func (i *IploadbalancingTcpFarmServer) ToIploadbalancingTcpFarmServerOutputWithContext(ctx context.Context) IploadbalancingTcpFarmServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFarmServerOutput)
}

type IploadbalancingTcpFarmServerOutput struct{ *pulumi.OutputState }

func (IploadbalancingTcpFarmServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingTcpFarmServer)(nil)).Elem()
}

func (o IploadbalancingTcpFarmServerOutput) ToIploadbalancingTcpFarmServerOutput() IploadbalancingTcpFarmServerOutput {
	return o
}

func (o IploadbalancingTcpFarmServerOutput) ToIploadbalancingTcpFarmServerOutputWithContext(ctx context.Context) IploadbalancingTcpFarmServerOutput {
	return o
}

func (o IploadbalancingTcpFarmServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Backup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.BoolPtrOutput { return v.Backup }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringPtrOutput { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) FarmId() pulumi.Float64Output {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.Float64Output { return v.FarmId }).(pulumi.Float64Output)
}

func (o IploadbalancingTcpFarmServerOutput) OnMarkedDown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringPtrOutput { return v.OnMarkedDown }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.Float64PtrOutput { return v.Port }).(pulumi.Float64PtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Probe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.BoolPtrOutput { return v.Probe }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) ProxyProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringPtrOutput { return v.ProxyProtocolVersion }).(pulumi.StringPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.BoolPtrOutput { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o IploadbalancingTcpFarmServerOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFarmServer) pulumi.Float64PtrOutput { return v.Weight }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IploadbalancingTcpFarmServerInput)(nil)).Elem(), &IploadbalancingTcpFarmServer{})
	pulumi.RegisterOutputType(IploadbalancingTcpFarmServerOutput{})
}
