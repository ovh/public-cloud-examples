// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseLogSubscription struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Creation date of the subscription
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the engine of the service
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Log kind name of this subscription
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the destination log service
	LdpServiceName pulumi.StringOutput `pulumi:"ldpServiceName"`
	// Identifier of the operation
	OperationId pulumi.StringOutput `pulumi:"operationId"`
	// Name of subscribed resource, where the logs come from
	ResourceName pulumi.StringOutput `pulumi:"resourceName"`
	// Type of subscribed resource, where the logs come from
	ResourceType pulumi.StringOutput    `pulumi:"resourceType"`
	ServiceName  pulumi.StringPtrOutput `pulumi:"serviceName"`
	// Id of the target Log data platform stream
	StreamId pulumi.StringOutput                                  `pulumi:"streamId"`
	Timeouts CloudProjectDatabaseLogSubscriptionTimeoutsPtrOutput `pulumi:"timeouts"`
	// Last update date of the subscription
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewCloudProjectDatabaseLogSubscription registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseLogSubscription(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseLogSubscriptionArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseLogSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.StreamId == nil {
		return nil, errors.New("invalid value for required argument 'StreamId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"ldpServiceName",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseLogSubscription
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseLogSubscription:CloudProjectDatabaseLogSubscription", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseLogSubscription gets an existing CloudProjectDatabaseLogSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseLogSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseLogSubscriptionState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseLogSubscription, error) {
	var resource CloudProjectDatabaseLogSubscription
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseLogSubscription:CloudProjectDatabaseLogSubscription", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseLogSubscription resources.
type cloudProjectDatabaseLogSubscriptionState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Creation date of the subscription
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the engine of the service
	Engine *string `pulumi:"engine"`
	// Log kind name of this subscription
	Kind *string `pulumi:"kind"`
	// Name of the destination log service
	LdpServiceName *string `pulumi:"ldpServiceName"`
	// Identifier of the operation
	OperationId *string `pulumi:"operationId"`
	// Name of subscribed resource, where the logs come from
	ResourceName *string `pulumi:"resourceName"`
	// Type of subscribed resource, where the logs come from
	ResourceType *string `pulumi:"resourceType"`
	ServiceName  *string `pulumi:"serviceName"`
	// Id of the target Log data platform stream
	StreamId *string                                      `pulumi:"streamId"`
	Timeouts *CloudProjectDatabaseLogSubscriptionTimeouts `pulumi:"timeouts"`
	// Last update date of the subscription
	UpdatedAt *string `pulumi:"updatedAt"`
}

type CloudProjectDatabaseLogSubscriptionState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Creation date of the subscription
	CreatedAt pulumi.StringPtrInput
	// Name of the engine of the service
	Engine pulumi.StringPtrInput
	// Log kind name of this subscription
	Kind pulumi.StringPtrInput
	// Name of the destination log service
	LdpServiceName pulumi.StringPtrInput
	// Identifier of the operation
	OperationId pulumi.StringPtrInput
	// Name of subscribed resource, where the logs come from
	ResourceName pulumi.StringPtrInput
	// Type of subscribed resource, where the logs come from
	ResourceType pulumi.StringPtrInput
	ServiceName  pulumi.StringPtrInput
	// Id of the target Log data platform stream
	StreamId pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseLogSubscriptionTimeoutsPtrInput
	// Last update date of the subscription
	UpdatedAt pulumi.StringPtrInput
}

func (CloudProjectDatabaseLogSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseLogSubscriptionState)(nil)).Elem()
}

type cloudProjectDatabaseLogSubscriptionArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the engine of the service
	Engine      string  `pulumi:"engine"`
	ServiceName *string `pulumi:"serviceName"`
	// Id of the target Log data platform stream
	StreamId string                                       `pulumi:"streamId"`
	Timeouts *CloudProjectDatabaseLogSubscriptionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseLogSubscription resource.
type CloudProjectDatabaseLogSubscriptionArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the engine of the service
	Engine      pulumi.StringInput
	ServiceName pulumi.StringPtrInput
	// Id of the target Log data platform stream
	StreamId pulumi.StringInput
	Timeouts CloudProjectDatabaseLogSubscriptionTimeoutsPtrInput
}

func (CloudProjectDatabaseLogSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseLogSubscriptionArgs)(nil)).Elem()
}

type CloudProjectDatabaseLogSubscriptionInput interface {
	pulumi.Input

	ToCloudProjectDatabaseLogSubscriptionOutput() CloudProjectDatabaseLogSubscriptionOutput
	ToCloudProjectDatabaseLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectDatabaseLogSubscriptionOutput
}

func (*CloudProjectDatabaseLogSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseLogSubscription)(nil)).Elem()
}

func (i *CloudProjectDatabaseLogSubscription) ToCloudProjectDatabaseLogSubscriptionOutput() CloudProjectDatabaseLogSubscriptionOutput {
	return i.ToCloudProjectDatabaseLogSubscriptionOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseLogSubscription) ToCloudProjectDatabaseLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectDatabaseLogSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseLogSubscriptionOutput)
}

type CloudProjectDatabaseLogSubscriptionOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseLogSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseLogSubscription)(nil)).Elem()
}

func (o CloudProjectDatabaseLogSubscriptionOutput) ToCloudProjectDatabaseLogSubscriptionOutput() CloudProjectDatabaseLogSubscriptionOutput {
	return o
}

func (o CloudProjectDatabaseLogSubscriptionOutput) ToCloudProjectDatabaseLogSubscriptionOutputWithContext(ctx context.Context) CloudProjectDatabaseLogSubscriptionOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseLogSubscriptionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Creation date of the subscription
func (o CloudProjectDatabaseLogSubscriptionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the engine of the service
func (o CloudProjectDatabaseLogSubscriptionOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Log kind name of this subscription
func (o CloudProjectDatabaseLogSubscriptionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the destination log service
func (o CloudProjectDatabaseLogSubscriptionOutput) LdpServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.LdpServiceName }).(pulumi.StringOutput)
}

// Identifier of the operation
func (o CloudProjectDatabaseLogSubscriptionOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.OperationId }).(pulumi.StringOutput)
}

// Name of subscribed resource, where the logs come from
func (o CloudProjectDatabaseLogSubscriptionOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.ResourceName }).(pulumi.StringOutput)
}

// Type of subscribed resource, where the logs come from
func (o CloudProjectDatabaseLogSubscriptionOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseLogSubscriptionOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Id of the target Log data platform stream
func (o CloudProjectDatabaseLogSubscriptionOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.StreamId }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseLogSubscriptionOutput) Timeouts() CloudProjectDatabaseLogSubscriptionTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) CloudProjectDatabaseLogSubscriptionTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseLogSubscriptionTimeoutsPtrOutput)
}

// Last update date of the subscription
func (o CloudProjectDatabaseLogSubscriptionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseLogSubscription) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseLogSubscriptionInput)(nil)).Elem(), &CloudProjectDatabaseLogSubscription{})
	pulumi.RegisterOutputType(CloudProjectDatabaseLogSubscriptionOutput{})
}
