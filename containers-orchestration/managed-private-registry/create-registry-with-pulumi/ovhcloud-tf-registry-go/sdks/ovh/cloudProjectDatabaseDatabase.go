// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseDatabase struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Defines if the database has been created by default
	Default pulumi.BoolOutput `pulumi:"default"`
	// Name of the engine of the service
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Database name
	Name        pulumi.StringOutput                           `pulumi:"name"`
	ServiceName pulumi.StringPtrOutput                        `pulumi:"serviceName"`
	Timeouts    CloudProjectDatabaseDatabaseTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseDatabase registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseDatabase(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseDatabaseArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseDatabase
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseDatabase:CloudProjectDatabaseDatabase", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseDatabase gets an existing CloudProjectDatabaseDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseDatabaseState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseDatabase, error) {
	var resource CloudProjectDatabaseDatabase
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseDatabase:CloudProjectDatabaseDatabase", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseDatabase resources.
type cloudProjectDatabaseDatabaseState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Defines if the database has been created by default
	Default *bool `pulumi:"default"`
	// Name of the engine of the service
	Engine *string `pulumi:"engine"`
	// Database name
	Name        *string                               `pulumi:"name"`
	ServiceName *string                               `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseDatabaseTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseDatabaseState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Defines if the database has been created by default
	Default pulumi.BoolPtrInput
	// Name of the engine of the service
	Engine pulumi.StringPtrInput
	// Database name
	Name        pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseDatabaseTimeoutsPtrInput
}

func (CloudProjectDatabaseDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseDatabaseState)(nil)).Elem()
}

type cloudProjectDatabaseDatabaseArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the engine of the service
	Engine string `pulumi:"engine"`
	// Database name
	Name        *string                               `pulumi:"name"`
	ServiceName *string                               `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseDatabaseTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseDatabase resource.
type CloudProjectDatabaseDatabaseArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the engine of the service
	Engine pulumi.StringInput
	// Database name
	Name        pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseDatabaseTimeoutsPtrInput
}

func (CloudProjectDatabaseDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseDatabaseArgs)(nil)).Elem()
}

type CloudProjectDatabaseDatabaseInput interface {
	pulumi.Input

	ToCloudProjectDatabaseDatabaseOutput() CloudProjectDatabaseDatabaseOutput
	ToCloudProjectDatabaseDatabaseOutputWithContext(ctx context.Context) CloudProjectDatabaseDatabaseOutput
}

func (*CloudProjectDatabaseDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseDatabase)(nil)).Elem()
}

func (i *CloudProjectDatabaseDatabase) ToCloudProjectDatabaseDatabaseOutput() CloudProjectDatabaseDatabaseOutput {
	return i.ToCloudProjectDatabaseDatabaseOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseDatabase) ToCloudProjectDatabaseDatabaseOutputWithContext(ctx context.Context) CloudProjectDatabaseDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseDatabaseOutput)
}

type CloudProjectDatabaseDatabaseOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseDatabase)(nil)).Elem()
}

func (o CloudProjectDatabaseDatabaseOutput) ToCloudProjectDatabaseDatabaseOutput() CloudProjectDatabaseDatabaseOutput {
	return o
}

func (o CloudProjectDatabaseDatabaseOutput) ToCloudProjectDatabaseDatabaseOutputWithContext(ctx context.Context) CloudProjectDatabaseDatabaseOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Defines if the database has been created by default
func (o CloudProjectDatabaseDatabaseOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

// Name of the engine of the service
func (o CloudProjectDatabaseDatabaseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Database name
func (o CloudProjectDatabaseDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseDatabaseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o CloudProjectDatabaseDatabaseOutput) Timeouts() CloudProjectDatabaseDatabaseTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseDatabase) CloudProjectDatabaseDatabaseTimeoutsPtrOutput { return v.Timeouts }).(CloudProjectDatabaseDatabaseTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseDatabaseInput)(nil)).Elem(), &CloudProjectDatabaseDatabase{})
	pulumi.RegisterOutputType(CloudProjectDatabaseDatabaseOutput{})
}
