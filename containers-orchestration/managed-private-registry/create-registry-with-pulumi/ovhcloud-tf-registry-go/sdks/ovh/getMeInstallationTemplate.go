// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMeInstallationTemplate(ctx *pulumi.Context, args *LookupMeInstallationTemplateArgs, opts ...pulumi.InvokeOption) (*LookupMeInstallationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupMeInstallationTemplateResult
	err = ctx.InvokePackage("ovh:index/getMeInstallationTemplate:getMeInstallationTemplate", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMeInstallationTemplate.
type LookupMeInstallationTemplateArgs struct {
	Id           *string `pulumi:"id"`
	TemplateName string  `pulumi:"templateName"`
}

// A collection of values returned by getMeInstallationTemplate.
type LookupMeInstallationTemplateResult struct {
	BitFormat      float64                                  `pulumi:"bitFormat"`
	Category       string                                   `pulumi:"category"`
	Customizations []GetMeInstallationTemplateCustomization `pulumi:"customizations"`
	Description    string                                   `pulumi:"description"`
	Distribution   string                                   `pulumi:"distribution"`
	EndOfInstall   string                                   `pulumi:"endOfInstall"`
	Family         string                                   `pulumi:"family"`
	Filesystems    []string                                 `pulumi:"filesystems"`
	// Deprecated: Deprecated
	HardRaidConfiguration bool                                           `pulumi:"hardRaidConfiguration"`
	Id                    string                                         `pulumi:"id"`
	Inputs                []GetMeInstallationTemplateInput               `pulumi:"inputs"`
	LvmReady              bool                                           `pulumi:"lvmReady"`
	NoPartitioning        bool                                           `pulumi:"noPartitioning"`
	PartitionSchemes      []GetMeInstallationTemplatePartitionSchemeType `pulumi:"partitionSchemes"`
	SoftRaidOnlyMirroring bool                                           `pulumi:"softRaidOnlyMirroring"`
	Subfamily             string                                         `pulumi:"subfamily"`
	TemplateName          string                                         `pulumi:"templateName"`
}

func LookupMeInstallationTemplateOutput(ctx *pulumi.Context, args LookupMeInstallationTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupMeInstallationTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMeInstallationTemplateResult, error) {
			args := v.(LookupMeInstallationTemplateArgs)
			r, err := LookupMeInstallationTemplate(ctx, &args, opts...)
			var s LookupMeInstallationTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMeInstallationTemplateResultOutput)
}

// A collection of arguments for invoking getMeInstallationTemplate.
type LookupMeInstallationTemplateOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	TemplateName pulumi.StringInput    `pulumi:"templateName"`
}

func (LookupMeInstallationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeInstallationTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getMeInstallationTemplate.
type LookupMeInstallationTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupMeInstallationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeInstallationTemplateResult)(nil)).Elem()
}

func (o LookupMeInstallationTemplateResultOutput) ToLookupMeInstallationTemplateResultOutput() LookupMeInstallationTemplateResultOutput {
	return o
}

func (o LookupMeInstallationTemplateResultOutput) ToLookupMeInstallationTemplateResultOutputWithContext(ctx context.Context) LookupMeInstallationTemplateResultOutput {
	return o
}

func (o LookupMeInstallationTemplateResultOutput) BitFormat() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) float64 { return v.BitFormat }).(pulumi.Float64Output)
}

func (o LookupMeInstallationTemplateResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Category }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Customizations() GetMeInstallationTemplateCustomizationArrayOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) []GetMeInstallationTemplateCustomization {
		return v.Customizations
	}).(GetMeInstallationTemplateCustomizationArrayOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Distribution }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) EndOfInstall() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.EndOfInstall }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Family }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Filesystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) []string { return v.Filesystems }).(pulumi.StringArrayOutput)
}

// Deprecated: Deprecated
func (o LookupMeInstallationTemplateResultOutput) HardRaidConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) bool { return v.HardRaidConfiguration }).(pulumi.BoolOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Inputs() GetMeInstallationTemplateInputArrayOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) []GetMeInstallationTemplateInput { return v.Inputs }).(GetMeInstallationTemplateInputArrayOutput)
}

func (o LookupMeInstallationTemplateResultOutput) LvmReady() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) bool { return v.LvmReady }).(pulumi.BoolOutput)
}

func (o LookupMeInstallationTemplateResultOutput) NoPartitioning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) bool { return v.NoPartitioning }).(pulumi.BoolOutput)
}

func (o LookupMeInstallationTemplateResultOutput) PartitionSchemes() GetMeInstallationTemplatePartitionSchemeTypeArrayOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) []GetMeInstallationTemplatePartitionSchemeType {
		return v.PartitionSchemes
	}).(GetMeInstallationTemplatePartitionSchemeTypeArrayOutput)
}

func (o LookupMeInstallationTemplateResultOutput) SoftRaidOnlyMirroring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) bool { return v.SoftRaidOnlyMirroring }).(pulumi.BoolOutput)
}

func (o LookupMeInstallationTemplateResultOutput) Subfamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.Subfamily }).(pulumi.StringOutput)
}

func (o LookupMeInstallationTemplateResultOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeInstallationTemplateResult) string { return v.TemplateName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMeInstallationTemplateResultOutput{})
}
