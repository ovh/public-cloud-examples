// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseMongodbUser struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the user
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the user
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	// Roles the user belongs to with the authentication database
	Roles       pulumi.StringArrayOutput `pulumi:"roles"`
	ServiceName pulumi.StringPtrOutput   `pulumi:"serviceName"`
	// Current status of the user
	Status   pulumi.StringOutput                              `pulumi:"status"`
	Timeouts CloudProjectDatabaseMongodbUserTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseMongodbUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseMongodbUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseMongodbUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseMongodbUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseMongodbUser
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseMongodbUser:CloudProjectDatabaseMongodbUser", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseMongodbUser gets an existing CloudProjectDatabaseMongodbUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseMongodbUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseMongodbUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseMongodbUser, error) {
	var resource CloudProjectDatabaseMongodbUser
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseMongodbUser:CloudProjectDatabaseMongodbUser", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseMongodbUser resources.
type cloudProjectDatabaseMongodbUserState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Password of the user
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// Roles the user belongs to with the authentication database
	Roles       []string `pulumi:"roles"`
	ServiceName *string  `pulumi:"serviceName"`
	// Current status of the user
	Status   *string                                  `pulumi:"status"`
	Timeouts *CloudProjectDatabaseMongodbUserTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseMongodbUserState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Date of the creation of the user
	CreatedAt pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Password of the user
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// Roles the user belongs to with the authentication database
	Roles       pulumi.StringArrayInput
	ServiceName pulumi.StringPtrInput
	// Current status of the user
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseMongodbUserTimeoutsPtrInput
}

func (CloudProjectDatabaseMongodbUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseMongodbUserState)(nil)).Elem()
}

type cloudProjectDatabaseMongodbUserArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// Roles the user belongs to with the authentication database
	Roles       []string                                 `pulumi:"roles"`
	ServiceName *string                                  `pulumi:"serviceName"`
	Timeouts    *CloudProjectDatabaseMongodbUserTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseMongodbUser resource.
type CloudProjectDatabaseMongodbUserArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// Roles the user belongs to with the authentication database
	Roles       pulumi.StringArrayInput
	ServiceName pulumi.StringPtrInput
	Timeouts    CloudProjectDatabaseMongodbUserTimeoutsPtrInput
}

func (CloudProjectDatabaseMongodbUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseMongodbUserArgs)(nil)).Elem()
}

type CloudProjectDatabaseMongodbUserInput interface {
	pulumi.Input

	ToCloudProjectDatabaseMongodbUserOutput() CloudProjectDatabaseMongodbUserOutput
	ToCloudProjectDatabaseMongodbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseMongodbUserOutput
}

func (*CloudProjectDatabaseMongodbUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseMongodbUser)(nil)).Elem()
}

func (i *CloudProjectDatabaseMongodbUser) ToCloudProjectDatabaseMongodbUserOutput() CloudProjectDatabaseMongodbUserOutput {
	return i.ToCloudProjectDatabaseMongodbUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseMongodbUser) ToCloudProjectDatabaseMongodbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseMongodbUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseMongodbUserOutput)
}

type CloudProjectDatabaseMongodbUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseMongodbUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseMongodbUser)(nil)).Elem()
}

func (o CloudProjectDatabaseMongodbUserOutput) ToCloudProjectDatabaseMongodbUserOutput() CloudProjectDatabaseMongodbUserOutput {
	return o
}

func (o CloudProjectDatabaseMongodbUserOutput) ToCloudProjectDatabaseMongodbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseMongodbUserOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseMongodbUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user
func (o CloudProjectDatabaseMongodbUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the user
func (o CloudProjectDatabaseMongodbUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the user
func (o CloudProjectDatabaseMongodbUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabaseMongodbUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

// Roles the user belongs to with the authentication database
func (o CloudProjectDatabaseMongodbUserOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o CloudProjectDatabaseMongodbUserOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the user
func (o CloudProjectDatabaseMongodbUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseMongodbUserOutput) Timeouts() CloudProjectDatabaseMongodbUserTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseMongodbUser) CloudProjectDatabaseMongodbUserTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudProjectDatabaseMongodbUserTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseMongodbUserInput)(nil)).Elem(), &CloudProjectDatabaseMongodbUser{})
	pulumi.RegisterOutputType(CloudProjectDatabaseMongodbUserOutput{})
}
