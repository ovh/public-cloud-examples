// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Vrack struct {
	pulumi.CustomResourceState

	// yourvrackdescription
	Description pulumi.StringOutput `pulumi:"description"`
	// yourvrackname
	Name pulumi.StringOutput `pulumi:"name"`
	// Details about an Order
	Orders VrackOrderArrayOutput `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	OvhUrn        pulumi.StringOutput `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan VrackPlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions VrackPlanOptionArrayOutput `pulumi:"planOptions"`
	// The internal name of your vrack
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewVrack registers a new resource with the given unique name, arguments, and options.
func NewVrack(ctx *pulumi.Context,
	name string, args *VrackArgs, opts ...pulumi.ResourceOption) (*Vrack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource Vrack
	err = ctx.RegisterPackageResource("ovh:index/vrack:Vrack", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVrack gets an existing Vrack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVrack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VrackState, opts ...pulumi.ResourceOption) (*Vrack, error) {
	var resource Vrack
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/vrack:Vrack", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vrack resources.
type vrackState struct {
	// yourvrackdescription
	Description *string `pulumi:"description"`
	// yourvrackname
	Name *string `pulumi:"name"`
	// Details about an Order
	Orders []VrackOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	OvhUrn        *string `pulumi:"ovhUrn"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *VrackPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []VrackPlanOption `pulumi:"planOptions"`
	// The internal name of your vrack
	ServiceName *string `pulumi:"serviceName"`
}

type VrackState struct {
	// yourvrackdescription
	Description pulumi.StringPtrInput
	// yourvrackname
	Name pulumi.StringPtrInput
	// Details about an Order
	Orders VrackOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	OvhUrn        pulumi.StringPtrInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan VrackPlanPtrInput
	// Product Plan to order
	PlanOptions VrackPlanOptionArrayInput
	// The internal name of your vrack
	ServiceName pulumi.StringPtrInput
}

func (VrackState) ElementType() reflect.Type {
	return reflect.TypeOf((*vrackState)(nil)).Elem()
}

type vrackArgs struct {
	// yourvrackdescription
	Description *string `pulumi:"description"`
	// yourvrackname
	Name *string `pulumi:"name"`
	// Details about an Order
	Orders []VrackOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan VrackPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []VrackPlanOption `pulumi:"planOptions"`
}

// The set of arguments for constructing a Vrack resource.
type VrackArgs struct {
	// yourvrackdescription
	Description pulumi.StringPtrInput
	// yourvrackname
	Name pulumi.StringPtrInput
	// Details about an Order
	Orders VrackOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode
	//
	// Deprecated: Deprecated
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan VrackPlanInput
	// Product Plan to order
	PlanOptions VrackPlanOptionArrayInput
}

func (VrackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vrackArgs)(nil)).Elem()
}

type VrackInput interface {
	pulumi.Input

	ToVrackOutput() VrackOutput
	ToVrackOutputWithContext(ctx context.Context) VrackOutput
}

func (*Vrack) ElementType() reflect.Type {
	return reflect.TypeOf((**Vrack)(nil)).Elem()
}

func (i *Vrack) ToVrackOutput() VrackOutput {
	return i.ToVrackOutputWithContext(context.Background())
}

func (i *Vrack) ToVrackOutputWithContext(ctx context.Context) VrackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VrackOutput)
}

type VrackOutput struct{ *pulumi.OutputState }

func (VrackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vrack)(nil)).Elem()
}

func (o VrackOutput) ToVrackOutput() VrackOutput {
	return o
}

func (o VrackOutput) ToVrackOutputWithContext(ctx context.Context) VrackOutput {
	return o
}

// yourvrackdescription
func (o VrackOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// yourvrackname
func (o VrackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Details about an Order
func (o VrackOutput) Orders() VrackOrderArrayOutput {
	return o.ApplyT(func(v *Vrack) VrackOrderArrayOutput { return v.Orders }).(VrackOrderArrayOutput)
}

// Ovh Subsidiary
func (o VrackOutput) OvhSubsidiary() pulumi.StringOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringOutput { return v.OvhSubsidiary }).(pulumi.StringOutput)
}

func (o VrackOutput) OvhUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringOutput { return v.OvhUrn }).(pulumi.StringOutput)
}

// Ovh payment mode
//
// Deprecated: Deprecated
func (o VrackOutput) PaymentMean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringPtrOutput { return v.PaymentMean }).(pulumi.StringPtrOutput)
}

// Product Plan to order
func (o VrackOutput) Plan() VrackPlanOutput {
	return o.ApplyT(func(v *Vrack) VrackPlanOutput { return v.Plan }).(VrackPlanOutput)
}

// Product Plan to order
func (o VrackOutput) PlanOptions() VrackPlanOptionArrayOutput {
	return o.ApplyT(func(v *Vrack) VrackPlanOptionArrayOutput { return v.PlanOptions }).(VrackPlanOptionArrayOutput)
}

// The internal name of your vrack
func (o VrackOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Vrack) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VrackInput)(nil)).Elem(), &Vrack{})
	pulumi.RegisterOutputType(VrackOutput{})
}
