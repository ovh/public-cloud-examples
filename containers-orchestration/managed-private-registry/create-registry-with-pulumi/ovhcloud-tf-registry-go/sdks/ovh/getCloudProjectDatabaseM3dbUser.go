// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseM3dbUser(ctx *pulumi.Context, args *LookupCloudProjectDatabaseM3dbUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseM3dbUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseM3dbUserResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseM3dbUser:getCloudProjectDatabaseM3dbUser", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseM3dbUser.
type LookupCloudProjectDatabaseM3dbUserArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          *string `pulumi:"id"`
	Name        string  `pulumi:"name"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseM3dbUser.
type LookupCloudProjectDatabaseM3dbUserResult struct {
	ClusterId   string  `pulumi:"clusterId"`
	CreatedAt   string  `pulumi:"createdAt"`
	Group       string  `pulumi:"group"`
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	ServiceName *string `pulumi:"serviceName"`
	Status      string  `pulumi:"status"`
}

func LookupCloudProjectDatabaseM3dbUserOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseM3dbUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseM3dbUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseM3dbUserResult, error) {
			args := v.(LookupCloudProjectDatabaseM3dbUserArgs)
			r, err := LookupCloudProjectDatabaseM3dbUser(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseM3dbUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseM3dbUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseM3dbUser.
type LookupCloudProjectDatabaseM3dbUserOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringInput    `pulumi:"name"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseM3dbUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseM3dbUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseM3dbUser.
type LookupCloudProjectDatabaseM3dbUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseM3dbUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseM3dbUserResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) ToLookupCloudProjectDatabaseM3dbUserResultOutput() LookupCloudProjectDatabaseM3dbUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) ToLookupCloudProjectDatabaseM3dbUserResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseM3dbUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.Group }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseM3dbUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseM3dbUserResultOutput{})
}
