// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectUserS3Policy(ctx *pulumi.Context, args *LookupCloudProjectUserS3PolicyArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectUserS3PolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectUserS3PolicyResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectUserS3Policy:getCloudProjectUserS3Policy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectUserS3Policy.
type LookupCloudProjectUserS3PolicyArgs struct {
	Id          *string `pulumi:"id"`
	ServiceName *string `pulumi:"serviceName"`
	UserId      string  `pulumi:"userId"`
}

// A collection of values returned by getCloudProjectUserS3Policy.
type LookupCloudProjectUserS3PolicyResult struct {
	Id          string  `pulumi:"id"`
	Policy      string  `pulumi:"policy"`
	ServiceName *string `pulumi:"serviceName"`
	UserId      string  `pulumi:"userId"`
}

func LookupCloudProjectUserS3PolicyOutput(ctx *pulumi.Context, args LookupCloudProjectUserS3PolicyOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectUserS3PolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectUserS3PolicyResult, error) {
			args := v.(LookupCloudProjectUserS3PolicyArgs)
			r, err := LookupCloudProjectUserS3Policy(ctx, &args, opts...)
			var s LookupCloudProjectUserS3PolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectUserS3PolicyResultOutput)
}

// A collection of arguments for invoking getCloudProjectUserS3Policy.
type LookupCloudProjectUserS3PolicyOutputArgs struct {
	Id          pulumi.StringPtrInput `pulumi:"id"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	UserId      pulumi.StringInput    `pulumi:"userId"`
}

func (LookupCloudProjectUserS3PolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectUserS3PolicyArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectUserS3Policy.
type LookupCloudProjectUserS3PolicyResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectUserS3PolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectUserS3PolicyResult)(nil)).Elem()
}

func (o LookupCloudProjectUserS3PolicyResultOutput) ToLookupCloudProjectUserS3PolicyResultOutput() LookupCloudProjectUserS3PolicyResultOutput {
	return o
}

func (o LookupCloudProjectUserS3PolicyResultOutput) ToLookupCloudProjectUserS3PolicyResultOutputWithContext(ctx context.Context) LookupCloudProjectUserS3PolicyResultOutput {
	return o
}

func (o LookupCloudProjectUserS3PolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserS3PolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserS3PolicyResultOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserS3PolicyResult) string { return v.Policy }).(pulumi.StringOutput)
}

func (o LookupCloudProjectUserS3PolicyResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectUserS3PolicyResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectUserS3PolicyResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectUserS3PolicyResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectUserS3PolicyResultOutput{})
}
