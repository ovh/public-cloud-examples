// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupIpFirewallRule(ctx *pulumi.Context, args *LookupIpFirewallRuleArgs, opts ...pulumi.InvokeOption) (*LookupIpFirewallRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupIpFirewallRuleResult
	err = ctx.InvokePackage("ovh:index/getIpFirewallRule:getIpFirewallRule", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpFirewallRule.
type LookupIpFirewallRuleArgs struct {
	Ip           string  `pulumi:"ip"`
	IpOnFirewall string  `pulumi:"ipOnFirewall"`
	Sequence     float64 `pulumi:"sequence"`
}

// A collection of values returned by getIpFirewallRule.
type LookupIpFirewallRuleResult struct {
	Action          string `pulumi:"action"`
	CreationDate    string `pulumi:"creationDate"`
	Destination     string `pulumi:"destination"`
	DestinationPort string `pulumi:"destinationPort"`
	Fragments       bool   `pulumi:"fragments"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	Ip           string  `pulumi:"ip"`
	IpOnFirewall string  `pulumi:"ipOnFirewall"`
	Protocol     string  `pulumi:"protocol"`
	Rule         string  `pulumi:"rule"`
	Sequence     float64 `pulumi:"sequence"`
	Source       string  `pulumi:"source"`
	SourcePort   string  `pulumi:"sourcePort"`
	State        string  `pulumi:"state"`
	TcpOption    string  `pulumi:"tcpOption"`
}

func LookupIpFirewallRuleOutput(ctx *pulumi.Context, args LookupIpFirewallRuleOutputArgs, opts ...pulumi.InvokeOption) LookupIpFirewallRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpFirewallRuleResult, error) {
			args := v.(LookupIpFirewallRuleArgs)
			r, err := LookupIpFirewallRule(ctx, &args, opts...)
			var s LookupIpFirewallRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpFirewallRuleResultOutput)
}

// A collection of arguments for invoking getIpFirewallRule.
type LookupIpFirewallRuleOutputArgs struct {
	Ip           pulumi.StringInput  `pulumi:"ip"`
	IpOnFirewall pulumi.StringInput  `pulumi:"ipOnFirewall"`
	Sequence     pulumi.Float64Input `pulumi:"sequence"`
}

func (LookupIpFirewallRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpFirewallRuleArgs)(nil)).Elem()
}

// A collection of values returned by getIpFirewallRule.
type LookupIpFirewallRuleResultOutput struct{ *pulumi.OutputState }

func (LookupIpFirewallRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpFirewallRuleResult)(nil)).Elem()
}

func (o LookupIpFirewallRuleResultOutput) ToLookupIpFirewallRuleResultOutput() LookupIpFirewallRuleResultOutput {
	return o
}

func (o LookupIpFirewallRuleResultOutput) ToLookupIpFirewallRuleResultOutputWithContext(ctx context.Context) LookupIpFirewallRuleResultOutput {
	return o
}

func (o LookupIpFirewallRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Destination }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.DestinationPort }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Fragments() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) bool { return v.Fragments }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIpFirewallRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) IpOnFirewall() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.IpOnFirewall }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Rule }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) Sequence() pulumi.Float64Output {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) float64 { return v.Sequence }).(pulumi.Float64Output)
}

func (o LookupIpFirewallRuleResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.Source }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.SourcePort }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupIpFirewallRuleResultOutput) TcpOption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpFirewallRuleResult) string { return v.TcpOption }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpFirewallRuleResultOutput{})
}
