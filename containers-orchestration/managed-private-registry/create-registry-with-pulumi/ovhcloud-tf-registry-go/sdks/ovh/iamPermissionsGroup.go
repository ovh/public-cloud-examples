// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamPermissionsGroup struct {
	pulumi.CustomResourceState

	Allows      pulumi.StringArrayOutput `pulumi:"allows"`
	CreatedAt   pulumi.StringOutput      `pulumi:"createdAt"`
	Denies      pulumi.StringArrayOutput `pulumi:"denies"`
	Description pulumi.StringOutput      `pulumi:"description"`
	Excepts     pulumi.StringArrayOutput `pulumi:"excepts"`
	Name        pulumi.StringOutput      `pulumi:"name"`
	OvhUrn      pulumi.StringOutput      `pulumi:"ovhUrn"`
	Owner       pulumi.StringOutput      `pulumi:"owner"`
	UpdatedAt   pulumi.StringOutput      `pulumi:"updatedAt"`
}

// NewIamPermissionsGroup registers a new resource with the given unique name, arguments, and options.
func NewIamPermissionsGroup(ctx *pulumi.Context,
	name string, args *IamPermissionsGroupArgs, opts ...pulumi.ResourceOption) (*IamPermissionsGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IamPermissionsGroup
	err = ctx.RegisterPackageResource("ovh:index/iamPermissionsGroup:IamPermissionsGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamPermissionsGroup gets an existing IamPermissionsGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamPermissionsGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamPermissionsGroupState, opts ...pulumi.ResourceOption) (*IamPermissionsGroup, error) {
	var resource IamPermissionsGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/iamPermissionsGroup:IamPermissionsGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamPermissionsGroup resources.
type iamPermissionsGroupState struct {
	Allows      []string `pulumi:"allows"`
	CreatedAt   *string  `pulumi:"createdAt"`
	Denies      []string `pulumi:"denies"`
	Description *string  `pulumi:"description"`
	Excepts     []string `pulumi:"excepts"`
	Name        *string  `pulumi:"name"`
	OvhUrn      *string  `pulumi:"ovhUrn"`
	Owner       *string  `pulumi:"owner"`
	UpdatedAt   *string  `pulumi:"updatedAt"`
}

type IamPermissionsGroupState struct {
	Allows      pulumi.StringArrayInput
	CreatedAt   pulumi.StringPtrInput
	Denies      pulumi.StringArrayInput
	Description pulumi.StringPtrInput
	Excepts     pulumi.StringArrayInput
	Name        pulumi.StringPtrInput
	OvhUrn      pulumi.StringPtrInput
	Owner       pulumi.StringPtrInput
	UpdatedAt   pulumi.StringPtrInput
}

func (IamPermissionsGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamPermissionsGroupState)(nil)).Elem()
}

type iamPermissionsGroupArgs struct {
	Allows      []string `pulumi:"allows"`
	Denies      []string `pulumi:"denies"`
	Description string   `pulumi:"description"`
	Excepts     []string `pulumi:"excepts"`
	Name        *string  `pulumi:"name"`
	UpdatedAt   *string  `pulumi:"updatedAt"`
}

// The set of arguments for constructing a IamPermissionsGroup resource.
type IamPermissionsGroupArgs struct {
	Allows      pulumi.StringArrayInput
	Denies      pulumi.StringArrayInput
	Description pulumi.StringInput
	Excepts     pulumi.StringArrayInput
	Name        pulumi.StringPtrInput
	UpdatedAt   pulumi.StringPtrInput
}

func (IamPermissionsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamPermissionsGroupArgs)(nil)).Elem()
}

type IamPermissionsGroupInput interface {
	pulumi.Input

	ToIamPermissionsGroupOutput() IamPermissionsGroupOutput
	ToIamPermissionsGroupOutputWithContext(ctx context.Context) IamPermissionsGroupOutput
}

func (*IamPermissionsGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**IamPermissionsGroup)(nil)).Elem()
}

func (i *IamPermissionsGroup) ToIamPermissionsGroupOutput() IamPermissionsGroupOutput {
	return i.ToIamPermissionsGroupOutputWithContext(context.Background())
}

func (i *IamPermissionsGroup) ToIamPermissionsGroupOutputWithContext(ctx context.Context) IamPermissionsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamPermissionsGroupOutput)
}

type IamPermissionsGroupOutput struct{ *pulumi.OutputState }

func (IamPermissionsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamPermissionsGroup)(nil)).Elem()
}

func (o IamPermissionsGroupOutput) ToIamPermissionsGroupOutput() IamPermissionsGroupOutput {
	return o
}

func (o IamPermissionsGroupOutput) ToIamPermissionsGroupOutputWithContext(ctx context.Context) IamPermissionsGroupOutput {
	return o
}

func (o IamPermissionsGroupOutput) Allows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringArrayOutput { return v.Allows }).(pulumi.StringArrayOutput)
}

func (o IamPermissionsGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IamPermissionsGroupOutput) Denies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringArrayOutput { return v.Denies }).(pulumi.StringArrayOutput)
}

func (o IamPermissionsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o IamPermissionsGroupOutput) Excepts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringArrayOutput { return v.Excepts }).(pulumi.StringArrayOutput)
}

func (o IamPermissionsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IamPermissionsGroupOutput) OvhUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.OvhUrn }).(pulumi.StringOutput)
}

func (o IamPermissionsGroupOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o IamPermissionsGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IamPermissionsGroup) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamPermissionsGroupInput)(nil)).Elem(), &IamPermissionsGroup{})
	pulumi.RegisterOutputType(IamPermissionsGroupOutput{})
}
