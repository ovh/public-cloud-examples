// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseM3dbUser struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Group of the user
	Group pulumi.StringPtrOutput `pulumi:"group"`
	// Name of the user
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the user
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	ServiceName   pulumi.StringPtrOutput `pulumi:"serviceName"`
	// Current status of the user
	Status   pulumi.StringOutput                           `pulumi:"status"`
	Timeouts CloudProjectDatabaseM3dbUserTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseM3dbUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseM3dbUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseM3dbUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseM3dbUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseM3dbUser
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseM3dbUser:CloudProjectDatabaseM3dbUser", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseM3dbUser gets an existing CloudProjectDatabaseM3dbUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseM3dbUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseM3dbUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseM3dbUser, error) {
	var resource CloudProjectDatabaseM3dbUser
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseM3dbUser:CloudProjectDatabaseM3dbUser", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseM3dbUser resources.
type cloudProjectDatabaseM3dbUserState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt *string `pulumi:"createdAt"`
	// Group of the user
	Group *string `pulumi:"group"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Password of the user
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	ServiceName   *string `pulumi:"serviceName"`
	// Current status of the user
	Status   *string                               `pulumi:"status"`
	Timeouts *CloudProjectDatabaseM3dbUserTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseM3dbUserState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Date of the creation of the user
	CreatedAt pulumi.StringPtrInput
	// Group of the user
	Group pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Password of the user
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	// Current status of the user
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseM3dbUserTimeoutsPtrInput
}

func (CloudProjectDatabaseM3dbUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseM3dbUserState)(nil)).Elem()
}

type cloudProjectDatabaseM3dbUserArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Group of the user
	Group *string `pulumi:"group"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string                               `pulumi:"passwordReset"`
	ServiceName   *string                               `pulumi:"serviceName"`
	Timeouts      *CloudProjectDatabaseM3dbUserTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseM3dbUser resource.
type CloudProjectDatabaseM3dbUserArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Group of the user
	Group pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	Timeouts      CloudProjectDatabaseM3dbUserTimeoutsPtrInput
}

func (CloudProjectDatabaseM3dbUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseM3dbUserArgs)(nil)).Elem()
}

type CloudProjectDatabaseM3dbUserInput interface {
	pulumi.Input

	ToCloudProjectDatabaseM3dbUserOutput() CloudProjectDatabaseM3dbUserOutput
	ToCloudProjectDatabaseM3dbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseM3dbUserOutput
}

func (*CloudProjectDatabaseM3dbUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseM3dbUser)(nil)).Elem()
}

func (i *CloudProjectDatabaseM3dbUser) ToCloudProjectDatabaseM3dbUserOutput() CloudProjectDatabaseM3dbUserOutput {
	return i.ToCloudProjectDatabaseM3dbUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseM3dbUser) ToCloudProjectDatabaseM3dbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseM3dbUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseM3dbUserOutput)
}

type CloudProjectDatabaseM3dbUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseM3dbUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseM3dbUser)(nil)).Elem()
}

func (o CloudProjectDatabaseM3dbUserOutput) ToCloudProjectDatabaseM3dbUserOutput() CloudProjectDatabaseM3dbUserOutput {
	return o
}

func (o CloudProjectDatabaseM3dbUserOutput) ToCloudProjectDatabaseM3dbUserOutputWithContext(ctx context.Context) CloudProjectDatabaseM3dbUserOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseM3dbUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user
func (o CloudProjectDatabaseM3dbUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Group of the user
func (o CloudProjectDatabaseM3dbUserOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringPtrOutput { return v.Group }).(pulumi.StringPtrOutput)
}

// Name of the user
func (o CloudProjectDatabaseM3dbUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the user
func (o CloudProjectDatabaseM3dbUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabaseM3dbUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

func (o CloudProjectDatabaseM3dbUserOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the user
func (o CloudProjectDatabaseM3dbUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseM3dbUserOutput) Timeouts() CloudProjectDatabaseM3dbUserTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseM3dbUser) CloudProjectDatabaseM3dbUserTimeoutsPtrOutput { return v.Timeouts }).(CloudProjectDatabaseM3dbUserTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseM3dbUserInput)(nil)).Elem(), &CloudProjectDatabaseM3dbUser{})
	pulumi.RegisterOutputType(CloudProjectDatabaseM3dbUserOutput{})
}
