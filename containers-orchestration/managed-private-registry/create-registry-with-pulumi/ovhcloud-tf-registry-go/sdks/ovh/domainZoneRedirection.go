// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainZoneRedirection struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	Keywords    pulumi.StringPtrOutput `pulumi:"keywords"`
	Subdomain   pulumi.StringPtrOutput `pulumi:"subdomain"`
	Target      pulumi.StringOutput    `pulumi:"target"`
	Title       pulumi.StringPtrOutput `pulumi:"title"`
	Type        pulumi.StringOutput    `pulumi:"type"`
	Zone        pulumi.StringOutput    `pulumi:"zone"`
}

// NewDomainZoneRedirection registers a new resource with the given unique name, arguments, and options.
func NewDomainZoneRedirection(ctx *pulumi.Context,
	name string, args *DomainZoneRedirectionArgs, opts ...pulumi.ResourceOption) (*DomainZoneRedirection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DomainZoneRedirection
	err = ctx.RegisterPackageResource("ovh:index/domainZoneRedirection:DomainZoneRedirection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainZoneRedirection gets an existing DomainZoneRedirection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainZoneRedirection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainZoneRedirectionState, opts ...pulumi.ResourceOption) (*DomainZoneRedirection, error) {
	var resource DomainZoneRedirection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/domainZoneRedirection:DomainZoneRedirection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainZoneRedirection resources.
type domainZoneRedirectionState struct {
	Description *string `pulumi:"description"`
	Keywords    *string `pulumi:"keywords"`
	Subdomain   *string `pulumi:"subdomain"`
	Target      *string `pulumi:"target"`
	Title       *string `pulumi:"title"`
	Type        *string `pulumi:"type"`
	Zone        *string `pulumi:"zone"`
}

type DomainZoneRedirectionState struct {
	Description pulumi.StringPtrInput
	Keywords    pulumi.StringPtrInput
	Subdomain   pulumi.StringPtrInput
	Target      pulumi.StringPtrInput
	Title       pulumi.StringPtrInput
	Type        pulumi.StringPtrInput
	Zone        pulumi.StringPtrInput
}

func (DomainZoneRedirectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneRedirectionState)(nil)).Elem()
}

type domainZoneRedirectionArgs struct {
	Description *string `pulumi:"description"`
	Keywords    *string `pulumi:"keywords"`
	Subdomain   *string `pulumi:"subdomain"`
	Target      string  `pulumi:"target"`
	Title       *string `pulumi:"title"`
	Type        string  `pulumi:"type"`
	Zone        string  `pulumi:"zone"`
}

// The set of arguments for constructing a DomainZoneRedirection resource.
type DomainZoneRedirectionArgs struct {
	Description pulumi.StringPtrInput
	Keywords    pulumi.StringPtrInput
	Subdomain   pulumi.StringPtrInput
	Target      pulumi.StringInput
	Title       pulumi.StringPtrInput
	Type        pulumi.StringInput
	Zone        pulumi.StringInput
}

func (DomainZoneRedirectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneRedirectionArgs)(nil)).Elem()
}

type DomainZoneRedirectionInput interface {
	pulumi.Input

	ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput
	ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput
}

func (*DomainZoneRedirection) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneRedirection)(nil)).Elem()
}

func (i *DomainZoneRedirection) ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput {
	return i.ToDomainZoneRedirectionOutputWithContext(context.Background())
}

func (i *DomainZoneRedirection) ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneRedirectionOutput)
}

type DomainZoneRedirectionOutput struct{ *pulumi.OutputState }

func (DomainZoneRedirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneRedirection)(nil)).Elem()
}

func (o DomainZoneRedirectionOutput) ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput {
	return o
}

func (o DomainZoneRedirectionOutput) ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput {
	return o
}

func (o DomainZoneRedirectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DomainZoneRedirectionOutput) Keywords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Keywords }).(pulumi.StringPtrOutput)
}

func (o DomainZoneRedirectionOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Subdomain }).(pulumi.StringPtrOutput)
}

func (o DomainZoneRedirectionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

func (o DomainZoneRedirectionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DomainZoneRedirectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o DomainZoneRedirectionOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneRedirectionInput)(nil)).Elem(), &DomainZoneRedirection{})
	pulumi.RegisterOutputType(DomainZoneRedirectionOutput{})
}
