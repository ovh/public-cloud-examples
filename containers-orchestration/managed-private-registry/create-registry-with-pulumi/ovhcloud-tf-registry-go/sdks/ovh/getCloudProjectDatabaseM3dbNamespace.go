// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudProjectDatabaseM3dbNamespace(ctx *pulumi.Context, args *LookupCloudProjectDatabaseM3dbNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseM3dbNamespaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudProjectDatabaseM3dbNamespaceResult
	err = ctx.InvokePackage("ovh:index/getCloudProjectDatabaseM3dbNamespace:getCloudProjectDatabaseM3dbNamespace", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseM3dbNamespace.
type LookupCloudProjectDatabaseM3dbNamespaceArgs struct {
	ClusterId   string  `pulumi:"clusterId"`
	Id          *string `pulumi:"id"`
	Name        string  `pulumi:"name"`
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseM3dbNamespace.
type LookupCloudProjectDatabaseM3dbNamespaceResult struct {
	ClusterId                            string  `pulumi:"clusterId"`
	Id                                   string  `pulumi:"id"`
	Name                                 string  `pulumi:"name"`
	Resolution                           string  `pulumi:"resolution"`
	RetentionBlockDataExpirationDuration string  `pulumi:"retentionBlockDataExpirationDuration"`
	RetentionBlockSizeDuration           string  `pulumi:"retentionBlockSizeDuration"`
	RetentionBufferFutureDuration        string  `pulumi:"retentionBufferFutureDuration"`
	RetentionBufferPastDuration          string  `pulumi:"retentionBufferPastDuration"`
	RetentionPeriodDuration              string  `pulumi:"retentionPeriodDuration"`
	ServiceName                          *string `pulumi:"serviceName"`
	SnapshotEnabled                      bool    `pulumi:"snapshotEnabled"`
	Type                                 string  `pulumi:"type"`
	WritesToCommitLogEnabled             bool    `pulumi:"writesToCommitLogEnabled"`
}

func LookupCloudProjectDatabaseM3dbNamespaceOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseM3dbNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseM3dbNamespaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseM3dbNamespaceResult, error) {
			args := v.(LookupCloudProjectDatabaseM3dbNamespaceArgs)
			r, err := LookupCloudProjectDatabaseM3dbNamespace(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseM3dbNamespaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseM3dbNamespaceResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseM3dbNamespace.
type LookupCloudProjectDatabaseM3dbNamespaceOutputArgs struct {
	ClusterId   pulumi.StringInput    `pulumi:"clusterId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringInput    `pulumi:"name"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseM3dbNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseM3dbNamespaceArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseM3dbNamespace.
type LookupCloudProjectDatabaseM3dbNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseM3dbNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseM3dbNamespaceResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) ToLookupCloudProjectDatabaseM3dbNamespaceResultOutput() LookupCloudProjectDatabaseM3dbNamespaceResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) ToLookupCloudProjectDatabaseM3dbNamespaceResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseM3dbNamespaceResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.Resolution }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) RetentionBlockDataExpirationDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string {
		return v.RetentionBlockDataExpirationDuration
	}).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) RetentionBlockSizeDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.RetentionBlockSizeDuration }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) RetentionBufferFutureDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.RetentionBufferFutureDuration }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) RetentionBufferPastDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.RetentionBufferPastDuration }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) RetentionPeriodDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.RetentionPeriodDuration }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) SnapshotEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) bool { return v.SnapshotEnabled }).(pulumi.BoolOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseM3dbNamespaceResultOutput) WritesToCommitLogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseM3dbNamespaceResult) bool { return v.WritesToCommitLogEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseM3dbNamespaceResultOutput{})
}
