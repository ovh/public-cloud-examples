// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDomainZone(ctx *pulumi.Context, args *LookupDomainZoneArgs, opts ...pulumi.InvokeOption) (*LookupDomainZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupDomainZoneResult
	err = ctx.InvokePackage("ovh:index/getDomainZone:getDomainZone", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainZone.
type LookupDomainZoneArgs struct {
	Id   *string `pulumi:"id"`
	Name string  `pulumi:"name"`
}

// A collection of values returned by getDomainZone.
type LookupDomainZoneResult struct {
	DnssecSupported bool     `pulumi:"dnssecSupported"`
	HasDnsAnycast   bool     `pulumi:"hasDnsAnycast"`
	Id              string   `pulumi:"id"`
	LastUpdate      string   `pulumi:"lastUpdate"`
	Name            string   `pulumi:"name"`
	NameServers     []string `pulumi:"nameServers"`
	Urn             string   `pulumi:"urn"`
}

func LookupDomainZoneOutput(ctx *pulumi.Context, args LookupDomainZoneOutputArgs, opts ...pulumi.InvokeOption) LookupDomainZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainZoneResult, error) {
			args := v.(LookupDomainZoneArgs)
			r, err := LookupDomainZone(ctx, &args, opts...)
			var s LookupDomainZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainZoneResultOutput)
}

// A collection of arguments for invoking getDomainZone.
type LookupDomainZoneOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringInput    `pulumi:"name"`
}

func (LookupDomainZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainZoneArgs)(nil)).Elem()
}

// A collection of values returned by getDomainZone.
type LookupDomainZoneResultOutput struct{ *pulumi.OutputState }

func (LookupDomainZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainZoneResult)(nil)).Elem()
}

func (o LookupDomainZoneResultOutput) ToLookupDomainZoneResultOutput() LookupDomainZoneResultOutput {
	return o
}

func (o LookupDomainZoneResultOutput) ToLookupDomainZoneResultOutputWithContext(ctx context.Context) LookupDomainZoneResultOutput {
	return o
}

func (o LookupDomainZoneResultOutput) DnssecSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) bool { return v.DnssecSupported }).(pulumi.BoolOutput)
}

func (o LookupDomainZoneResultOutput) HasDnsAnycast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) bool { return v.HasDnsAnycast }).(pulumi.BoolOutput)
}

func (o LookupDomainZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDomainZoneResultOutput) LastUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) string { return v.LastUpdate }).(pulumi.StringOutput)
}

func (o LookupDomainZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDomainZoneResultOutput) NameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) []string { return v.NameServers }).(pulumi.StringArrayOutput)
}

func (o LookupDomainZoneResultOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainZoneResult) string { return v.Urn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainZoneResultOutput{})
}
