// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectNetworkPrivateSubnet struct {
	pulumi.CustomResourceState

	Cidr      pulumi.StringOutput                               `pulumi:"cidr"`
	Dhcp      pulumi.BoolPtrOutput                              `pulumi:"dhcp"`
	End       pulumi.StringOutput                               `pulumi:"end"`
	GatewayIp pulumi.StringOutput                               `pulumi:"gatewayIp"`
	IpPools   CloudProjectNetworkPrivateSubnetIpPoolArrayOutput `pulumi:"ipPools"`
	Network   pulumi.StringOutput                               `pulumi:"network"`
	NetworkId pulumi.StringOutput                               `pulumi:"networkId"`
	NoGateway pulumi.BoolPtrOutput                              `pulumi:"noGateway"`
	Region    pulumi.StringOutput                               `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
	Start       pulumi.StringOutput    `pulumi:"start"`
}

// NewCloudProjectNetworkPrivateSubnet registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, args *CloudProjectNetworkPrivateSubnetArgs, opts ...pulumi.ResourceOption) (*CloudProjectNetworkPrivateSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.End == nil {
		return nil, errors.New("invalid value for required argument 'End'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Start == nil {
		return nil, errors.New("invalid value for required argument 'Start'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectNetworkPrivateSubnet
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectNetworkPrivateSubnet gets an existing CloudProjectNetworkPrivateSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectNetworkPrivateSubnetState, opts ...pulumi.ResourceOption) (*CloudProjectNetworkPrivateSubnet, error) {
	var resource CloudProjectNetworkPrivateSubnet
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectNetworkPrivateSubnet resources.
type cloudProjectNetworkPrivateSubnetState struct {
	Cidr      *string                                  `pulumi:"cidr"`
	Dhcp      *bool                                    `pulumi:"dhcp"`
	End       *string                                  `pulumi:"end"`
	GatewayIp *string                                  `pulumi:"gatewayIp"`
	IpPools   []CloudProjectNetworkPrivateSubnetIpPool `pulumi:"ipPools"`
	Network   *string                                  `pulumi:"network"`
	NetworkId *string                                  `pulumi:"networkId"`
	NoGateway *bool                                    `pulumi:"noGateway"`
	Region    *string                                  `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	Start       *string `pulumi:"start"`
}

type CloudProjectNetworkPrivateSubnetState struct {
	Cidr      pulumi.StringPtrInput
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringPtrInput
	GatewayIp pulumi.StringPtrInput
	IpPools   CloudProjectNetworkPrivateSubnetIpPoolArrayInput
	Network   pulumi.StringPtrInput
	NetworkId pulumi.StringPtrInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringPtrInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	Start       pulumi.StringPtrInput
}

func (CloudProjectNetworkPrivateSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectNetworkPrivateSubnetState)(nil)).Elem()
}

type cloudProjectNetworkPrivateSubnetArgs struct {
	Dhcp      *bool  `pulumi:"dhcp"`
	End       string `pulumi:"end"`
	Network   string `pulumi:"network"`
	NetworkId string `pulumi:"networkId"`
	NoGateway *bool  `pulumi:"noGateway"`
	Region    string `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	Start       string  `pulumi:"start"`
}

// The set of arguments for constructing a CloudProjectNetworkPrivateSubnet resource.
type CloudProjectNetworkPrivateSubnetArgs struct {
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringInput
	Network   pulumi.StringInput
	NetworkId pulumi.StringInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	Start       pulumi.StringInput
}

func (CloudProjectNetworkPrivateSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectNetworkPrivateSubnetArgs)(nil)).Elem()
}

type CloudProjectNetworkPrivateSubnetInput interface {
	pulumi.Input

	ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput
	ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput
}

func (*CloudProjectNetworkPrivateSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectNetworkPrivateSubnet)(nil)).Elem()
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput {
	return i.ToCloudProjectNetworkPrivateSubnetOutputWithContext(context.Background())
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetOutput)
}

type CloudProjectNetworkPrivateSubnetOutput struct{ *pulumi.OutputState }

func (CloudProjectNetworkPrivateSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectNetworkPrivateSubnet)(nil)).Elem()
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.BoolPtrOutput { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.End }).(pulumi.StringOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) IpPools() CloudProjectNetworkPrivateSubnetIpPoolArrayOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) CloudProjectNetworkPrivateSubnetIpPoolArrayOutput {
		return v.IpPools
	}).(CloudProjectNetworkPrivateSubnetIpPoolArrayOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) NoGateway() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.BoolPtrOutput { return v.NoGateway }).(pulumi.BoolPtrOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Service name of the resource representing the id of the cloud project.
func (o CloudProjectNetworkPrivateSubnetOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o CloudProjectNetworkPrivateSubnetOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) pulumi.StringOutput { return v.Start }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectNetworkPrivateSubnetInput)(nil)).Elem(), &CloudProjectNetworkPrivateSubnet{})
	pulumi.RegisterOutputType(CloudProjectNetworkPrivateSubnetOutput{})
}
