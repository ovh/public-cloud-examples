// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostingPrivatedatabaseWhitelist struct {
	pulumi.CustomResourceState

	// The whitelisted IP in your instance
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Custom name for your Whitelisted IP
	Name pulumi.StringOutput `pulumi:"name"`
	// Authorize this IP to access service port
	Service pulumi.BoolOutput `pulumi:"service"`
	// The internal name of your private database
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Authorize this IP to access SFTP port
	Sftp pulumi.BoolOutput `pulumi:"sftp"`
}

// NewHostingPrivatedatabaseWhitelist registers a new resource with the given unique name, arguments, and options.
func NewHostingPrivatedatabaseWhitelist(ctx *pulumi.Context,
	name string, args *HostingPrivatedatabaseWhitelistArgs, opts ...pulumi.ResourceOption) (*HostingPrivatedatabaseWhitelist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Sftp == nil {
		return nil, errors.New("invalid value for required argument 'Sftp'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HostingPrivatedatabaseWhitelist
	err = ctx.RegisterPackageResource("ovh:index/hostingPrivatedatabaseWhitelist:HostingPrivatedatabaseWhitelist", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostingPrivatedatabaseWhitelist gets an existing HostingPrivatedatabaseWhitelist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostingPrivatedatabaseWhitelist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostingPrivatedatabaseWhitelistState, opts ...pulumi.ResourceOption) (*HostingPrivatedatabaseWhitelist, error) {
	var resource HostingPrivatedatabaseWhitelist
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/hostingPrivatedatabaseWhitelist:HostingPrivatedatabaseWhitelist", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostingPrivatedatabaseWhitelist resources.
type hostingPrivatedatabaseWhitelistState struct {
	// The whitelisted IP in your instance
	Ip *string `pulumi:"ip"`
	// Custom name for your Whitelisted IP
	Name *string `pulumi:"name"`
	// Authorize this IP to access service port
	Service *bool `pulumi:"service"`
	// The internal name of your private database
	ServiceName *string `pulumi:"serviceName"`
	// Authorize this IP to access SFTP port
	Sftp *bool `pulumi:"sftp"`
}

type HostingPrivatedatabaseWhitelistState struct {
	// The whitelisted IP in your instance
	Ip pulumi.StringPtrInput
	// Custom name for your Whitelisted IP
	Name pulumi.StringPtrInput
	// Authorize this IP to access service port
	Service pulumi.BoolPtrInput
	// The internal name of your private database
	ServiceName pulumi.StringPtrInput
	// Authorize this IP to access SFTP port
	Sftp pulumi.BoolPtrInput
}

func (HostingPrivatedatabaseWhitelistState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingPrivatedatabaseWhitelistState)(nil)).Elem()
}

type hostingPrivatedatabaseWhitelistArgs struct {
	// The whitelisted IP in your instance
	Ip string `pulumi:"ip"`
	// Custom name for your Whitelisted IP
	Name *string `pulumi:"name"`
	// Authorize this IP to access service port
	Service bool `pulumi:"service"`
	// The internal name of your private database
	ServiceName string `pulumi:"serviceName"`
	// Authorize this IP to access SFTP port
	Sftp bool `pulumi:"sftp"`
}

// The set of arguments for constructing a HostingPrivatedatabaseWhitelist resource.
type HostingPrivatedatabaseWhitelistArgs struct {
	// The whitelisted IP in your instance
	Ip pulumi.StringInput
	// Custom name for your Whitelisted IP
	Name pulumi.StringPtrInput
	// Authorize this IP to access service port
	Service pulumi.BoolInput
	// The internal name of your private database
	ServiceName pulumi.StringInput
	// Authorize this IP to access SFTP port
	Sftp pulumi.BoolInput
}

func (HostingPrivatedatabaseWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostingPrivatedatabaseWhitelistArgs)(nil)).Elem()
}

type HostingPrivatedatabaseWhitelistInput interface {
	pulumi.Input

	ToHostingPrivatedatabaseWhitelistOutput() HostingPrivatedatabaseWhitelistOutput
	ToHostingPrivatedatabaseWhitelistOutputWithContext(ctx context.Context) HostingPrivatedatabaseWhitelistOutput
}

func (*HostingPrivatedatabaseWhitelist) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingPrivatedatabaseWhitelist)(nil)).Elem()
}

func (i *HostingPrivatedatabaseWhitelist) ToHostingPrivatedatabaseWhitelistOutput() HostingPrivatedatabaseWhitelistOutput {
	return i.ToHostingPrivatedatabaseWhitelistOutputWithContext(context.Background())
}

func (i *HostingPrivatedatabaseWhitelist) ToHostingPrivatedatabaseWhitelistOutputWithContext(ctx context.Context) HostingPrivatedatabaseWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingPrivatedatabaseWhitelistOutput)
}

type HostingPrivatedatabaseWhitelistOutput struct{ *pulumi.OutputState }

func (HostingPrivatedatabaseWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingPrivatedatabaseWhitelist)(nil)).Elem()
}

func (o HostingPrivatedatabaseWhitelistOutput) ToHostingPrivatedatabaseWhitelistOutput() HostingPrivatedatabaseWhitelistOutput {
	return o
}

func (o HostingPrivatedatabaseWhitelistOutput) ToHostingPrivatedatabaseWhitelistOutputWithContext(ctx context.Context) HostingPrivatedatabaseWhitelistOutput {
	return o
}

// The whitelisted IP in your instance
func (o HostingPrivatedatabaseWhitelistOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseWhitelist) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Custom name for your Whitelisted IP
func (o HostingPrivatedatabaseWhitelistOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseWhitelist) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Authorize this IP to access service port
func (o HostingPrivatedatabaseWhitelistOutput) Service() pulumi.BoolOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseWhitelist) pulumi.BoolOutput { return v.Service }).(pulumi.BoolOutput)
}

// The internal name of your private database
func (o HostingPrivatedatabaseWhitelistOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseWhitelist) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Authorize this IP to access SFTP port
func (o HostingPrivatedatabaseWhitelistOutput) Sftp() pulumi.BoolOutput {
	return o.ApplyT(func(v *HostingPrivatedatabaseWhitelist) pulumi.BoolOutput { return v.Sftp }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostingPrivatedatabaseWhitelistInput)(nil)).Elem(), &HostingPrivatedatabaseWhitelist{})
	pulumi.RegisterOutputType(HostingPrivatedatabaseWhitelistOutput{})
}
