// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectDatabaseUser struct {
	pulumi.CustomResourceState

	// Id of the database cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the engine of the service
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Name of the user
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the user
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	ServiceName   pulumi.StringPtrOutput `pulumi:"serviceName"`
	// Current status of the user
	Status   pulumi.StringOutput                       `pulumi:"status"`
	Timeouts CloudProjectDatabaseUserTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudProjectDatabaseUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectDatabaseUser
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseUser gets an existing CloudProjectDatabaseUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseUser, error) {
	var resource CloudProjectDatabaseUser
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseUser resources.
type cloudProjectDatabaseUserState struct {
	// Id of the database cluster
	ClusterId *string `pulumi:"clusterId"`
	// Date of the creation of the user
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the engine of the service
	Engine *string `pulumi:"engine"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Password of the user
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	ServiceName   *string `pulumi:"serviceName"`
	// Current status of the user
	Status   *string                           `pulumi:"status"`
	Timeouts *CloudProjectDatabaseUserTimeouts `pulumi:"timeouts"`
}

type CloudProjectDatabaseUserState struct {
	// Id of the database cluster
	ClusterId pulumi.StringPtrInput
	// Date of the creation of the user
	CreatedAt pulumi.StringPtrInput
	// Name of the engine of the service
	Engine pulumi.StringPtrInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Password of the user
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	// Current status of the user
	Status   pulumi.StringPtrInput
	Timeouts CloudProjectDatabaseUserTimeoutsPtrInput
}

func (CloudProjectDatabaseUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseUserState)(nil)).Elem()
}

type cloudProjectDatabaseUserArgs struct {
	// Id of the database cluster
	ClusterId string `pulumi:"clusterId"`
	// Name of the engine of the service
	Engine string `pulumi:"engine"`
	// Name of the user
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string                           `pulumi:"passwordReset"`
	ServiceName   *string                           `pulumi:"serviceName"`
	Timeouts      *CloudProjectDatabaseUserTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudProjectDatabaseUser resource.
type CloudProjectDatabaseUserArgs struct {
	// Id of the database cluster
	ClusterId pulumi.StringInput
	// Name of the engine of the service
	Engine pulumi.StringInput
	// Name of the user
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	Timeouts      CloudProjectDatabaseUserTimeoutsPtrInput
}

func (CloudProjectDatabaseUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseUserArgs)(nil)).Elem()
}

type CloudProjectDatabaseUserInput interface {
	pulumi.Input

	ToCloudProjectDatabaseUserOutput() CloudProjectDatabaseUserOutput
	ToCloudProjectDatabaseUserOutputWithContext(ctx context.Context) CloudProjectDatabaseUserOutput
}

func (*CloudProjectDatabaseUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseUser)(nil)).Elem()
}

func (i *CloudProjectDatabaseUser) ToCloudProjectDatabaseUserOutput() CloudProjectDatabaseUserOutput {
	return i.ToCloudProjectDatabaseUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseUser) ToCloudProjectDatabaseUserOutputWithContext(ctx context.Context) CloudProjectDatabaseUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseUserOutput)
}

type CloudProjectDatabaseUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseUser)(nil)).Elem()
}

func (o CloudProjectDatabaseUserOutput) ToCloudProjectDatabaseUserOutput() CloudProjectDatabaseUserOutput {
	return o
}

func (o CloudProjectDatabaseUserOutput) ToCloudProjectDatabaseUserOutputWithContext(ctx context.Context) CloudProjectDatabaseUserOutput {
	return o
}

// Id of the database cluster
func (o CloudProjectDatabaseUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user
func (o CloudProjectDatabaseUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the engine of the service
func (o CloudProjectDatabaseUserOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Name of the user
func (o CloudProjectDatabaseUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the user
func (o CloudProjectDatabaseUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabaseUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

func (o CloudProjectDatabaseUserOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Current status of the user
func (o CloudProjectDatabaseUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectDatabaseUserOutput) Timeouts() CloudProjectDatabaseUserTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseUser) CloudProjectDatabaseUserTimeoutsPtrOutput { return v.Timeouts }).(CloudProjectDatabaseUserTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseUserInput)(nil)).Elem(), &CloudProjectDatabaseUser{})
	pulumi.RegisterOutputType(CloudProjectDatabaseUserOutput{})
}
