// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DbaasLogsToken struct {
	pulumi.CustomResourceState

	// Cluster ID
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Token creation
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Token name
	Name pulumi.StringOutput `pulumi:"name"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Token used
	TokenId pulumi.StringOutput `pulumi:"tokenId"`
	// Token last update
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Token value
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewDbaasLogsToken registers a new resource with the given unique name, arguments, and options.
func NewDbaasLogsToken(ctx *pulumi.Context,
	name string, args *DbaasLogsTokenArgs, opts ...pulumi.ResourceOption) (*DbaasLogsToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DbaasLogsToken
	err = ctx.RegisterPackageResource("ovh:index/dbaasLogsToken:DbaasLogsToken", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbaasLogsToken gets an existing DbaasLogsToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbaasLogsToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbaasLogsTokenState, opts ...pulumi.ResourceOption) (*DbaasLogsToken, error) {
	var resource DbaasLogsToken
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/dbaasLogsToken:DbaasLogsToken", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbaasLogsToken resources.
type dbaasLogsTokenState struct {
	// Cluster ID
	ClusterId *string `pulumi:"clusterId"`
	// Token creation
	CreatedAt *string `pulumi:"createdAt"`
	// Token name
	Name *string `pulumi:"name"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
	// Token used
	TokenId *string `pulumi:"tokenId"`
	// Token last update
	UpdatedAt *string `pulumi:"updatedAt"`
	// Token value
	Value *string `pulumi:"value"`
}

type DbaasLogsTokenState struct {
	// Cluster ID
	ClusterId pulumi.StringPtrInput
	// Token creation
	CreatedAt pulumi.StringPtrInput
	// Token name
	Name pulumi.StringPtrInput
	// Service name
	ServiceName pulumi.StringPtrInput
	// Token used
	TokenId pulumi.StringPtrInput
	// Token last update
	UpdatedAt pulumi.StringPtrInput
	// Token value
	Value pulumi.StringPtrInput
}

func (DbaasLogsTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasLogsTokenState)(nil)).Elem()
}

type dbaasLogsTokenArgs struct {
	// Cluster ID
	ClusterId *string `pulumi:"clusterId"`
	// Token name
	Name *string `pulumi:"name"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a DbaasLogsToken resource.
type DbaasLogsTokenArgs struct {
	// Cluster ID
	ClusterId pulumi.StringPtrInput
	// Token name
	Name pulumi.StringPtrInput
	// Service name
	ServiceName pulumi.StringInput
}

func (DbaasLogsTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasLogsTokenArgs)(nil)).Elem()
}

type DbaasLogsTokenInput interface {
	pulumi.Input

	ToDbaasLogsTokenOutput() DbaasLogsTokenOutput
	ToDbaasLogsTokenOutputWithContext(ctx context.Context) DbaasLogsTokenOutput
}

func (*DbaasLogsToken) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasLogsToken)(nil)).Elem()
}

func (i *DbaasLogsToken) ToDbaasLogsTokenOutput() DbaasLogsTokenOutput {
	return i.ToDbaasLogsTokenOutputWithContext(context.Background())
}

func (i *DbaasLogsToken) ToDbaasLogsTokenOutputWithContext(ctx context.Context) DbaasLogsTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasLogsTokenOutput)
}

type DbaasLogsTokenOutput struct{ *pulumi.OutputState }

func (DbaasLogsTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasLogsToken)(nil)).Elem()
}

func (o DbaasLogsTokenOutput) ToDbaasLogsTokenOutput() DbaasLogsTokenOutput {
	return o
}

func (o DbaasLogsTokenOutput) ToDbaasLogsTokenOutputWithContext(ctx context.Context) DbaasLogsTokenOutput {
	return o
}

// Cluster ID
func (o DbaasLogsTokenOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Token creation
func (o DbaasLogsTokenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Token name
func (o DbaasLogsTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Service name
func (o DbaasLogsTokenOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Token used
func (o DbaasLogsTokenOutput) TokenId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.TokenId }).(pulumi.StringOutput)
}

// Token last update
func (o DbaasLogsTokenOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Token value
func (o DbaasLogsTokenOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsToken) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasLogsTokenInput)(nil)).Elem(), &DbaasLogsToken{})
	pulumi.RegisterOutputType(DbaasLogsTokenOutput{})
}
