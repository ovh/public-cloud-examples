// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectGateway struct {
	pulumi.CustomResourceState

	// External information of the gateway
	ExternalInformations CloudProjectGatewayExternalInformationArrayOutput `pulumi:"externalInformations"`
	// Interfaces list of the gateway
	Interfaces CloudProjectGatewayInterfaceTypeArrayOutput `pulumi:"interfaces"`
	Model      pulumi.StringOutput                         `pulumi:"model"`
	Name       pulumi.StringOutput                         `pulumi:"name"`
	NetworkId  pulumi.StringOutput                         `pulumi:"networkId"`
	Region     pulumi.StringOutput                         `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrOutput `pulumi:"serviceName"`
	Status      pulumi.StringOutput    `pulumi:"status"`
	SubnetId    pulumi.StringOutput    `pulumi:"subnetId"`
}

// NewCloudProjectGateway registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectGateway(ctx *pulumi.Context,
	name string, args *CloudProjectGatewayArgs, opts ...pulumi.ResourceOption) (*CloudProjectGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Model == nil {
		return nil, errors.New("invalid value for required argument 'Model'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudProjectGateway
	err = ctx.RegisterPackageResource("ovh:index/cloudProjectGateway:CloudProjectGateway", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectGateway gets an existing CloudProjectGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectGatewayState, opts ...pulumi.ResourceOption) (*CloudProjectGateway, error) {
	var resource CloudProjectGateway
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("ovh:index/cloudProjectGateway:CloudProjectGateway", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectGateway resources.
type cloudProjectGatewayState struct {
	// External information of the gateway
	ExternalInformations []CloudProjectGatewayExternalInformation `pulumi:"externalInformations"`
	// Interfaces list of the gateway
	Interfaces []CloudProjectGatewayInterfaceType `pulumi:"interfaces"`
	Model      *string                            `pulumi:"model"`
	Name       *string                            `pulumi:"name"`
	NetworkId  *string                            `pulumi:"networkId"`
	Region     *string                            `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	Status      *string `pulumi:"status"`
	SubnetId    *string `pulumi:"subnetId"`
}

type CloudProjectGatewayState struct {
	// External information of the gateway
	ExternalInformations CloudProjectGatewayExternalInformationArrayInput
	// Interfaces list of the gateway
	Interfaces CloudProjectGatewayInterfaceTypeArrayInput
	Model      pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	NetworkId  pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
	SubnetId    pulumi.StringPtrInput
}

func (CloudProjectGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectGatewayState)(nil)).Elem()
}

type cloudProjectGatewayArgs struct {
	Model     string  `pulumi:"model"`
	Name      *string `pulumi:"name"`
	NetworkId string  `pulumi:"networkId"`
	Region    string  `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	SubnetId    string  `pulumi:"subnetId"`
}

// The set of arguments for constructing a CloudProjectGateway resource.
type CloudProjectGatewayArgs struct {
	Model     pulumi.StringInput
	Name      pulumi.StringPtrInput
	NetworkId pulumi.StringInput
	Region    pulumi.StringInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	SubnetId    pulumi.StringInput
}

func (CloudProjectGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectGatewayArgs)(nil)).Elem()
}

type CloudProjectGatewayInput interface {
	pulumi.Input

	ToCloudProjectGatewayOutput() CloudProjectGatewayOutput
	ToCloudProjectGatewayOutputWithContext(ctx context.Context) CloudProjectGatewayOutput
}

func (*CloudProjectGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectGateway)(nil)).Elem()
}

func (i *CloudProjectGateway) ToCloudProjectGatewayOutput() CloudProjectGatewayOutput {
	return i.ToCloudProjectGatewayOutputWithContext(context.Background())
}

func (i *CloudProjectGateway) ToCloudProjectGatewayOutputWithContext(ctx context.Context) CloudProjectGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectGatewayOutput)
}

type CloudProjectGatewayOutput struct{ *pulumi.OutputState }

func (CloudProjectGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectGateway)(nil)).Elem()
}

func (o CloudProjectGatewayOutput) ToCloudProjectGatewayOutput() CloudProjectGatewayOutput {
	return o
}

func (o CloudProjectGatewayOutput) ToCloudProjectGatewayOutputWithContext(ctx context.Context) CloudProjectGatewayOutput {
	return o
}

// External information of the gateway
func (o CloudProjectGatewayOutput) ExternalInformations() CloudProjectGatewayExternalInformationArrayOutput {
	return o.ApplyT(func(v *CloudProjectGateway) CloudProjectGatewayExternalInformationArrayOutput {
		return v.ExternalInformations
	}).(CloudProjectGatewayExternalInformationArrayOutput)
}

// Interfaces list of the gateway
func (o CloudProjectGatewayOutput) Interfaces() CloudProjectGatewayInterfaceTypeArrayOutput {
	return o.ApplyT(func(v *CloudProjectGateway) CloudProjectGatewayInterfaceTypeArrayOutput { return v.Interfaces }).(CloudProjectGatewayInterfaceTypeArrayOutput)
}

func (o CloudProjectGatewayOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

func (o CloudProjectGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudProjectGatewayOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o CloudProjectGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Service name of the resource representing the id of the cloud project.
func (o CloudProjectGatewayOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringPtrOutput { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o CloudProjectGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudProjectGatewayOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectGateway) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectGatewayInput)(nil)).Elem(), &CloudProjectGateway{})
	pulumi.RegisterOutputType(CloudProjectGatewayOutput{})
}
